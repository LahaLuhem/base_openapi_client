{
  "swagger": "2.0",
  "info": {
    "version": "v1.16",
    "title": "Mavis API",
    "description": "REST API to use Mavis functionality.</br> </br> <i> Please be advised: API requests without an Content-type header (i.e. \"Content-type: application/json;v=x.x\") will be routed automatically to the latest API-version. </i> </br> <div class=\"release-notes\">Changes and additions compared to previous versions:</div></br> - GET / POST <a href=\"?deepLinking=true#/Budget/BudgetOverviewForUser\">Budget/BudgetOverviewForUser</a>: The endpoint that can be used to generate the budget overview for a webshop user is changed from GET to POST. This makes it possible to send requests with a large number of products, which previously resulted in unreliable responses when using the GET-routing.</br></br> - GET <a href=\"?deepLinking=true#/Product/PromotionalPrice\">Product/PromotionalPrice</a>: start date and (optional) end date for promotional price added to respons.</br></br>- PUT <a href=\"?deepLinking=true#/ProductSelection/UpdateCategoryInBudget\">ProductSelection/Category</a>: Updating category in budget now requires an additional parameter \"BudgetType\", due to the possibility user has both an amount and a quantity budget. </br></br>- GET <a href=\"?deepLinking=true#/WebUser/GetWebUsers\">WebshopUser/Store</a>: Get all webshopusers for a specific store.</br></br>- GET <a href=\"?deepLinking=true#/WorkOrder\">WorkOrder</a>: requests for (active) work orders now return an update WorkOrder-model, without a ProductId (this property is no longer used in Mavis). In addition, unsuccesful requests are now better handled. </br></br>- GET <a href=\"?deepLinking=true#/Webshop/CustomerSpecific\">Webshop/CustomerSpecific</a>: Get customer specific information like default company and branch. </br></br>- GET <a href=\"?deepLinking=true#/Crm/GetAppointmentById\">CRM/Appointment/{appointmentId}</a>: Get specific appointment by its appointment ID. </br></br>- Added Model V1_16.Employee which consists of 2 additions: EmployeeStartDate and EmployeeEndDate. </br></br>- All endpoints using model V1_2.Employee have been changed to return V1_16.Employee, this includes: </br> - GET <a href=\"?deepLinking=true#/Employee/GetAllCompanyEmployeesV1_16\">Employee</a> </br> - GET <a href=\"?deepLinking=true#/Employee/GetEmployeeV1_16\">Employee/{employeeId}</a> </br> - GET <a href=\"?deepLinking=true#/Employee/GetAllSalesPersonsV1_16\">Employee/SalesPerson</a> </br> - GET <a href=\"?deepLinking=true#/Employee/SalesPersonByIdV1_16\">Employee/SalesPerson/{employeeId}</a> </br></br>"
  },
  "paths": {
    "/api/Account": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get the account information of the user.",
        "operationId": "GetInfo",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Account information",
            "schema": {
              "$ref": "#/definitions/AccountInfo"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Account/Token": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Login the API.",
        "operationId": "Token",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "Login information",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Login"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Account/EmployeeLogin": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Get account info of employee.",
        "operationId": "EmployeeLogin",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15"
        ],
        "parameters": [
          {
            "name": "loginRequest",
            "in": "body",
            "description": "Login details of employee for specified app",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EmployeeLoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account info succesfully returned",
            "schema": {
              "$ref": "#/definitions/AccountInfo"
            }
          },
          "204": {
            "description": "No account info applicable for request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Address/CheckPostalcode": {
      "get": {
        "tags": [
          "Address"
        ],
        "summary": "Validate dutch address",
        "operationId": "CheckPostalcode",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "parameters": [
          {
            "name": "postalCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "houseNumber",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "houseNumberAddition",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Validated address information returned",
            "schema": {
              "$ref": "#/definitions/CheckedAddress"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "No address information found"
          }
        }
      }
    },
    "/api/Address/CheckPostalcodeBE": {
      "get": {
        "tags": [
          "Address"
        ],
        "summary": "Validate belgian address",
        "operationId": "CheckPostalcodeBE",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "parameters": [
          {
            "name": "postalArea",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "streetName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "houseNumber",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Validated address information returned",
            "schema": {
              "$ref": "#/definitions/CheckedAddress"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "No address information found"
          }
        }
      }
    },
    "/api/Appointments/ChangedAppointments": {
      "get": {
        "tags": [
          "Appointment"
        ],
        "summary": "Get a list of all changed appointments from given sync state",
        "operationId": "ChangedAppointments",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "parameters": [
          {
            "name": "Account",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EWSAccount"
            }
          },
          {
            "name": "SyncState",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Changed appointments returned",
            "schema": {
              "$ref": "#/definitions/SyncAppointments"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Appointments/Appointment": {
      "post": {
        "tags": [
          "Appointment"
        ],
        "summary": "Updates or Creates a appointment",
        "operationId": "Appointment",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "parameters": [
          {
            "name": "Account",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EWSAccount"
            }
          },
          {
            "name": "Start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "End",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "Subject",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "Body",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "Status",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "CategoryId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Category",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "Location",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ExchangeID",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ErpID",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "appointment updated, exchangeID returned",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Attachment": {
      "get": {
        "tags": [
          "Attachment"
        ],
        "summary": "Get attached file for specified type, reference and sequenceId",
        "operationId": "GetAttachment",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13"
        ],
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "(Only required when using Mavis DMS.) Attachment type, with 1 = Order, 2 = Customer, 3 = Direct debit mandate, 4 = Collection advance notice, 5 = Work order, \r\n 6 = Creditor invoice, 7 = Debtor invoice, 8 = Supplier, 9 = Counter receipt, 10 = Purchase order, 11 = Production order, 12 = Employee, \r\n 13 = Customer employee, 14 = Webshop user, 15 = Term invoice, 16 = Term invoice details, 17 = Delivery, 18 = EDI, 19 = Collected purchase order, \r\n 20 = Return order, 21 = Sizes form, 22 = VAT declaration, 23 = Banking entry, 24 = Complaint, 25 = Internal entry, 26 = Journal entry, \r\n 27 = Appointment",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "reference",
            "in": "query",
            "description": "Reference to item to which the file is attached",
            "required": false,
            "type": "string"
          },
          {
            "name": "sequenceId",
            "in": "query",
            "description": "(Only required when using Mavis DMS.) Sequence ID of attached file, in case there are multiple documents attached to referenced item",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Attached file returned",
            "schema": {
              "type": "file"
            }
          },
          "204": {
            "description": "Attached file not found"
          },
          "206": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "Attachment"
        ],
        "summary": "Delete attachment file",
        "operationId": "DeleteAttachment",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "(Only required when using Mavis DMS.) Attachment type, with 1 = Order, 2 = Customer, 3 = Direct debit mandate, 4 = Collection advance notice, 5 = Work order, \r\n 6 = Creditor invoice, 7 = Debtor invoice, 8 = Supplier, 9 = Counter receipt, 10 = Purchase order, 11 = Production order, 12 = Employee, \r\n 13 = Customer employee, 14 = Webshop user, 15 = Term invoice, 16 = Term invoice details, 17 = Delivery, 18 = EDI, 19 = Collected purchase order, \r\n 20 = Return order, 21 = Sizes form, 22 = VAT declaration, 23 = Banking entry, 24 = Complaint, 25 = Internal entry, 26 = Journal entry, \r\n 27 = Appointment",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "reference",
            "in": "query",
            "description": "Reference to item to which the file is attached",
            "required": false,
            "type": "string"
          },
          {
            "name": "sequenceId",
            "in": "query",
            "description": "(Only required when using Mavis DMS.) Sequence ID of attached file, in case there are multiple documents attached to referenced item",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "202": {
            "description": "Attached file succesfully deleted.",
            "schema": {
              "type": "boolean"
            }
          },
          "204": {
            "description": "Attached file not found and / or not deleted."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Branch": {
      "get": {
        "tags": [
          "Branch"
        ],
        "summary": "Get a list of all branches.",
        "operationId": "GetBranches",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Branches returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1_14.BranchInformation"
              }
            }
          },
          "204": {
            "description": "No branch found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Branch/{companyId}": {
      "get": {
        "tags": [
          "Branch"
        ],
        "summary": "Get a list of all branches for a specified companyId.",
        "operationId": "GetCompanyBranched",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Get companyId from <a href=\"?filter=Company\">/api/Company</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Branches returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1_14.BranchInformation"
              }
            }
          },
          "204": {
            "description": "No branch"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Branch/{companyId}/{branchId}": {
      "get": {
        "tags": [
          "Branch"
        ],
        "summary": "Get branch by company/branch id.",
        "operationId": "GetSingleBranchById",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Get companyId from <a href=\"?filter=Company\">/api/Company</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "branchId",
            "in": "path",
            "description": "Get branchId from <a href=\"?filter=Branch\">/api/Branch</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Branch returned",
            "schema": {
              "$ref": "#/definitions/V1_14.BranchInformation"
            }
          },
          "204": {
            "description": "Branch not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Budget/{lsoort}/{debinr}": {
      "get": {
        "tags": [
          "Budget"
        ],
        "summary": "Gets all available budgets of customer",
        "operationId": "GetAllBudgetsForCustomer",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11"
        ],
        "parameters": [
          {
            "name": "lsoort",
            "in": "path",
            "description": "Get store ID from <a href=\"?deepLinking=true#/Webshop/Get\">/api/Webshop</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "debinr",
            "in": "path",
            "description": "Get customer ID from <a href=\"?deepLinking=true#/Customer/Get\">/api/Customer</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/Budget"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Budget/{lsoort}/{debinr}/{medwnr}": {
      "get": {
        "tags": [
          "Budget"
        ],
        "summary": "Gets budget usage of selected employee",
        "operationId": "GetBudgetUsageForUser",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11"
        ],
        "parameters": [
          {
            "name": "lsoort",
            "in": "path",
            "description": "Get store ID from <a href=\"?deepLinking=true#/Webshop/Get\">/api/Webshop</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "debinr",
            "in": "path",
            "description": "Get customer ID from <a href=\"?deepLinking=true#/Customer/Get\">/api/Customer</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "medwnr",
            "in": "path",
            "description": "Get employeeId from <a href=\"?deepLinking=true&urls.primaryName=v1.2#/Employee/Get\">/api/Employee</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/UmsModels.BudgetUsage"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Budget/BudgetOverview": {
      "post": {
        "tags": [
          "Budget"
        ],
        "summary": "Generate budget overview for specified user",
        "operationId": "BudgetOverviewForUser",
        "consumes": [
          "application/json;v=1.16"
        ],
        "produces": [
          "application/json;v=1.16"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Request with data to generate budget overview",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BudgetOverviewRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Budget overview returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1_11.BudgetOverview"
              }
            }
          },
          "204": {
            "description": "No budget overview generated"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Budget/active/{lsoort}/{debinr}/{medwnr}": {
      "get": {
        "tags": [
          "Budget"
        ],
        "summary": "Gets usage of active budget of specified employee",
        "operationId": "GetActiveBudgetUsageForUser",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11"
        ],
        "parameters": [
          {
            "name": "lsoort",
            "in": "path",
            "description": "Get store ID from <a href=\"?deepLinking=true#/Webshop/Get\">/api/Webshop</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "debinr",
            "in": "path",
            "description": "Get customer ID from <a href=\"?deepLinking=true#/Customer/Get\">/api/Customer</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "medwnr",
            "in": "path",
            "description": "Get employeeId from <a href=\"?deepLinking=true&urls.primaryName=v1.2#/Employee/Get\">/api/Employee</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/UmsModels.BudgetUsage"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Budget/{bgtpnr}": {
      "get": {
        "tags": [
          "Budget"
        ],
        "summary": "Gets specific budget",
        "operationId": "GetBudgetById",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11"
        ],
        "parameters": [
          {
            "name": "bgtpnr",
            "in": "path",
            "description": "Budget type ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Budget"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Budget/enddate/{bgtpnr}/{stardd}": {
      "get": {
        "tags": [
          "Budget"
        ],
        "summary": "Gets enddate of specific budget",
        "operationId": "GetBudgetEndDate",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "parameters": [
          {
            "name": "bgtpnr",
            "in": "path",
            "description": "Budget type ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "stardd",
            "in": "path",
            "description": "Start date of budget",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Budget": {
      "put": {
        "tags": [
          "Budget"
        ],
        "summary": "Update specific budget of employee",
        "operationId": "UpdateBudgetUsage",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "Get store ID from <a href=\"?deepLinking=true#/Webshop/Get\">/api/Webshop</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Get customer ID from <a href=\"?deepLinking=true#/Customer/Get\">/api/Customer</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "employeeId",
            "in": "query",
            "description": "Get employeeId from <a href=\"?deepLinking=true&urls.primaryName=v1.2#/Employee/Get\">/api/Employee</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "budgetId",
            "in": "query",
            "description": "Budget type ID",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date for budget",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "newEnddate",
            "in": "query",
            "description": "New end date for budget",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "budgetAmount",
            "in": "query",
            "description": "Budget amount",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "textChange",
            "in": "query",
            "description": "Description for budget change",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "Budget"
        ],
        "summary": "Adds budget usage for specific budget of employee",
        "operationId": "AddBudgetUsage",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "parameters": [
          {
            "name": "lsoort",
            "in": "query",
            "description": "Get store ID from <a href=\"?deepLinking=true#/Webshop/Get\">/api/Webshop</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "debinr",
            "in": "query",
            "description": "Get customer ID from <a href=\"?deepLinking=true#/Customer/Get\">/api/Customer</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "medwnr",
            "in": "query",
            "description": "Get employeeId from <a href=\"?deepLinking=true&urls.primaryName=v1.2#/Employee/Get\">/api/Employee</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "bgtpnr",
            "in": "query",
            "description": "Budget type ID",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "stardd",
            "in": "query",
            "description": "Start date of budget",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "einddd",
            "in": "query",
            "description": "End date of budget",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "budgbd",
            "in": "query",
            "description": "Budget amount",
            "required": false,
            "type": "number",
            "format": "double"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "Budget"
        ],
        "summary": "Delete budget usage of specific budget of employee",
        "operationId": "DeleteBudgetUsage",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "parameters": [
          {
            "name": "lsoort",
            "in": "query",
            "description": "Get store ID from <a href=\"?deepLinking=true#/Webshop/Get\">/api/Webshop</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "debinr",
            "in": "query",
            "description": "Get customer ID from <a href=\"?deepLinking=true#/Customer/Get\">/api/Customer</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "medwnr",
            "in": "query",
            "description": "Get employeeId from <a href=\"?deepLinking=true&urls.primaryName=v1.2#/Employee/Get\">/api/Employee</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "bgtpnr",
            "in": "query",
            "description": "Budget type ID",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "stardd",
            "in": "query",
            "description": "Start date of budget",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Budget/Deactivate": {
      "put": {
        "tags": [
          "Budget"
        ],
        "summary": "Deactivate specific budget of employee",
        "operationId": "DeActivateBudget",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "parameters": [
          {
            "name": "lsoort",
            "in": "query",
            "description": "Get store ID from <a href=\"?deepLinking=true#/Webshop/Get\">/api/Webshop</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "debinr",
            "in": "query",
            "description": "Get customer ID from <a href=\"?deepLinking=true#/Customer/Get\">/api/Customer</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "medwnr",
            "in": "query",
            "description": "Get employeeId from <a href=\"?deepLinking=true&urls.primaryName=v1.2#/Employee/Get\">/api/Employee</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "bgtpnr",
            "in": "query",
            "description": "Budget type ID",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "stardd",
            "in": "query",
            "description": "Start date of budget",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "user",
            "in": "query",
            "description": "User who deactivated account",
            "required": false,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Company": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Get a list of all companies.",
        "operationId": "GetAllCompanies",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Companies returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/CompanyInformation"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Company/{companyId}": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Get company by id.",
        "operationId": "GetCompanyDetails",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Get companyId from <a href=\"?filter=Company\">/api/Company</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Company returned",
            "schema": {
              "$ref": "#/definitions/CompanyDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Company not found"
          }
        }
      }
    },
    "/api/CostCentre": {
      "get": {
        "tags": [
          "CostCentre"
        ],
        "summary": "Get a list of active cost centres.",
        "operationId": "GetCostCentreLevel",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "description": "Company Id, as retrievable from <a href=\"?deepLinking=true#/Company/GetAllCompanies\">api/Company</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "branchId",
            "in": "query",
            "description": "Branch Id, as retrievable from <a href=\"?deepLinking=true#/Branch/GetAllBranches\">api/Branch</a>",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Cost centres returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/CostCentreLevel"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/CostCentre/{CompanyId}/{CostCentreLevelId}": {
      "get": {
        "tags": [
          "CostCentre"
        ],
        "summary": "Get a list of all cost centres by costcentre level.",
        "operationId": "GetCostCentreLevelById",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "CompanyId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "CostCentreLevelId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Cost centres returned",
            "schema": {
              "$ref": "#/definitions/CostCentreLevel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/CostCentre/PerGeneralLedgerAccount/{CompanyId}/{LedgerAccountNumber}": {
      "get": {
        "tags": [
          "CostCentre"
        ],
        "summary": "Get a list of all required costcentres per general ledger account.",
        "operationId": "PerGeneralLedgerAccount",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "CompanyId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "LedgerAccountNumber",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Cost centres returned",
            "schema": {
              "$ref": "#/definitions/CostCentrePerGeneralLedgerAccount"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/CostType": {
      "get": {
        "tags": [
          "CostType"
        ],
        "summary": "Get a list of all cost types.",
        "operationId": "GetAllCostTypes",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Cost types returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/CostType"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/CostType/{Id}": {
      "get": {
        "tags": [
          "CostType"
        ],
        "summary": "Get a cost type by id.",
        "operationId": "GetCostType",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Get Id from <a href=\"?filter=CostType\">/api/CostType</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Cost type returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/BranchInformation"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/CostType/Category": {
      "get": {
        "tags": [
          "CostType"
        ],
        "summary": "Get cost types for specified category.",
        "operationId": "GetCostTypePerCategory",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "description": "Category for which cost types are requested.",
            "required": false,
            "type": "string",
            "enum": [
              "All",
              "Order",
              "OrderRelease",
              "Invoice",
              "Return",
              "Counter",
              "PurchaseOrder",
              "GoodsReceipt",
              "Rental",
              "Product",
              "WorkOrder",
              "Service"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Cost types for category returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/CostType"
              }
            }
          },
          "204": {
            "description": "No cost types found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Country": {
      "get": {
        "tags": [
          "Country"
        ],
        "summary": "Get a list of all countries.",
        "operationId": "GetAllCountries",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Countries returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/Country"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Country/{countryId}": {
      "get": {
        "tags": [
          "Country"
        ],
        "summary": "Get country by id.",
        "operationId": "GetCountryDetails",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "countryId",
            "in": "path",
            "description": "Get countryId from <a href=\"?deepLinking=true#/Country/GetAllCountries\">/api/Country</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Country returned",
            "schema": {
              "$ref": "#/definitions/V1_9.Country"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Country/{ISO3166}": {
      "get": {
        "tags": [
          "Country"
        ],
        "summary": "Get country by ISO3166 code.",
        "operationId": "GetDetailsByIso3166",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "ISO3166",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Country returned",
            "schema": {
              "$ref": "#/definitions/V1_9.Country"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/CRM/Appointment": {
      "get": {
        "tags": [
          "Crm"
        ],
        "summary": "Retrieve a list of appointments for a specified period, optionally by sales representative and/or status.",
        "operationId": "GetAllAppointments",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date of period",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date of period",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "salesRepresentativeId",
            "in": "query",
            "description": "Sales representative ID for customer, \r\n as retrievable from <a href=\"?deepLinking=true#/Representative/Representative\">/api/Representative</a>.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "visitStatus",
            "in": "query",
            "description": "Appointment status, 10 = scheduled, 20 = fixed, 97 = cancelled, 98 = finished.",
            "required": false,
            "type": "string",
            "default": 0,
            "enum": [
              "Scheduled",
              "Fixed",
              "Cancelled",
              "Finished"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/CrmAppointment"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "Crm"
        ],
        "summary": "Update an existing CRM appointment",
        "operationId": "UpdateAppointment",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Updated details of appointment",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CrmAppointment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "Crm"
        ],
        "summary": "Creates a new appointment.",
        "operationId": "CreateAppointment",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Details of appointment to create",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CrmAppointmentRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/CRM/Appointment/{Id}": {
      "get": {
        "tags": [
          "Crm"
        ],
        "summary": "Retrieve an appointment by its ID.",
        "operationId": "GetAppointmentById",
        "consumes": [
          "application/json;v=1.16"
        ],
        "produces": [
          "application/json;v=1.16"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "ID of the appointment",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CrmAppointment"
            }
          },
          "204": {
            "description": "Requested appointment not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/CRM/Activity": {
      "get": {
        "tags": [
          "Crm"
        ],
        "summary": "Get CRM activities attributed to (follow up) appointments.",
        "operationId": "GetActivities",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/CrmActivity"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Currency/CurrencyCodes": {
      "get": {
        "tags": [
          "Currency"
        ],
        "summary": "Get a list of all available currency codes.",
        "operationId": "CurrencyCodes",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Currencies returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/Currency"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Currency/{CurrencyId}": {
      "get": {
        "tags": [
          "Currency"
        ],
        "summary": "Get a currency by its CurrencyId.",
        "operationId": "CurrencyCodesById",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "CurrencyId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Currency returned",
            "schema": {
              "$ref": "#/definitions/Currency"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Customer": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Get a list of all customers.",
        "operationId": "GetAllBasic",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Customers returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1_15.CustomerBasic"
              }
            }
          },
          "204": {
            "description": "No customers found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Update customer.",
        "operationId": "UpdateCustomer",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15"
        ],
        "parameters": [
          {
            "name": "customer",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/V1_15.Customer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customer updated"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Add customer",
        "operationId": "AddCustomer",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15"
        ],
        "parameters": [
          {
            "name": "customer",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/V1_15.Customer"
            }
          },
          {
            "name": "companyId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Customer created",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Failed to create customer"
          }
        }
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "Delete customer",
        "operationId": "Delete",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "description": "Get customerId from <a href=\"?deepLinking=true&urls.primaryName=v1.2#/Customer/Get\">/api/Customer</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Customer deleted",
            "schema": {
              "type": "boolean"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Failed to delete customer"
          }
        }
      }
    },
    "/api/Customer/SalesRepresentative": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Get all customers for specified sales representative.",
        "operationId": "GetAllCustomersBasicForSalesRep",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15"
        ],
        "parameters": [
          {
            "name": "salesRepresentativeId",
            "in": "query",
            "description": "Employee ID for sales representative for customer, as retrievable from <a href=\"?deepLinking=true#/Representative/Representative\">/api/Representative</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Customers returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1_15.CustomerBasic"
              }
            }
          },
          "204": {
            "description": "No customers found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Customer/{customerId}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Get customer by id.",
        "operationId": "GetById",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Get customer ID from <a href=\"?deepLinking=true#/Customer/GetAll\">/api/Customer</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Customer returned",
            "schema": {
              "$ref": "#/definitions/V1_15.Customer"
            }
          },
          "204": {
            "description": "No customer found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Customer/Enhanced": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Get enchanced customer information for customer, including full shipping method, shipping addresses and contactpersons",
        "operationId": "GetSingleCustomerEnhancedById",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "description": "Get customer ID from <a href=\"?deepLinking=true#/Customer/Get\">/api/Customer</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Customer returned",
            "schema": {
              "$ref": "#/definitions/V1_15.CustomerEnhanced"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Customer/Enhanced/Paged": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Get (paged) enchanced customer information for all customers, including full shipping method, shipping addresses and contactpersons.",
        "operationId": "GetAllCustomersEnhanced",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15"
        ],
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page number for response result",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Number of records in result (max. 1000)",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Customers returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1_15.CustomerEnhanced"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Customer/SearchByIdentification": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Get customers by identification type.",
        "operationId": "GetCustomersByIdentificationType",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Identification for customer, as specified by type",
            "required": false,
            "type": "string"
          },
          {
            "name": "identificationType",
            "in": "query",
            "description": "Type of identifcation (1 = GLN, 2 = VAT, 3 = Chamber of Commerce)",
            "required": false,
            "type": "string",
            "enum": [
              "GLN",
              "Vat",
              "ChamberOfCommerce"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Customers returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1_15.CustomerBasic"
              }
            }
          },
          "204": {
            "description": "No customer found for specified ID"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Customer/CustomerBranche": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Get Branches assigned to Customers",
        "operationId": "CustomerBranche",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "CustomerBranches returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomerBranche"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Customer/ShippingAddress": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Get Addresses assigned to Customers",
        "operationId": "ShippingAddresses",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "description": "Get company ID from <a href=\"?deepLinking=true#/Company/GetAllCompanies\">/api/Company</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Get customer ID from <a href=\"?deepLinking=true#/Customer/GetAllCustomers\">/api/Customer</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Customer addresses returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1_2.ShippingAddress"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Customer/RequestProductPriceList": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Request product price list for specified customer.",
        "operationId": "RequestProductPriceList",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "parameters": [
          {
            "name": "requestPriceList",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/RequestProductPriceList"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "true is request was successful",
            "schema": {
              "type": "boolean"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Customer/DownloadProductPriceList/{fileName}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Download ProductPriceList",
        "operationId": "DownloadProductPriceList",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "path",
            "description": "Filename of requested ProductPriceList",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "File returned successful.",
            "schema": {
              "type": "file"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Customer/CustomerGroup": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Get customer groups",
        "operationId": "GetAllCustomerGroups",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Customer groups returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1_14.CustomerGroup"
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Customer/CustomerGroup/{customerGroupId}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Get customer group",
        "operationId": "CustomerGroupByGroupId",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "parameters": [
          {
            "name": "customerGroupId",
            "in": "path",
            "description": "Get customergroup id from <a href=\"?deepLinking=true&urls.primaryName=v1.2#/Customer/CustomerGroup\">/api/Customer</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Customer group returned",
            "schema": {
              "$ref": "#/definitions/V1_14.CustomerGroup"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Customer/PaymentMethod": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Get payment methods for customer",
        "operationId": "PaymentMethod",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "Get storeId from <a href=\"?deepLinking=true#/Webshop/Store/Get\">/api/Store</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Get customer ID from <a href=\"?deepLinking=true#/Customer/GetAllCustomers\">/api/Customer</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Payment methods for customer returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/PaymentMethod"
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Delivery": {
      "get": {
        "tags": [
          "Delivery"
        ],
        "summary": "Returns deliveries",
        "operationId": "GetAllDeliveries",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "parameters": [
          {
            "name": "StoreId",
            "in": "query",
            "description": "StoreId where order is placed, as retrieved from <a href=\"?filter=Webshop\">/api/Webshop</a>. If StoreId = 0, deliveries for all shops AND those entered in ERP will be returned.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "CompanyId",
            "in": "query",
            "description": "CompanyId as retrieved from <a href=\"?filter=Company\">/api/Company</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "BranchId",
            "in": "query",
            "description": "BranchId as retrieved from <a href=\"?filter=Branch\">/api/Branch</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "CustomerId",
            "in": "query",
            "description": "CustomerId as retrieved from <a href=\"?filter=Customer\">/api/Customer</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "EmployeeId",
            "in": "query",
            "description": "EmployeeId as retrieved from <a href=\"?filter=Employee\">/api/Employee</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "WebshopLogin",
            "in": "query",
            "description": "Login name for user as retrieved from <a href=\"?filter=WebUser\">/api/WebUser</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "OnlyShowOwnData",
            "in": "query",
            "description": "Show only data of specified login / employee",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Start date for requested delivery period",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "End date for requested delivery period",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "SearchQuery.SearchType",
            "in": "query",
            "description": "Search type",
            "required": false,
            "type": "string",
            "enum": [
              "OrderId",
              "CustomerOrderNumber",
              "InvoiceId",
              "ProjectId",
              "ProjectName",
              "ProductId"
            ]
          },
          {
            "name": "SearchQuery.SearchString",
            "in": "query",
            "description": "String upon which underlying records will be searched.",
            "required": false,
            "type": "string",
            "minLength": 2
          },
          {
            "name": "IncludeAdditionalPackagingInformation",
            "in": "query",
            "description": "Include additional packaging information of delivery details (i.e. StandardPackagingQuantity, PackagingPrice) in response. \r\nExecution of request may result in faster respons when turned off. Default is false.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Deliveries succesful returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1_14.Delivery"
              }
            }
          },
          "204": {
            "description": "No deliveries found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "Delivery"
        ],
        "summary": "Create a new delivery.",
        "operationId": "CreateDelivery",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "parameters": [
          {
            "name": "delivery",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/V1_14.Delivery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delivery created succesfully"
          },
          "203": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeliveryResult"
            }
          },
          "204": {
            "description": "Delivery not created"
          },
          "400": {
            "description": "Error creating delivery"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Delivery/Paged": {
      "get": {
        "tags": [
          "Delivery"
        ],
        "summary": "Returns deliveries (paged), optional based on search parameter",
        "operationId": "GetDeliveriesPagedWithSearch",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "parameters": [
          {
            "name": "StoreId",
            "in": "query",
            "description": "StoreId where order is placed, as retrieved from <a href=\"?filter=Webshop\">/api/Webshop</a>. If StoreId = 0, deliveries for all shops AND those entered in ERP will be returned.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "CompanyId",
            "in": "query",
            "description": "CompanyId as retrieved from <a href=\"?filter=Company\">/api/Company</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "BranchId",
            "in": "query",
            "description": "BranchId as retrieved from <a href=\"?filter=Branch\">/api/Branch</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "CustomerId",
            "in": "query",
            "description": "CustomerId as retrieved from <a href=\"?filter=Customer\">/api/Customer</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "EmployeeId",
            "in": "query",
            "description": "EmployeeId as retrieved from <a href=\"?filter=Employee\">/api/Employee</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "WebshopLogin",
            "in": "query",
            "description": "Login name for user as retrieved from <a href=\"?filter=WebUser\">/api/WebUser</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "OnlyShowOwnData",
            "in": "query",
            "description": "Show only data of specified login / employee",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Start date for requested delivery period",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "End date for requested delivery period",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "SearchQuery.SearchType",
            "in": "query",
            "description": "Search type",
            "required": false,
            "type": "string",
            "enum": [
              "OrderId",
              "CustomerOrderNumber",
              "InvoiceId",
              "ProjectId",
              "ProjectName",
              "ProductId"
            ]
          },
          {
            "name": "SearchQuery.SearchString",
            "in": "query",
            "description": "String upon which underlying records will be searched.",
            "required": false,
            "type": "string",
            "minLength": 2
          },
          {
            "name": "IncludeAdditionalPackagingInformation",
            "in": "query",
            "description": "Include additional packaging information of delivery details (i.e. StandardPackagingQuantity, PackagingPrice) in response. \r\nExecution of request may result in faster respons when turned off. Default is false.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page number for response result",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Number of records in result (max. 40)",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Deliveries succesful returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1_14.Delivery"
              }
            }
          },
          "204": {
            "description": "No deliveries found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Delivery/Single": {
      "get": {
        "tags": [
          "Delivery"
        ],
        "summary": "Returns delivery",
        "operationId": "GetSingleDeliveryByRequest",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "parameters": [
          {
            "name": "StoreId",
            "in": "query",
            "description": "StoreId where order is placed, as retrieved from <a href=\"?filter=Webshop\">/api/Webshop</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "CompanyId",
            "in": "query",
            "description": "CompanyId as retrieved from <a href=\"?filter=Company\">/api/Company</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "BranchId",
            "in": "query",
            "description": "BranchId as retrieved from <a href=\"?filter=Branch\">/api/Branch</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "CustomerId",
            "in": "query",
            "description": "CustomerId as retrieved from <a href=\"?filter=Customer\">/api/Customer</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "OrderId",
            "in": "query",
            "description": "OrderId as retrieved from <a href=\"?filter=Order\">/api/Order</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "DeliveryId",
            "in": "query",
            "description": "DeliveryId as retrieved from <a href=\"?filter=Delivery\">/api/Delivery</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Delivery succesful returned",
            "schema": {
              "$ref": "#/definitions/V1_14.Delivery"
            }
          },
          "204": {
            "description": "Delivery not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Delivery/ValidShippingDates": {
      "get": {
        "tags": [
          "Delivery"
        ],
        "summary": "Returns a list of valid shipping dates",
        "operationId": "ValidShippingDates",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "description": "Get companyId from <a href=\"?deepLinking=true#/Company/Get\">/api/Company</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "numberOfDates",
            "in": "query",
            "description": "Number of valid delivery dates to be returned",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Shipping dates returned succesfully",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "format": "date-time",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Error returning shipping dates"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Delivery/DeliveryNote/{companyId}/{branchId}/{orderId}/{deliveryId}": {
      "get": {
        "tags": [
          "Delivery"
        ],
        "summary": "Returns delivery note PDF",
        "operationId": "DeliveryNotePDF",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Get companyId from <a href=\"?deepLinking=true#/Company/Get\">/api/Company</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "branchId",
            "in": "path",
            "description": "Get branchId from <a href=\"?deepLinking=true#/Branch/Get\">/api/Branch</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "Get orderId from <a href=\"?deepLinking=true#/Order/Get\">/api/Order</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "deliveryId",
            "in": "path",
            "description": "Get deliveryId from <a href=\"?deepLinking=true#/Delivery/Get\">/api/Delivery</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "Optional userId for custom report",
            "required": false,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Delivery note succesfully returned",
            "schema": {
              "type": "file"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Delivery/DeliveryCondition": {
      "get": {
        "tags": [
          "Delivery"
        ],
        "summary": "Get delivery conditions",
        "operationId": "GetAllDeliveryConditions",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "description": "Get ID from <a href=\"?deepLinking=true#/Company/Get\">/api/Company</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "languageId",
            "in": "query",
            "description": "Get ID from <a href=\"?deepLinking=true#/Language/Get\">/api/Language</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Delivery conditions returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1_2.DeliveryCondition"
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Delivery/DeliveryCondition/{companyId}/{languageId}/{deliveryConditionId}": {
      "get": {
        "tags": [
          "Delivery"
        ],
        "summary": "Get delivery condition",
        "operationId": "GetDeliveryCondition",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Get ID from <a href=\"?deepLinking=true#/Company/Get\">/api/Company</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "languageId",
            "in": "path",
            "description": "Get ID from <a href=\"?deepLinking=true#/Language/Get\">/api/Language</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "deliveryConditionId",
            "in": "path",
            "description": "Get ID from <a href=\"?deepLinking=true&urls.primaryName=v1.2#/Delivery/DeliveryCondition\">/api/Delivery</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Delivery conditions returned",
            "schema": {
              "$ref": "#/definitions/V1_2.DeliveryCondition"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/DocumentType": {
      "get": {
        "tags": [
          "DocumentType"
        ],
        "summary": "Get a list of all document types.",
        "operationId": "GetAllDocumentTypes",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Document types returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/DocumentType"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/DocumentType/{Id}": {
      "get": {
        "tags": [
          "DocumentType"
        ],
        "summary": "Get documenttype by id.",
        "operationId": "GetDocumentById",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Document type returned",
            "schema": {
              "$ref": "#/definitions/DocumentType"
            }
          },
          "204": {
            "description": "Document type not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Employee": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get company's employees, optionally for specific job role\r\n(0 = all employees, 1 = Sales person, 2 = Purchaser, 3 = Sales representative, 4 = Market segment manager, 5 = Inspector,\r\n 6 = Order picker, 7 = Mechanic, 8 = Goods receiver, 9 = Counter employee, 10 = Stock responsible",
        "operationId": "GetAllCompanyEmployeesV1_16",
        "consumes": [
          "application/json;v=1.16"
        ],
        "produces": [
          "application/json;v=1.16"
        ],
        "parameters": [
          {
            "name": "jobRoleId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Employees returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1_16.Employee"
              }
            }
          },
          "204": {
            "description": "No employees found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Employee/{employeeId}": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get company's employee by ID",
        "operationId": "GetEmployeeV1_16",
        "consumes": [
          "application/json;v=1.16"
        ],
        "produces": [
          "application/json;v=1.16"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "description": "Employee ID, as retrievable from <a href=\"?deepLinking=true#/Employee/GetAllCompanyEmployees\">/api/Employee</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1_16.Employee"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Employee/CustomerEmployee/{customerId}": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get customer employees for specified customer",
        "operationId": "GetCustomerEmployeesV111",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Get customerId from <a href=\"?deepLinking=true&urls.primaryName=v1.2#/Customer/Get\">/api/Customer</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "onlyContacts",
            "in": "query",
            "description": "Get only employees that are registered as contact person",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Employee returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1_11.CustomerEmployee"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Employee/CustomerEmployee/All": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get customer employees for all customers",
        "operationId": "GetAllCustomerEmployeesV111",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11"
        ],
        "parameters": [
          {
            "name": "onlyContacts",
            "in": "query",
            "description": "Get only employees that are registered as contact person",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Employee returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1_11.CustomerEmployee"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "No employees found with the supplied data."
          }
        }
      }
    },
    "/api/Employee/CustomerEmployee": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get customer employee",
        "operationId": "GetCustomerEmployeeV111ById",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "description": "Get customerId from <a href=\"?deepLinking=true&urls.primaryName=v1.2#/Customer/Get\">/api/Customer</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "employeeId",
            "in": "query",
            "description": "Get employeeId from <a href=\"?deepLinking=true&urls.primaryName=v1.2#/Employee/Get\">/api/Employee</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Employee returned",
            "schema": {
              "$ref": "#/definitions/V1_11.CustomerEmployee"
            }
          },
          "204": {
            "description": "No active employee found with the supplied data."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "Employee"
        ],
        "summary": "Update customer employee",
        "operationId": "UpdateCustomerEmployee",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11"
        ],
        "parameters": [
          {
            "name": "customerEmployee",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/V1_11.CustomerEmployee"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Employee returned",
            "schema": {
              "type": "boolean"
            }
          },
          "204": {
            "description": "No active employee found with the supplied data."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Add customer employee",
        "operationId": "AddCustomerEmployeeV111",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11"
        ],
        "parameters": [
          {
            "name": "customerEmployee",
            "in": "body",
            "description": "Customer employee",
            "required": false,
            "schema": {
              "$ref": "#/definitions/V1_11.CustomerEmployee"
            }
          },
          {
            "name": "companyId",
            "in": "query",
            "description": "Get companyId from <a href=\"?deepLinking=true#/Company/GetAllCompanies\">/api/Company</a>",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Employee returned",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          "204": {
            "description": "No active employee found with the supplied data."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "Employee"
        ],
        "summary": "Delete customer employee",
        "operationId": "DeleteCustomerEmployee",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "description": "Get customerId from <a href=\"?deepLinking=true&urls.primaryName=v1.2#/Customer/Get\">/api/Customer</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "employeeId",
            "in": "query",
            "description": "Get employeeId from <a href=\"?deepLinking=true&urls.primaryName=v1.2#/Employee/Get\">/api/Employee</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Employee returned",
            "schema": {
              "type": "boolean"
            }
          },
          "204": {
            "description": "No active employee found with the supplied data."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Employee/UMS/{companyId}/{storeId}/{customerId}/{employeeId}": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get Employee for UMS",
        "operationId": "GetCustomerUMSEmployeeById",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Get companyId from <a href=\"?deepLinking=true#/Company/Get\">/api/Company</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "storeId",
            "in": "path",
            "description": "Get storeId from <a href=\"?deepLinking=true#/Webshop/Store/Get\">/api/Store</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Get customerId from <a href=\"?deepLinking=true#/Customer/Get\">/api/Customer</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "description": "Get employeeId from <a href=\"?deepLinking=true&urls.primaryName=v1.2#/Employee/Get\">/api/Employee</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully retrieved employee.",
            "schema": {
              "$ref": "#/definitions/UmsModels.V1_15.Employee"
            }
          },
          "204": {
            "description": "No active employee found with the supplied data."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Employee/UMS/{companyId}/{storeId}/{customerId}": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get employees of selected customer for UMS",
        "operationId": "GetCustomerEmployeesForUMS",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Get companyId from <a href=\"?deepLinking=true#/Company/Get\">/api/Company</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "storeId",
            "in": "path",
            "description": "Get storeId from <a href=\"?deepLinking=true#/Webshop/Store/Get\">/api/Store</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Get customerId from <a href=\"?deepLinking=true#/Customer/Get\">/api/Customer</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/UmsModels.Employee"
              }
            }
          },
          "204": {
            "description": "No active employee found with the supplied data."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Employee/UMS/EmployeeDictionary/{companyId}/{storeId}/{customerId}": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get employee dictionary of selected customer for UMS",
        "operationId": "GetUMSEmployeeDictionaryForCustomer",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Get companyId from <a href=\"?deepLinking=true#/Company/Get\">/api/Company</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "storeId",
            "in": "path",
            "description": "Get storeId from <a href=\"?deepLinking=true#/Webshop/Store/Get\">/api/Store</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Get customerId from <a href=\"?deepLinking=true#/Customer/Get\">/api/Customer</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/UmsModels.V1_15.Employee"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Employee/SalesPerson": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get Sales persons",
        "operationId": "GetAllSalesPersonsV1_16",
        "consumes": [
          "application/json;v=1.16"
        ],
        "produces": [
          "application/json;v=1.16"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Sales persons returned",
            "schema": {
              "$ref": "#/definitions/V1_16.Employee"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Employee/SalesPerson/{employeeId}": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get Sales person by employee ID",
        "operationId": "SalesPersonByIdV1_16",
        "consumes": [
          "application/json;v=1.16"
        ],
        "produces": [
          "application/json;v=1.16"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "description": "Get ID from <a href=\"?deepLinking=true#/Employee/GetAllCompanyEmployees\">/api/Employee</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Sales person returned",
            "schema": {
              "$ref": "#/definitions/V1_16.Employee"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Employee/Title": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get titles",
        "operationId": "GetAllTitles",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Titles returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1_2.Title"
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Employee/Title/{titleId}": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get title by ID",
        "operationId": "TitleById",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "titleId",
            "in": "path",
            "description": "Get ID from <a href=\"?deepLinking=true&urls.primaryName=v1.2#/Employee/Title/Get\">/api/Employee/Title</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Title returned",
            "schema": {
              "$ref": "#/definitions/V1_2.Title"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Employee/Role": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get roles",
        "operationId": "GetAllRoles",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Roles returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1_2.Role"
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Employee/Role/{roleId}": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get role by ID",
        "operationId": "GetRoleById",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "description": "Get ID from <a href=\"?deepLinking=true&urls.primaryName=v1.2#/Employee/Role/Get\">/api/Employee/Role</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Role returned",
            "schema": {
              "$ref": "#/definitions/V1_2.Role"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/hotlist/Hotlist": {
      "get": {
        "tags": [
          "Hotlist"
        ],
        "summary": "Get hotlist",
        "operationId": "HotListDetailed",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "Get storeId from <a href=\"?filter=Webshop\">/api/Webshop</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Get customerId from <a href=\"?filter=Customer\">/api/Customer</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "wLogin",
            "in": "query",
            "description": "Get login name from <a href=\"?filter=WebUser\">/api/WebUser</a>",
            "required": true,
            "type": "string"
          },
          {
            "name": "hotlistId",
            "in": "query",
            "description": "Get hotlistId from <a href=\"?filter=Webshop\">/api/Webshop</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Hotlist succesfully returned",
            "schema": {
              "$ref": "#/definitions/HotlistDetailed"
            }
          },
          "204": {
            "description": "No hotlist found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "Hotlist"
        ],
        "summary": "Edit hotlist",
        "operationId": "EditHotlist",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "Get storeId from <a href=\"?filter=Webshop\">/api/Webshop</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Get customerId from <a href=\"?filter=Customer\">/api/Customer</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "wLogin",
            "in": "query",
            "description": "Get login name from <a href=\"?filter=WebUser\">/api/WebUser</a>",
            "required": true,
            "type": "string"
          },
          {
            "name": "hotlid",
            "in": "query",
            "description": "Hotlist identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "hotlistDescription",
            "in": "query",
            "description": "Hotlist description",
            "required": true,
            "type": "string"
          },
          {
            "name": "defaultList",
            "in": "query",
            "description": "Default list",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "Hotlist updated succesfully",
            "schema": {
              "type": "boolean"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "Hotlist"
        ],
        "summary": "Create hotlist",
        "operationId": "CreateHotlist",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "Get storeId from <a href=\"?filter=Webshop\">/api/Webshop</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Get customerId from <a href=\"?filter=Customer\">/api/Customer</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "wLogin",
            "in": "query",
            "description": "Customer login",
            "required": true,
            "type": "string"
          },
          {
            "name": "hotlistDescription",
            "in": "query",
            "description": "Hotlist description",
            "required": true,
            "type": "string"
          },
          {
            "name": "defaultList",
            "in": "query",
            "description": "Default list",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "201": {
            "description": "Hotlists for customer succesfully created",
            "schema": {
              "type": "boolean"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "Hotlist"
        ],
        "summary": "Delete hotlist",
        "operationId": "DeleteHotlist",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "Get storeId from <a href=\"?filter=Webshop\">/api/Webshop</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Get customerId from <a href=\"?filter=Customer\">/api/Customer</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "wLogin",
            "in": "query",
            "description": "Get login name from <a href=\"?filter=WebUser\">/api/WebUser</a>",
            "required": true,
            "type": "string"
          },
          {
            "name": "hotlid",
            "in": "query",
            "description": "Hotlist identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Hotlist succesfully deleted",
            "schema": {
              "type": "boolean"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/hotlist/Hotlist/User": {
      "get": {
        "tags": [
          "Hotlist"
        ],
        "summary": "Get hotlists for user",
        "operationId": "HotlistForUser",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "Get storeId from <a href=\"?filter=Webshop\">/api/Webshop</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Get customerId from <a href=\"?filter=Customer\">/api/Customer</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "wLogin",
            "in": "query",
            "description": "Get login name from <a href=\"?filter=WebUser\">/api/WebUser</a>",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Hotlists for user succesfully returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1_4.Hotlist"
              }
            }
          },
          "204": {
            "description": "No hotlists for user found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/hotlist/Hotlist/Customer": {
      "get": {
        "tags": [
          "Hotlist"
        ],
        "summary": "Get hotlists for customer",
        "operationId": "GetHotlistsForCustomer",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "Get storeId from <a href=\"?filter=Webshop\">/api/Webshop</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Get customerId from <a href=\"?filter=Customer\">/api/Customer</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Hotlists for customer succesfully returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1_4.Hotlist"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/hotlist/Hotlist/Product": {
      "post": {
        "tags": [
          "Hotlist"
        ],
        "summary": "Add product to hotlist",
        "operationId": "AddToHotlist",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "Get storeId from <a href=\"?filter=Webshop\">/api/Webshop</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Get customerId from <a href=\"?filter=Customer\">/api/Customer</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "wLogin",
            "in": "query",
            "description": "Get login name from <a href=\"?filter=WebUser\">/api/WebUser</a>",
            "required": true,
            "type": "string"
          },
          {
            "name": "hotlid",
            "in": "query",
            "description": "Hotlist identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "artinr",
            "in": "query",
            "description": "Product identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Hotlists for customer succesfully created",
            "schema": {
              "type": "boolean"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "Hotlist"
        ],
        "summary": "Delete product from hotlist",
        "operationId": "DeleteFromHotlist",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "Get storeId from <a href=\"?filter=Webshop\">/api/Webshop</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Get customerId from <a href=\"?filter=Customer\">/api/Customer</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "wLogin",
            "in": "query",
            "description": "Get login name from <a href=\"?filter=WebUser\">/api/WebUser</a>",
            "required": true,
            "type": "string"
          },
          {
            "name": "hotlid",
            "in": "query",
            "description": "Hotlist identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "artinr",
            "in": "query",
            "description": "Product identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "201": {
            "description": "Product in hotlist deleted succesfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/InternalInvoice/OutstandingInternalInvoices/{companyId}/{branchId}": {
      "get": {
        "tags": [
          "InternalInvoice"
        ],
        "summary": "Get all outstanding internal invoices",
        "operationId": "OutstandingInternalInvoices",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "branchId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Internal invoices returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/InternalInvoice"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/InternalInvoice/InternalInvoice/{companyId}/{branchId}/{purchaseId}/{deliverySequenceId}": {
      "get": {
        "tags": [
          "InternalInvoice"
        ],
        "summary": "Get internal invoice",
        "operationId": "InternalInvoice",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "branchId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "purchaseId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "deliverySequenceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Internal invoice returned",
            "schema": {
              "$ref": "#/definitions/InternalInvoice"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/InternalInvoice/MatchInternalInvoice": {
      "put": {
        "tags": [
          "InternalInvoice"
        ],
        "summary": "Match internal invoice lines with purchase invoice",
        "operationId": "MatchInternalInvoice",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "InternalInvoiceLines",
            "in": "body",
            "required": false,
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/MatchInternalInvoice"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Internal invoice lines matched",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/MatchInternalInvoice"
              }
            }
          },
          "400": {
            "description": "Error matching internal invoice lines"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Invoice/Invoice/{companyId}/{invoiceNumber}": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Get invoice by invoice number",
        "operationId": "DetailedInvoice",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Get companyId from <a href=\"?deepLinking=true#/Company/Get\">/api/Company</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "invoiceNumber",
            "in": "path",
            "description": "Get invoiceNumber from <a href=\"?deepLinking=true#/Invoice/Invoice/\">/api/Invoice</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Invoice information returned successfully",
            "schema": {
              "$ref": "#/definitions/V1_2.Invoice"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Invoice/Invoice": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Get invoices of customer, optional based on search parameter",
        "operationId": "InvoicesForCustomerWithSearch",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page number for response result",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Number of records in result (max. 40)",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Get storeId from <a href=\"?deepLinking=true#/Webshop/Store\">/api/Webshop</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "companyId",
            "in": "query",
            "description": "Get companyId from <a href=\"?deepLinking=true#/Company/Get\">/api/Company</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Get customerId from <a href=\"?deepLinking=true#/Customer/Get\">/api/Customer</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "employeeId",
            "in": "query",
            "description": "Get employeeId from <a href=\"?deepLinking=true&urls.primaryName=v1.2#/Employee/Get\">/api/Employee</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "wLogin",
            "in": "query",
            "description": "Get login name from <a href=\"?deepLinking=true#/WebUser/Get\">/api/WebUser</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "showOnlyOwnData",
            "in": "query",
            "description": "Only show data for specified storeId, webshop login or employee",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date for requested invoice period",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date for requested invoice period",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "SearchType",
            "in": "query",
            "description": "Search type",
            "required": false,
            "type": "string",
            "enum": [
              "OrderId",
              "CustomerOrderNumber",
              "InvoiceId",
              "ProjectId",
              "ProjectName",
              "ProductId"
            ]
          },
          {
            "name": "SearchString",
            "in": "query",
            "description": "String upon which underlying records will be searched.",
            "required": false,
            "type": "string",
            "minLength": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Invoices information",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/Invoice"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Create invoice.\r\n(All amounts must be provided in the supplied currency)",
        "operationId": "Invoice",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "parameters": [
          {
            "name": "invoice",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Invoice"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Invoice created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Invoice/Invoice/{companyId}/{orderId}/{deliveryId}": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Get invoice by delivery information (orderId and deliveryId)",
        "operationId": "InvoiceByDeliveryInformation",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Get companyId from <a href=\"?deepLinking=true#/Company/Get\">/api/Company</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "Get orderId from <a href=\"?deepLinking=true#/Order/Order/Get\">/api/Order</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "deliveryId",
            "in": "path",
            "description": "Get deliveryId from <a href=\"?deepLinking=true#/Delivery/Get\">/api/Delivery</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Invoice information",
            "schema": {
              "$ref": "#/definitions/Invoice"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Invoice/Invoices": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Create multiple invoices in one transaction.\r\n(All amounts must be provided in the supplied currency)",
        "operationId": "Invoices",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "parameters": [
          {
            "name": "invoices",
            "in": "body",
            "required": false,
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/Invoice"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Invoices created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Invoice/InvoicePDF/{companyId}/{branchId}/{invoiceId}": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Return Invoice pdf-stream",
        "operationId": "InvoicePDF",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Get companyId from <a href=\"?deepLinking=true#/Company/Get\">/api/Company</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "branchId",
            "in": "path",
            "description": "Get branchId from <a href=\"?deepLinking=true#/Branch/Get\">/api/Branch</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "invoiceId",
            "in": "path",
            "description": "Get invoiceId from <a href=\"?deepLinking=true#/Invoice/Invoice/{companyId}/{invoiceNumber}\">/api/Invoice</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "Optional userId for custom report",
            "required": false,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Invoice pdf returned",
            "schema": {
              "type": "file"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Invoice/InvoicePDF": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Return invoice pdf-stream, based on weborderId",
        "operationId": "InvoicePDFByWeborderId",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "description": "Get companyId from <a href=\"?deepLinking=true#/Company/Get\">/api/Company</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "branchId",
            "in": "query",
            "description": "Get branchId from <a href=\"?deepLinking=true#/Branch/Get\">/api/Branch</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Get customerId from <a href=\"?deepLinking=true#/Customer/Get\">/api/Customer</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "weborderId",
            "in": "query",
            "description": "Web order Id, as generated in webshop",
            "required": false,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "Optional userId for custom report",
            "required": false,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "file"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Invoice/PaymentCondition": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Get payment conditions",
        "operationId": "GetAllPaymentConditions",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Payment conditions returned",
            "schema": {
              "$ref": "#/definitions/V1_2.PaymentCondition"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Invoice/PaymentCondition/{paymentConditionId}": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Get payment condition by Id",
        "operationId": "GetPaymentConditionById",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "paymentConditionId",
            "in": "path",
            "description": "Get ID from <a href=\"?deepLinking=true&urls.primaryName=v1.2#/Invoice/PaymentCondition\">/api/Invoice</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Payment conditions returned",
            "schema": {
              "$ref": "#/definitions/V1_2.PaymentCondition"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Language": {
      "get": {
        "tags": [
          "Language"
        ],
        "summary": "Get a list of all languages.",
        "operationId": "GetAllLanguages",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Languages returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/Language"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Language/{languageId}": {
      "get": {
        "tags": [
          "Language"
        ],
        "summary": "Get language by id.",
        "operationId": "GetLanguageById",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "languageId",
            "in": "path",
            "description": "Get languageId from <a href=\"?filter=Language\">/api/Language</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Language returned",
            "schema": {
              "$ref": "#/definitions/Language"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Language/{ISO}": {
      "get": {
        "tags": [
          "Language"
        ],
        "summary": "Get language by ISO code.",
        "operationId": "GetLanguageByIso",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "ISO",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Language returned",
            "schema": {
              "$ref": "#/definitions/Language"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Ledger/GeneralLedgerAccount": {
      "get": {
        "tags": [
          "Ledger"
        ],
        "summary": "Get a list of all general ledger accounts.",
        "operationId": "GeneralLedgerAccount",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "General ledger accounts returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/GeneralLedgerAccount"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Ledger/GeneralLedgerAccount/{LedgerAccountNumber}": {
      "get": {
        "tags": [
          "Ledger"
        ],
        "summary": "Get general ledger account by LedgerAccountNumber.",
        "operationId": "GeneralLedgerAccountById",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "LedgerAccountNumber",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "General ledger account returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/GeneralLedgerAccount"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Ledger/SupplierGeneralLedgerAccounts/{CompanyId}": {
      "get": {
        "tags": [
          "Ledger"
        ],
        "summary": "Get general ledger accounts per supplier",
        "operationId": "SupplierGeneralLedgerAccounts",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "CompanyId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "General ledger accounts per supplier returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/SupplierGeneralLedgerAccounts"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Ledger/SupplierGeneralLedgerAccounts/{CompanyId}/{SupplierId}": {
      "get": {
        "tags": [
          "Ledger"
        ],
        "summary": "Get general ledger accounts for specified SupplierId.",
        "operationId": "SupplierGeneralLedgerAccountsBySupplier",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "CompanyId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "SupplierId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "General ledger accounts for the specified supplier returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/GeneralLedgerAccount"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Ledger/LedgerJournal": {
      "post": {
        "tags": [
          "Ledger"
        ],
        "summary": "Create ledger journal.",
        "operationId": "LedgerJournal",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "parameters": [
          {
            "name": "ledgerJournal",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/LedgerJournal"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ledger journal created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Logging": {
      "post": {
        "tags": [
          "Logging"
        ],
        "summary": "Add logging to ERP logfile.",
        "operationId": "AddLogging",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "logMessage",
            "in": "body",
            "description": "Details of log message",
            "required": false,
            "schema": {
              "$ref": "#/definitions/LogMessage"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Logging added",
            "schema": {
              "type": "boolean"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/MarketSegment/MarketSegment": {
      "get": {
        "tags": [
          "MarketSegment"
        ],
        "summary": "Get a list of all market segments",
        "operationId": "GetMarketSegments",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Market segments returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/MarketSegment"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/MarketSegment/Segmentation": {
      "get": {
        "tags": [
          "MarketSegment"
        ],
        "summary": "Get a list of market segmentation of customers",
        "operationId": "Segmentation",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Market segments returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/SegmentCustomer"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Media": {
      "get": {
        "tags": [
          "Media"
        ],
        "summary": "Get media for products (may contain a large number of records)",
        "operationId": "Media",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "Get store ID from <a href=\"?deepLinking=true#/Webshop/Store\">/api/Webshop</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Available media for products returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/MediaInformation"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Media/{productId}": {
      "get": {
        "tags": [
          "Media"
        ],
        "summary": "Get media for product",
        "operationId": "MediaById",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "Get store ID from <a href=\"?deepLinking=true#/Webshop/Store\">/api/Webshop</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Get product ID from <a href=\"?deepLinking=true#/Product/ShopProductInformation\">/api/Product</a>",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Available media for product returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/MediaInformation"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Order/OrderChanges": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Get Order changes",
        "operationId": "OrderChanges",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.1"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.1"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "Get storeId from <a href=\"?deepLinking=true#/Webshop/Store/Get\">/api/Store</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fromDate",
            "in": "query",
            "description": "Start date for retrieval order changes",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OrderChangeResult"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Order/Order": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Get Orders for customer, optional based on search parameter",
        "operationId": "GetOrdersWithPaginationAndSearch",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "Get storeId from <a href=\"?filter=Webshop\">/api/Webshop</a>. Value 0 for all stores.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "companyId",
            "in": "query",
            "description": "Get companyId from <a href=\"?filter=Company\">/api/Company</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "branchId",
            "in": "query",
            "description": "Get branchId from <a href=\"?filter=Branch\">/api/Branch</a>. Value 0 for all branches.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Get customerId from <a href=\"?filter=Customer\">/api/Customer</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "quotationsOnly",
            "in": "query",
            "description": "Show only quotations",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "employeeId",
            "in": "query",
            "description": "Get employeeId from <a href=\"?filter=Employee\">/api/Employee</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "wLogin",
            "in": "query",
            "description": "Get login name from <a href=\"?filter=WebUser\">/api/WebUser</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "showOnlyOwnData",
            "in": "query",
            "description": "Only show data for specified storeId, webshop login or employee",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date for requested order period",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date for requested order period",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page number for response result",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Number of records in result (max. 40)",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "currentOrdersOnly",
            "in": "query",
            "description": "Return only current orders",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "SearchType",
            "in": "query",
            "description": "Search type",
            "required": false,
            "type": "string",
            "enum": [
              "OrderId",
              "CustomerOrderNumber",
              "InvoiceId",
              "ProjectId",
              "ProjectName",
              "ProductId"
            ]
          },
          {
            "name": "SearchString",
            "in": "query",
            "description": "String upon which underlying records will be searched.",
            "required": false,
            "type": "string",
            "minLength": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Orders returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1_14.Order"
              }
            }
          },
          "204": {
            "description": "No orders found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Order/OrderSelection": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Get collection of orders for customer, specified by a starting point (offset) and limit.",
        "operationId": "GetOrderSelection",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "Get storeId from <a href=\"?filter=Webshop\">/api/Webshop</a>. Value 0 for all stores.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "companyId",
            "in": "query",
            "description": "Get companyId from <a href=\"?filter=Company\">/api/Company</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "branchId",
            "in": "query",
            "description": "Get branchId from <a href=\"?filter=Branch\">/api/Branch</a>. Value 0 for all branches.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Get customerId from <a href=\"?filter=Customer\">/api/Customer</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "quotationsOnly",
            "in": "query",
            "description": "Show only quotations",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "employeeId",
            "in": "query",
            "description": "Get employeeId from <a href=\"?filter=Employee\">/api/Employee</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "wLogin",
            "in": "query",
            "description": "Get login name from <a href=\"?filter=WebUser\">/api/WebUser</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "showOnlyOwnData",
            "in": "query",
            "description": "Only show data for specified storeId, webshop login or employee",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date for requested order period",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date for requested order period",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Starting point to return records",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of records to return",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Orders returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1_14.Order"
              }
            }
          },
          "204": {
            "description": "No orders found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Order/{orderId}": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Get Order by Id",
        "operationId": "GetOrderById",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "description": "Get company ID from <a href=\"?filter=Company\">/api/Company</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "branchId",
            "in": "query",
            "description": "Get branch ID from <a href=\"?filter=Branch\">/api/Branch</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "Get orderId for <a href=\"?filter=Order\">/api/Order</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Order returned",
            "schema": {
              "$ref": "#/definitions/V1_14.Order"
            }
          },
          "204": {
            "description": "No order found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Order/Project": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Get orders (simplified) for specified project of customer",
        "operationId": "GetOrdersByProject",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "description": "Get customer ID from <a href=\"?deepLinking=true#/Customer/GetAll\">/api/Customer</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "projectId",
            "in": "query",
            "description": "Get project ID from <a href=\"?deepLinking=true#/Project/GetProjects\">/api/Project</a>",
            "required": true,
            "type": "string"
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Get orders starting from this order date",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Get orders dated on or before this date",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "onlyQuotations",
            "in": "query",
            "description": "Get quotations only",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "Orders returned",
            "schema": {
              "$ref": "#/definitions/OrderSimplified"
            }
          },
          "204": {
            "description": "No orders found for project"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Order/Simplified": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Get orders (simplified) for specified customer",
        "operationId": "GetOrdersSimplified",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "description": "Get company ID from <a href=\"?deepLinking=true#/Company/Get\">/api/Company</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "branchId",
            "in": "query",
            "description": "Get branch ID from <a href=\"?deepLinking=true#/Branch/Get\">/api/Branch</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Get customer ID from <a href=\"?deepLinking=true#/Customer/GetAll\">/api/Customer</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Get orders starting from this order date",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Get orders dated on or before this date",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "onlyQuotations",
            "in": "query",
            "description": "Get quotations only",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "Orders returned",
            "schema": {
              "$ref": "#/definitions/OrderSimplified"
            }
          },
          "204": {
            "description": "No orders found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Order/OrderConfirmation": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Get order confirmation or quotation as PDF document.",
        "operationId": "GetOrderConfimation",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15"
        ],
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "description": "Get company ID from <a href=\"?deepLinking=true#/Company/Get\">/api/Company</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "branchId",
            "in": "query",
            "description": "Get branch ID from <a href=\"?deepLinking=true#/Branch/Get\">/api/Branch</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "Get order ID from <a href=\"?deepLinking=true#/Order/GetOrdersWithPaginationAndSearch\">/api/Order</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "Optional user ID for custom report",
            "required": false,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "PDF document succesfully returned",
            "schema": {
              "type": "file"
            }
          },
          "204": {
            "description": "No PDF document found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Order/ChangeOrder": {
      "put": {
        "tags": [
          "Order"
        ],
        "summary": "Change order into delivery in parts and/or cancel specified order lines.",
        "operationId": "ChangeOrder",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Request containing order change data.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ChangeOrderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Order/OrderAttachment": {
      "post": {
        "tags": [
          "Order"
        ],
        "summary": "Add Attachment to order",
        "operationId": "OrderAttachment",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.1",
          "application/json;v=1.0",
          "multipart/form-data;v=1.16",
          "multipart/form-data;v=1.15",
          "multipart/form-data;v=1.14",
          "multipart/form-data;v=1.13",
          "multipart/form-data;v=1.12",
          "multipart/form-data;v=1.11",
          "multipart/form-data;v=1.10",
          "multipart/form-data;v=1.9",
          "multipart/form-data;v=1.8",
          "multipart/form-data;v=1.7",
          "multipart/form-data;v=1.6",
          "multipart/form-data;v=1.5",
          "multipart/form-data;v=1.4",
          "multipart/form-data;v=1.3",
          "multipart/form-data;v=1.2",
          "multipart/form-data;v=1.1",
          "multipart/form-data;v=1.0"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "parameters": [
          {
            "name": "uploadedFile",
            "in": "formData",
            "description": "Upload File",
            "required": true,
            "type": "file"
          },
          {
            "name": "companyId",
            "in": "query",
            "description": "Get companyId from <a href=\"?filter=Company\">/api/Company</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "branchId",
            "in": "query",
            "description": "Get branchId from <a href=\"?filter=Branch\">/api/Branch</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "Get orderId for <a href=\"?filter=Order\">/api/Order</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Attachment succesfully added to order.",
            "schema": {
              "type": "boolean"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Partner/Register": {
      "put": {
        "tags": [
          "Partner"
        ],
        "summary": "Register partner object ID for Mavis entity, for example account, order, invoice or contact",
        "operationId": "RegisterPartnerObject",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "description": "Company Id, as retrievable from <a href=\"?deepLinking=true#/Company/GetAllCompanies\">api/Company</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "erpId",
            "in": "query",
            "description": "Object Id as registered in Mavis",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "partnerId",
            "in": "query",
            "description": "Partner Id, with \"SF\" = Salesforce, \"CX\" = Centix\"",
            "required": false,
            "type": "string"
          },
          {
            "name": "objectType",
            "in": "query",
            "description": "Object type",
            "required": false,
            "type": "string",
            "enum": [
              "Customer",
              "Contact",
              "Order",
              "Invoice"
            ]
          },
          {
            "name": "objectId",
            "in": "query",
            "description": "Object Id as registered at partner",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Partner": {
      "delete": {
        "tags": [
          "Partner"
        ],
        "summary": "Delete partner ID for Mavis entity, for example account, order, invoice or contact",
        "operationId": "DeletePartnerObject",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "description": "Company Id, as retrievable from <a href=\"?deepLinking=true#/Company/GetAllCompanies\">api/Company</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "erpId",
            "in": "query",
            "description": "Object Id as registered in Mavis",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "partnerId",
            "in": "query",
            "description": "Partner Id, with \"SF\" = Salesforce, \"CX\" = Centix\"",
            "required": false,
            "type": "string"
          },
          {
            "name": "objectType",
            "in": "query",
            "description": "Object type",
            "required": false,
            "type": "string",
            "enum": [
              "Customer",
              "Contact",
              "Order",
              "Invoice"
            ]
          },
          {
            "name": "objectId",
            "in": "query",
            "description": "Object Id as registered at partner",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Partner ID deleted",
            "schema": {
              "type": "boolean"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Period": {
      "get": {
        "tags": [
          "Period"
        ],
        "summary": "Get a list of periods",
        "operationId": "PeriodsForRange",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "Periods returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/Period"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Period/OutstandingPeriods": {
      "get": {
        "tags": [
          "Period"
        ],
        "summary": "Get a list of outstanding periods per company",
        "operationId": "OutstandingPeriods",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Periods returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/OutstandingPeriod"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Periods not found"
          }
        }
      }
    },
    "/api/Period/OutstandingPeriods/{CompanyId}": {
      "get": {
        "tags": [
          "Period"
        ],
        "summary": "Get outstanding periods for the specified company",
        "operationId": "OutstandingPeriodsForCompany",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "CompanyId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Period returned",
            "schema": {
              "$ref": "#/definitions/OutstandingPeriod"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Period not found"
          }
        }
      }
    },
    "/api/Product/Alternative": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get product alternatives / replacements for specified store.",
        "operationId": "ProductAlternativeByStore",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "Get store ID from <a href=\"?deepLinking=true#/Webshop/Store\">/api/Webshop</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductAlternative"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Get product alternatives / replacements for specified products",
        "operationId": "ProductAlternative",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "productIds",
            "in": "body",
            "description": "Product ID for which alternatives are applicable, as retrievable from <a href=\"?deepLinking=true#/Product/ShopProductInformation\">/api/Product</a>.",
            "required": false,
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductAlternative"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Product/ArticleGroup": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get article groups including applicable ledger accounts",
        "operationId": "ArticleGroup",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/ArticleGroup"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Product/ArticleGroup/{Id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get article group by Id including applicable ledger accounts",
        "operationId": "ArticleGroupById",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Group Id of article group, as retrievable from <a href=\"?deepLinking=true#/Product/ArticleGroup\">/api/Product/ArticleGroup</a>.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/ArticleGroup"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Product/ArticleSubGroup": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get article sub groups, optionally specified by parent article group ID.",
        "operationId": "ArticleSubGroups",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "articleGroupId",
            "in": "query",
            "description": "ID of parent article group, as retrievable from <a href=\"?deepLinking=true#/Product/ArticleGroup\">/api/Product/ArticleGroup</a>.\r\n If articleGroupId = 0, all article sub groups will be returned. With a valid article group ID, only the article sub groups of the parent will be returned.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/ArticleGroup"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Product/Brand": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Return a list of all product brands.",
        "operationId": "Brands",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/Brand"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Product/Composition": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get compositions for store, including underlying components",
        "operationId": "GetCompositions",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "Store ID, as retrievable from <a href=\"?deepLinking=true#/Webshop/Store\">/api/Webshop</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "starting point of query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "number of compositions to query (max is 10,000)",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/Composition"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Product/Composition/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get composition including underlying components",
        "operationId": "GetCompositionById",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Get product ID of composition from <a href=\"?deepLinking=true#/Product/GetCompositions\">/api/Product/Composition</a>",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Composition"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Product/CustomerProductReference/{customerId}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get a list of customer product references for specified customer",
        "operationId": "CustomerProductReferenceList",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Get customer ID from <a href=\"?deepLinking=true#/Customer/GetAllCustomers\">/api/Customer</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomerProductReference"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Product/CustomerProductReference/{customerId}/{productId}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get customer product references for specified customer and product",
        "operationId": "CustomerProductReference",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Get customer ID from <a href=\"?deepLinking=true#/Customer/GetAllCustomers\">/api/Customer</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Get product ID from <a href=\"?deepLinking=true#/Product/Get\">/api/Product</a>",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CustomerProductReference"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Product/CustomerProductReference": {
      "put": {
        "tags": [
          "Product"
        ],
        "summary": "Edit customer product reference in ERP for specified customer and product",
        "operationId": "EditCustomerProductReference",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CustomerProductReferenceRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CustomerProductReference"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Create customer product reference in ERP for specified customer and product",
        "operationId": "CreateCustomerProductReference",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CustomerProductReferenceRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CustomerProductReference"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "summary": "Remove customer product reference in ERP for specified customer and product",
        "operationId": "DeleteCustomerProductReference",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "description": "Get customer ID from <a href=\"?deepLinking=true#/Customer/GetAllCustomers\">/api/Customer</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "productId",
            "in": "query",
            "description": "Get product ID from <a href=\"?deepLinking=true#/Product/Get\">/api/Product</a>",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CustomerProductReference"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Product/CustomerSpecific": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get customer specific products",
        "operationId": "CustomerSpecific",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "Store ID, as retrievable from <a href=\"?deepLinking=true#/Webshop/Store\">/api/Webshop</a>",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Customer's Specific products returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomerSpecificProducts"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Product/CustomerSpecific/{customerId}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get customer specific products for specified customer",
        "operationId": "CustomerSpecificById",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer ID, as retrievable from <a href=\"?deepLinking=true#/Customer/GetAllCustomers\">/api/Customer</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Store ID, as retrievable from <a href=\"?deepLinking=true#/Webshop/Store\">/api/Webshop</a>",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Customer's Specific products returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomerSpecificProducts"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Product/Ean": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get additional EANs for products, as specified by store.",
        "operationId": "ProductEan",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "Get store ID from <a href=\"?deepLinking=true#/Webshop/Store\">/api/Webshop</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Product EANs returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/Ean"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Product/Ean/{productId}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get additional EANs for specified product.",
        "operationId": "ProductEanById",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Get product ID from <a href=\"?deepLinking=true#/Product/ShopProductInformation\">/api/Product</a>",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Product EANs returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/Ean"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Product/Package": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get package information",
        "operationId": "AllPackageInformation",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "languageId",
            "in": "query",
            "description": "Get languageId from <a href=\"?deepLinking=true#/Language/Get\">/api/Language</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Package information returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1_2.Package"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Product/Package/{unitId}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get package information",
        "operationId": "Package",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "languageId",
            "in": "query",
            "description": "Get language ID from <a href=\"?deepLinking=true#/Language/Get\">/api/Language</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "unitId",
            "in": "path",
            "description": "Get unitId from <a href=\"?deepLinking=true&urls.primaryName=v1.2#/Product/Package/Get\">/api/Product/Package</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Package information returned",
            "schema": {
              "$ref": "#/definitions/V1_2.Package"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Product/BranchAvailability": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get a list of all product availability per branch for a specific company",
        "operationId": "BranchAvailability",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "description": "Get company ID from <a href=\"?deepLinking=true#/Company/Get\">/api/Company</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "productId",
            "in": "query",
            "description": "Get product ID from <a href=\"?deepLinking=true#/Product/Get\">/api/Product</a>",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Productavailability changes returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1_3.BranchAvailabilityResult"
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Product availability not found"
          }
        }
      }
    },
    "/api/Product/ProductAvailability": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get a list of all product availability changes from a specific store since a certain date+time",
        "operationId": "ProductAvailability",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.1"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.1"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "Productavailability changes returned",
            "schema": {
              "$ref": "#/definitions/ProductAvailabilityResult"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Product/ProductDeliveryDays": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get estimated delivery time for products of specificied store",
        "operationId": "ProductDeliveryDays",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.1"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.1"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "ProductDeliveryDaysResult returned",
            "schema": {
              "$ref": "#/definitions/ProductDeliveryDaysResult"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Product/ProductDeliveryDays/ById": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Get estimated delivery times for specified products of specificied store",
        "operationId": "ProductDeliveryDaysById",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DeliveryDaysRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ProductDeliveryDaysResult returned",
            "schema": {
              "$ref": "#/definitions/ProductDeliveryDaysResult"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Product/PriceAndStock": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get price and stock information for specified product",
        "operationId": "PriceAndStockV1_4SingleProduct",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "Get store ID from <a href=\"?deepLinking=true#/Webshop/Get\">/api/Webshop</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "companyId",
            "in": "query",
            "description": "Get company ID from <a href=\"?deepLinking=true#/Company/Get\">/api/Company</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "branchId",
            "in": "query",
            "description": "Get branch ID from <a href=\"?deepLinking=true#/Branch/Get\">/api/Branch</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Get customer ID from <a href=\"?deepLinking=true#/Customer/Get\">/api/Customer</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "productId",
            "in": "query",
            "description": "Get product ID from <a href=\"?deepLinking=true#/Product/Get\">/api/Product</a>",
            "required": true,
            "type": "string"
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "Product quantity",
            "required": false,
            "type": "number",
            "format": "double"
          }
        ],
        "responses": {
          "200": {
            "description": "Price and stock information returned",
            "schema": {
              "$ref": "#/definitions/V1_4.PriceAndStock"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Product/PricesAndStock/{storeId}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get price and stock information for specified store and range",
        "operationId": "PriceAndStockStoreForRange",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "Get store ID from <a href=\"?deepLinking=true#/Webshop/Get\">/api/Webshop</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "companyId",
            "in": "query",
            "description": "Get company ID from <a href=\"?deepLinking=true#/Company/Get\">/api/Company</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "branchId",
            "in": "query",
            "description": "Get branch ID from <a href=\"?deepLinking=true#/Branch/Get\">/api/Branch</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Get customer ID from <a href=\"?deepLinking=true#/Customer/Get\">/api/Customer</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Starting point to return records",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of records to return",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1_4.PriceAndStock"
              }
            }
          },
          "204": {
            "description": "No items found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Product/PricesAndStock": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get price and stock information for specified products",
        "operationId": "PricesAndStockMultipleProducts",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "Get store ID from <a href=\"?deepLinking=true#/Webshop/Get\">/api/Webshop</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "companyId",
            "in": "query",
            "description": "Get company ID from <a href=\"?deepLinking=true#/Company/Get\">/api/Company</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "branchId",
            "in": "query",
            "description": "Get branch ID from <a href=\"?deepLinking=true#/Branch/Get\">/api/Branch</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Get customer ID from <a href=\"?deepLinking=true#/Customer/Get\">/api/Customer</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "productIds",
            "in": "query",
            "description": "Get product IDs from <a href=\"?deepLinking=true#/Product/Get\">/api/Product</a>",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "uniqueItems": false
          },
          {
            "name": "quantities",
            "in": "query",
            "description": "Product quantity",
            "required": false,
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            },
            "collectionFormat": "multi",
            "uniqueItems": false
          },
          {
            "name": "attributes",
            "in": "query",
            "description": "Product attributes",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "uniqueItems": false
          }
        ],
        "responses": {
          "200": {
            "description": "Price and stock information returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1_4.PriceAndStock"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Get price and stock information for specified products",
        "operationId": "PricesAndStockSizeV1_4",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "priceAndStockRequest",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PriceAndStockRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Price and stock information returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1_4.PriceAndStock"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Product/PriceTiers": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get price tiers",
        "operationId": "PriceTiers",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "description": "Get company ID from <a href=\"?deepLinking=true#/Company/GetAllCompanies\">/api/Company</a>.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "branchId",
            "in": "query",
            "description": "Get branch ID from <a href=\"?deepLinking=true#/Branch/GetAllBranches\">/api/Branch</a>.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Get customer ID from <a href=\"?deepLinking=true#/Customer/GetAllCustomers\">/api/Customer</a>.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "projectId",
            "in": "query",
            "description": "Get project ID from <a href=\"?deepLinking=true#/Project/GetAllProjects\">/api/Project</a>.",
            "required": false,
            "type": "string"
          },
          {
            "name": "productId",
            "in": "query",
            "description": "Get product ID from from <a href=\"?deepLinking=true#/Product/ShopProductInformation\">/api/Product</a>.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Price tiers returned",
            "schema": {
              "$ref": "#/definitions/PriceTiers"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Product/PromotionalPrice": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get promotional price and available stock for products currently promoted",
        "operationId": "PromotionalPrice",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "Get store ID from <a href=\"?deepLinking=true#/Webshop/Store\">/api/Webshop</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "companyId",
            "in": "query",
            "description": "Get company ID from <a href=\"?deepLinking=true#/Company/GetAllCompanies\">/api/Company</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "branchId",
            "in": "query",
            "description": "Get branch ID from <a href=\"?deepLinking=true#/Branch/GetAllBranches\">/api/Branch</a>. When no branch ID is submitted, stock information for all branches is returned.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/PromotionalPriceAndStock"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Product/ProductsForSale": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get all products available for sale in ERP",
        "operationId": "ProductsForSale",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "Get store ID from <a href=\"?deepLinking=true#/Webshop/Get\">/api/Webshop</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Start point for a limited request",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Max number of results in request",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1_3.ShopProduct"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Product/ShopProducts": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get shop product information",
        "operationId": "ShopProductInformation",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Shop product information returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1_3.ShopProduct"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Get modified shop product information based on parsed HashData recieved at product retrieval.",
        "operationId": "ShopProductsV1_3",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "HashData",
            "in": "body",
            "required": false,
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/ShopProductHash"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Shop product information returned"
          },
          "201": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1_3.ShopProduct"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Product/Product": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get product by productId",
        "operationId": "Product",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "description": "Get product by Id (can be ProductId,Ean or SupplierId based on specified Type",
            "required": false,
            "type": "string"
          },
          {
            "name": "Type",
            "in": "query",
            "description": "Specifies type of supplied Id",
            "required": false,
            "type": "string",
            "default": 0,
            "enum": [
              "Internal",
              "SupplierAssigned",
              "Ean"
            ]
          },
          {
            "name": "SupplierEan",
            "in": "query",
            "description": "Optional set supplier ean",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Products returned succesfully",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "summary": "Edit product in ERP from Product Information Management system",
        "operationId": "EditProductV1_4",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "productInformation",
            "in": "body",
            "description": "Product details",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ProductInformation"
            }
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Get store ID from <a href=\"?deepLinking=true#/Webshop/Get\">/api/Webshop</a> When 0, keywords will be added to all stores.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "languageId",
            "in": "query",
            "description": "Language ID for keywords, get languageId from <a href=\"?deepLinking=true#/Language/Get\">/api/Language</a>",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "companyId",
            "in": "query",
            "description": "Company ID for price mutation, get company ID from <a href=\"?deepLinking=true#/Company/Get\">/api/Company</a>",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Product successfully edited in ERP",
            "schema": {
              "type": "boolean"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Add product to ERP from Product Information Management system",
        "operationId": "AddProductV1_4",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "productInformation",
            "in": "body",
            "description": "Product details",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ProductInformation"
            }
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Get store ID from <a href=\"?deepLinking=true#/Webshop/Store\">/api/Webshop</a>. When 0, keywords will be added to all stores.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "languageId",
            "in": "query",
            "description": "Language ID for keywords, get languageId from <a href=\"?deepLinking=true#/Language/Get\">/api/Language</a> 0 = default language.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Product successfully added to ERP"
          },
          "201": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "summary": "Delete product in ERP",
        "operationId": "DeleteProduct",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "description": "Get product ID from <a href=\"?deepLinking=true#/Product/Get\">/api/Product</a>",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Product deleted",
            "schema": {
              "type": "boolean"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Product/ProductAttributeSet": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get product attribute sets including underlying attributes. Please be advised: underlying attributes are returned without options.",
        "operationId": "ProductAttributeSets",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Attribute sets returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/AttributeSet"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Product/ProductAttribute": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get all product attributes (incl. options if applicable).",
        "operationId": "ProductAttributes",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductAttribute"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Get modified data about product attributes for shop products",
        "operationId": "ProductAttribute",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "Get store ID from <a href=\"?deepLinking=true#/Webshop/Get\">/api/Webshop</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "languageId",
            "in": "query",
            "description": "Get language ID from <a href=\"?deepLinking=true#/Language/Get\">/api/Language</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "hashData",
            "in": "body",
            "description": "Hashdata for products with attributes",
            "required": false,
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/ShopProductHash"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product attributes returned",
            "schema": {
              "$ref": "#/definitions/ProductAttribute"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Product/ProductAttributeBySelection": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Get product attributes for a selection of products",
        "operationId": "ProductAttributesBySelection",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "Get store ID from <a href=\"?deepLinking=true#/Webshop/Store\">/api/Webshop</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "languageId",
            "in": "query",
            "description": "Get language ID from <a href=\"?deepLinking=true#//Language/GetAllLanguages\">/api/Language</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "productIds",
            "in": "body",
            "description": "List of product IDs, as retrievable from <a href=\"?deepLinking=true#/Product/ShopProductInformation\">/api/Product</a>",
            "required": false,
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/AttributeProduct"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Product/ProductAttribute/{productId}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get product attributes for product",
        "operationId": "ProductAttributeForSingleProduct",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "Get store ID from <a href=\"?deepLinking=true#/Webshop/Get\">/api/Webshop</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "languageId",
            "in": "query",
            "description": "Get language ID from <a href=\"?deepLinking=true#/Language/Get\">/api/Language</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Get product ID from <a href=\"?deepLinking=true#/Product/Get\">/api/Product</a>",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Product attributes returned",
            "schema": {
              "$ref": "#/definitions/ProductAttribute"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Product/ProductAttribute/Options/{attributeId}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get product attribute including options",
        "operationId": "ProductAttributeById",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "attributeId",
            "in": "path",
            "description": "Get attribute ID from <a href=\"?deepLinking=true&urls.primaryName=v1.3#/Product/ProductAttribute/Options\">/api/Product</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Product attribute returned",
            "schema": {
              "$ref": "#/definitions/ProductAttribute"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Product/ProductAttribute/Options": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get product attribute sets including options",
        "operationId": "ProductAttributesInclOptions",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Product attribute returned",
            "schema": {
              "$ref": "#/definitions/ProductAttribute"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Get product attribute including options",
        "operationId": "ProductAttributesInclOptionsByHash",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "shopHashes",
            "in": "body",
            "required": false,
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/ShopHash"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product attribute returned",
            "schema": {
              "$ref": "#/definitions/ProductAttribute"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Product/ProductInformation": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get Product information for specified product",
        "operationId": "GetProductInformation",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "description": "Get product ID from <a href=\"?deepLinking=true#/Product/Get\">/api/Product</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Get store ID from <a href=\"?deepLinking=true#/Webshop/Get\">/api/Webshop</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "languageId",
            "in": "query",
            "description": "Get languageId from <a href=\"?deepLinking=true#/Language/Get\">/api/Language</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Product information returned succesfully",
            "schema": {
              "$ref": "#/definitions/ProductInformation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Product/ProductInformation/Paged": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get product information for shop products",
        "operationId": "GetProductInformationPaged",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "Get store ID from <a href=\"?deepLinking=true#/Webshop/Store\">/api/Webshop</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "languageId",
            "in": "query",
            "description": "Get languageId from <a href=\"?deepLinking=true#/Language/GetAllLanguages\">/api/Language</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Page number for response result",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "Number of records in result (max. 40)",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Product information returned succesfully",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductInformation"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Product/RelatedProduct/{storeId}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get related products for specified store",
        "operationId": "RelatedProducts",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "Get storeId from <a href=\"?deepLinking=true#/Webshop/Get\">/api/Webshop</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Related products returned succesfully",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1_2.RelatedProduct"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Product/RelatedProduct/{storeId}/{productId}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get related products for specified product",
        "operationId": "RelatedProduct",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "Get storeId from <a href=\"?deepLinking=true#/Webshop/Get\">/api/Webshop</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Get productId from <a href=\"?deepLinking=true#/Product/Get\">/api/Product</a>",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Related products returned succesfully",
            "schema": {
              "$ref": "#/definitions/V1_2.RelatedProduct"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Product/Synonym": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get synonyms for product descriptions.",
        "operationId": "ProductSynonym",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Available synonyms returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductSynonym"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/ProductGroup/{productGroupId}": {
      "get": {
        "tags": [
          "ProductGroup"
        ],
        "summary": "Get product group by ID, optionally with media and categories for specified store. If no store ID is send in request, media and categories\r\nfor all stores are returned",
        "operationId": "Get",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "parameters": [
          {
            "name": "productGroupId",
            "in": "path",
            "description": "Product group ID, as retrievable from <a href=\"?deepLinking=true#/ProductGroup\">/api/ProductGroup</a>",
            "required": true,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Store ID, as retrievable from <a href=\"?deepLinking=true#/Webshop/Store\">/api/Webshop/Store</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ProductGroupDetailed"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/ProductGroup": {
      "get": {
        "tags": [
          "ProductGroup"
        ],
        "summary": "Get all product groups, optionally for specified store. If no store ID is send in request, media and categories for all stores are returned",
        "operationId": "GetAllProductGroups",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "Store ID, as retrievable from <a href=\"?deepLinking=true#/Webshop/Store\">/api/Webshop/Store</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ProductGroupDetailed"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Productselection/Customer/{storeId}/{customerId}": {
      "get": {
        "tags": [
          "ProductSelection"
        ],
        "summary": "Get product selections of specific customer",
        "operationId": "GetByCustomerV1_6",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "Get store ID from <a href=\"?deepLinking=true#/Webshop/Store\">/api/Webshop</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Get customer ID from <a href=\"?deepLinking=true#/Customer/GetAllCustomers\">/api/Customer</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/Ums.CustomerProductSelection"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Productselection/{storeId}/{customerId}/{employeeId}": {
      "get": {
        "tags": [
          "ProductSelection"
        ],
        "summary": "Get product selections for employee",
        "operationId": "GetForEmployeeV1_6",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "Get store ID from <a href=\"?deepLinking=true#/Webshop/Store\">/api/Webshop</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Get customer ID from <a href=\"?deepLinking=true#/Customer/GetAllCustomers\">/api/Customer</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "description": "Get employee ID from <a href=\"?deepLinking=true#/Employee/GetCustomerEmployees\">/api/Employee</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/Ums.CustomerProductSelection"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Productselection/{lsoort}/{webanr}": {
      "get": {
        "tags": [
          "ProductSelection"
        ],
        "summary": "Get specific product selection",
        "operationId": "GetProductSelectionBySelectionId",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "parameters": [
          {
            "name": "lsoort",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "webanr",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UmsModels.ProductSelection"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Productselection": {
      "post": {
        "tags": [
          "ProductSelection"
        ],
        "summary": "Add product selection to employee",
        "operationId": "AddProductSelection",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "parameters": [
          {
            "name": "lsoort",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "debinr",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "medwnr",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "webanr",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "ProductSelection"
        ],
        "summary": "Delete product selection from employee",
        "operationId": "DeleteEmployeeProductSelection",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "parameters": [
          {
            "name": "lsoort",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "debinr",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "medwnr",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "webanr",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Productselection/Category/{storeId}/{customerId}/{employeeId}/{productSelectionId}": {
      "get": {
        "tags": [
          "ProductSelection"
        ],
        "summary": "Get categories of product selection",
        "operationId": "GetCategoryBudgetsForEmployee",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "Get store ID from <a href=\"?deepLinking=true#/Webshop/Store\">/api/Webshop</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Get customer ID from <a href=\"?deepLinking=true#/Customer/GetAllCustomers\">/api/Customer</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "description": "Get employee ID from <a href=\"?deepLinking=true#/Employee/GetCustomerEmployeesV111\">/api/Employee</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "productSelectionId",
            "in": "path",
            "description": "Get product selection ID from <a href=\"?deepLinking=true#/ProductSelection/GetByCustomerV1_6\">/api/ProductSelection</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Categories for production selection returned",
            "schema": {
              "$ref": "#/definitions/UmsModels.ProductSelectionCategoryBudgets"
            }
          },
          "204": {
            "description": "No categories for product selection found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Productselection/Category": {
      "put": {
        "tags": [
          "ProductSelection"
        ],
        "summary": "Updates categories in budget",
        "operationId": "UpdateCategoryInBudget",
        "consumes": [
          "application/json;v=1.16"
        ],
        "produces": [
          "application/json;v=1.16"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "Get store ID from <a href=\"?deepLinking=true&urls.primaryName=v1.4#/Webshop/Store/Get\">/api/Webshop</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Get customer ID from <a href=\"?deepLinking=true&urls.primaryName=v1.4#/Customer/GetCustomerById\">/api/Customer</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "employeeId",
            "in": "query",
            "description": "Get employeeId from <a href=\"?deepLinking=true&urls.primaryName=v1.4#/Employee/GetCustomerEmployeeById\">/api/Employee</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "productSelectionId",
            "in": "query",
            "description": "Get productSelectionId from <a href=\"?deepLinking=true&urls.primaryName=v1.4#/ProductSelection/GetProductSelectionById\">/api/Productselection</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "budgetType",
            "in": "query",
            "description": "Type of budget",
            "required": false,
            "type": "string",
            "enum": [
              "Amount",
              "Quantity"
            ]
          },
          {
            "name": "level1",
            "in": "query",
            "description": "First level of productselection",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "level2",
            "in": "query",
            "description": "Second level of productselection",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "level3",
            "in": "query",
            "description": "Third level of productselection",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "level4",
            "in": "query",
            "description": "Fourth level of productselection",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "level5",
            "in": "query",
            "description": "Fifth level of productselection",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "budgbd",
            "in": "query",
            "description": "Changed amount",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "txtblk",
            "in": "query",
            "description": "Reason for change",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/ProductSelection/Size": {
      "get": {
        "tags": [
          "ProductSelection"
        ],
        "summary": "Get all possible sizes for customer's product selection",
        "operationId": "ProductSelectionWithSizeForEmployee",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "Get store ID from <a href=\"?deepLinking=true&urls.primaryName=v1.4#/Webshop/Store/Get\">/api/Webshop</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Get customer ID from <a href=\"?deepLinking=true&urls.primaryName=v1.4#/Customer/GetCustomerById\">/api/Customer</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "employeeId",
            "in": "query",
            "description": "Get employeeId from <a href=\"?deepLinking=true&urls.primaryName=v1.4#/Employee/GetCustomerEmployeeById\">/api/Employee</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ProductSelectionSize"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Productselection/PerfectSize": {
      "get": {
        "tags": [
          "ProductSelection"
        ],
        "summary": "Get registrated sizes for webshopuser",
        "operationId": "GetPerfectSizesForUserByProductGroup",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "Get store ID from <a href=\"?deepLinking=true&urls.primaryName=v1.5#/Webshop/Store\">/api/Webshop</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Get customer ID from <a href=\"?deepLinking=true#/Customer/GetAllCustomers\">/api/Customer</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "employeeId",
            "in": "query",
            "description": "Get employeeId from <a href=\"?deepLinking=true&urls.primaryName=v1.4#/Employee/GetCustomerEmployees\">/api/Employee</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "productGroupId",
            "in": "query",
            "description": "Product group ID for which a size is registered for user (Optional)",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductTailoredSize"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/ProductSelection/PerfectSize": {
      "post": {
        "tags": [
          "ProductSelection"
        ],
        "summary": "Set or reset size of specified product group for user",
        "operationId": "UpdatePerfectSize",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "parameters": [
          {
            "name": "productSizeRequest",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/V1_12.ProductSizeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Project": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Get a list of all projects.",
        "operationId": "GetProjects",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Projects returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/BasicProject"
              }
            }
          },
          "204": {
            "description": "No projects found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "Project"
        ],
        "summary": "Updates project.",
        "operationId": "Update",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Project details",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ProjectRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Create a new project",
        "operationId": "Create",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Project details",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ProjectRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "Project"
        ],
        "summary": "Deactivate a specified project",
        "operationId": "Delete",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "description": "Get customerId from <a href=\"?deepLinking=true#/Customer/GetAllCustomers\">/api/Customer</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "projectId",
            "in": "query",
            "description": "Get projectId from <a href=\"?deepLinking=true#/Project/GetAllProjects\">/api/Project</a>",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Project/{customerId}/{projectId}": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Get project by customerId/projectId.",
        "operationId": "GetProjectV19ById",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Get customerId from <a href=\"?deepLinking=true#/Customer/GetAllCustomers\">/api/Customer</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "Get projectId from <a href=\"?deepLinking=true#/Project/GetAllProjects\">/api/Project</a>",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Project returned",
            "schema": {
              "$ref": "#/definitions/V1_9.Project"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Project not found"
          }
        }
      }
    },
    "/api/Project/{customerId}": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Get projects by customerId.",
        "operationId": "GetAllProjectsForCustomer",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Get customerId from <a href=\"?filter=Customer\">/api/Customer</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Projects returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/BasicProject"
              }
            }
          },
          "204": {
            "description": "Projects not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Project/{GLN}": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Get projects by GLN.",
        "operationId": "GetBasicProjectsByGLN",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "parameters": [
          {
            "name": "GLN",
            "in": "path",
            "description": "Global Location Number of project",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Projects returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/BasicProject"
              }
            }
          },
          "204": {
            "description": "No project found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Project/Status": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Get project status.",
        "operationId": "Status",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectStatus"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Project/api/Project": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Get projects specified for UMS",
        "operationId": "GetUmsProjectV1_4",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "description": "Get companyId from <a href=\"?filter=Company\">/api/Company</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Get customerId from <a href=\"?filter=Customer\">/api/Customer</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/UmsProject"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Project/{companyId}/{customerId}/{projectId}": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Get project specified for UMS by project id",
        "operationId": "GetUmsProjectByProjectId",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Get companyId from <a href=\"?filter=Company\">/api/Company</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Get customerId from <a href=\"?filter=Customer\">/api/Customer</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "projectId",
            "in": "path",
            "description": "Get projectId from <a href=\"?filter=Project\">/api/Project</a>",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UmsProject"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/PurchaseInvoice/PurchaseInvoiceOutstandingAmount/{companyId}/{invoiceId}": {
      "get": {
        "tags": [
          "PurchaseInvoice"
        ],
        "summary": "Get outstanding amout for specified purchase invoice by invoiceId",
        "operationId": "PurchaseInvoice",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "invoiceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Purchase invoice outstanding amount information returned",
            "schema": {
              "$ref": "#/definitions/PurchaseInvoiceOutstandingAmount"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Purchase invoice not found"
          }
        }
      }
    },
    "/api/PurchaseInvoice/PurchaseInvoiceOutstandingAmountById/{ExternalId}": {
      "get": {
        "tags": [
          "PurchaseInvoice"
        ],
        "summary": "Get outstanding amout for specified purchase invoice by external id",
        "operationId": "PurchaseInvoiceById",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "ExternalId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Purchase invoice outstanding amount information returned",
            "schema": {
              "$ref": "#/definitions/PurchaseInvoiceOutstandingAmount"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Purchase invoice not found"
          }
        }
      }
    },
    "/api/PurchaseInvoice/PurchaseInvoice": {
      "post": {
        "tags": [
          "PurchaseInvoice"
        ],
        "summary": "Create purchase invoice\r\n(All amounts must be provided in foreign currency)",
        "operationId": "UploadPurchaseInvoice",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "PurchaseInvoice",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PurchaseInvoice"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Purchase invoice created (invoiceId returned)",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          "400": {
            "description": "Error creating purchase invoice"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Purchase invoice created but matching failed (internal invoice not found)"
          },
          "409": {
            "description": "Purchase invoice created but matching failed (error while matching)"
          }
        }
      }
    },
    "/api/PurchaseInvoice/PaymentOnHoldBy/{companyId}/{invoiceId}/{ProcurationBlock}": {
      "post": {
        "tags": [
          "PurchaseInvoice"
        ],
        "summary": "Set purchaseinvoice procuration block by invoiceId.",
        "operationId": "PaymentOnHoldByIdByInvoice",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "invoiceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "ProcurationBlock",
            "in": "path",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Procuration block was (un)set",
            "schema": {
              "type": "boolean"
            }
          },
          "400": {
            "description": "Error setting procuration block"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/PurchaseInvoice/PaymentOnHoldById/{ExternalId}/{ProcurationBlock}": {
      "post": {
        "tags": [
          "PurchaseInvoice"
        ],
        "summary": "Set purchaseinvoice procuration block by invoice externalId.",
        "operationId": "PaymentOnHoldById",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "ExternalId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "ProcurationBlock",
            "in": "path",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Procuration block was (un)set",
            "schema": {
              "type": "boolean"
            }
          },
          "400": {
            "description": "Error setting procuration block"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Rayon": {
      "get": {
        "tags": [
          "Rayon"
        ],
        "summary": "Get Rayons",
        "operationId": "GetRayons",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "languageId",
            "in": "query",
            "description": "Get languageId from <a href=\"?deepLinking=true#/Language/Get\">/api/Language</a>",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Rayon returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1_2.Rayon"
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Rayon not found"
          }
        }
      }
    },
    "/api/Rayon/{rayonId}": {
      "get": {
        "tags": [
          "Rayon"
        ],
        "summary": "Get Rayon",
        "operationId": "GetRayonById",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "rayonId",
            "in": "path",
            "description": "Get rayonId from <a href=\"?deepLinking=true&urls.primaryName=v1.2#/Rayon/Get\">/api/Rayon</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "languageId",
            "in": "query",
            "description": "Get languageId from <a href=\"?deepLinking=true#/Language/Get\">/api/Language</a>",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Rayon returned",
            "schema": {
              "$ref": "#/definitions/V1_2.Rayon"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Rayon not found"
          }
        }
      }
    },
    "/api/Representative": {
      "get": {
        "tags": [
          "Representative"
        ],
        "summary": "Get all representatives",
        "operationId": "GetAllRepresentative",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Representatives received succesfully",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/Representative"
              }
            }
          },
          "204": {
            "description": "No representatives found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Representative/RepresentativeTypes": {
      "get": {
        "tags": [
          "Representative"
        ],
        "summary": "Get Representative types",
        "operationId": "RepresentativeTypes",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "description": "Get companyId from <a href=\"?deepLinking=true#/Company/Get\">/api/Company</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Representative types received succesfully",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/RepresentativeType"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Return/{storeId}/{companyId}/{branchId}/{customerId}/{employeeId}/{onlyShowOwnData}": {
      "get": {
        "tags": [
          "Return"
        ],
        "summary": "Get return orders. Please be advised: when including a store ID in the request, the response will only include returns with orders from that respective store. Combined returns (i.e. with orders from different stores) will not be included.",
        "operationId": "GetReturnOrders",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "Get storeId from <a href=\"?filter=Webshop\">/api/Webshop</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "companyId",
            "in": "path",
            "description": "Get companyId from <a href=\"?filter=Company\">/api/Company</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "branchId",
            "in": "path",
            "description": "Get branchId from <a href=\"?filter=Branch\">/api/Branch</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Get customerId from <a href=\"?filter=Customer\">/api/Customer</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "description": "Get employeeId from <a href=\"?filter=Employee\">/api/Employee</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "onlyShowOwnData",
            "in": "path",
            "description": "Only show data for speficied webshop login / employee",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Return orders succesfully returned.",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/Return"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Return/{companyId}/{branchId}/{returnId}": {
      "get": {
        "tags": [
          "Return"
        ],
        "summary": "Get return order",
        "operationId": "GetReturnById",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Get companyId from <a href=\"?filter=Company\">/api/Company</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "branchId",
            "in": "path",
            "description": "Get branchId from <a href=\"?filter=Branch\">/api/Branch</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "returnId",
            "in": "path",
            "description": "Get returnId from <a href=\"?filter=Return\">/api/Return</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Return order succesfully returned.",
            "schema": {
              "$ref": "#/definitions/Return"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Return/ReturnFormPDF/{companyId}/{branchId}/{returnId}": {
      "get": {
        "tags": [
          "Return"
        ],
        "summary": "Get return order form in pdf",
        "operationId": "ReturnFormPDF",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Get companyId from <a href=\"?filter=Company\">/api/Company</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "branchId",
            "in": "path",
            "description": "Get branchId from <a href=\"?filter=Branch\">/api/Branch</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "returnId",
            "in": "path",
            "description": "Get returnId from <a href=\"?filter=Return\">/api/Return</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Return form pdf succesfully returned.",
            "schema": {
              "type": "file"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Return": {
      "post": {
        "tags": [
          "Return"
        ],
        "summary": "Request return shipment",
        "operationId": "RequestReturnShipment",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "requestedReturn",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ReturnDelivery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return shipment succesfully requested.",
            "schema": {
              "$ref": "#/definitions/Return"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Return/Methods/{customerId}/{storeId}": {
      "get": {
        "tags": [
          "Return"
        ],
        "summary": "Request return shipment methods",
        "operationId": "ReturnMethods",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Get customerId from <a href=\"?filter=Customer\">/api/Customer</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "storeId",
            "in": "path",
            "description": "Get storeId from <a href=\"?filter=Webshop\">/api/Webshop</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Return shipment methods succesfully requested.",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReturnMethod"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Return/Items/{companyId}/{branchId}/{orderId}/{deliveryId}": {
      "get": {
        "tags": [
          "Return"
        ],
        "summary": "Request Returned items",
        "operationId": "ReturnedItems",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Get companyId from <a href=\"?filter=Company\">/api/Company</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "branchId",
            "in": "path",
            "description": "Get branchId from <a href=\"?filter=Branch\">/api/Branch</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "Get orderId from <a href=\"?filter=Order\">/api/Order</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "deliveryId",
            "in": "path",
            "description": "Get deliveryId from <a href=\"?filter=Delivery\">/api/Delivery</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned items succesfully requested.",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReturnedItem"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Return/ReturnLabelPDF/{companyId}/{branchId}/{returnId}": {
      "get": {
        "tags": [
          "Return"
        ],
        "summary": "Get return label in pdf",
        "operationId": "ReturnLabelPDF",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Get companyId from <a href=\"?filter=Company\">/api/Company</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "branchId",
            "in": "path",
            "description": "Get branchId from <a href=\"?filter=Branch\">/api/Branch</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "returnId",
            "in": "path",
            "description": "Get returnId from <a href=\"?filter=Return\">/api/Return</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Return label succesfully returned",
            "schema": {
              "type": "file"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/ReturnReason": {
      "get": {
        "tags": [
          "ReturnReason"
        ],
        "summary": "Get a list of all return reasons.",
        "operationId": "ReturnReasons",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "languageId",
            "in": "query",
            "description": "Get languageId from <a href=\"?filter=Language\">/api/Language</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "webshopOnly",
            "in": "query",
            "description": "Only return reasons set for display on webshop",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Return reasons returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReturnReason"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Revenue/PeriodDetailed": {
      "get": {
        "tags": [
          "Revenue"
        ],
        "summary": "Get detailed revenue for selected period",
        "operationId": "RevenueDetailedForPeriod",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "Revenue returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/RevenueItem"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Revenue/ArticleGroup": {
      "get": {
        "tags": [
          "Revenue"
        ],
        "summary": "Get revenue for article group for a specified period.",
        "operationId": "RevenueForArticleGroup",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date of period",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date of period",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "articleGroupId",
            "in": "query",
            "description": "Article group ID, as retrievable from <a href=\"?deepLinking=true#Product/ArticleGroup\">/api/Product/ArticleGroup</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Customer ID, as retrievable from <a href=\"?deepLinking=true#Customer/GetAllCustomers\">/api/Customer</a>",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "projectId",
            "in": "query",
            "description": "ProjectId, as retrievable from <a href=\"?deepLinking=true#/Project/GetAllProjects\">/api/Project</a>",
            "required": false,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/Revenue"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Revenue/ArticleSubGroup": {
      "get": {
        "tags": [
          "Revenue"
        ],
        "summary": "Get revenue for article sub group for specified period.",
        "operationId": "RevenueForArticleSubGroup",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date of period",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date of period",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "articleGroupId",
            "in": "query",
            "description": "Article group ID, as retrievable from <a href=\"?deepLinking=true#Product/ArticleGroup\">/api/Product/ArticleGroup</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "articleSubGroupId",
            "in": "query",
            "description": "Article sub group ID, as retrievable from <a href=\"?deepLinking=true#Product/ArticleSubGroups\">/api/Product/ArticleSubGroup</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Customer ID, as retrievable from <a href=\"?deepLinking=true#Customer/GetAllCustomers\">/api/Customer</a>",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "projectId",
            "in": "query",
            "description": "ProjectId, as retrievable from <a href=\"?deepLinking=true#/Project/GetAllProjects\">/api/Project</a>",
            "required": false,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/Revenue"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Revenue/Brand": {
      "get": {
        "tags": [
          "Revenue"
        ],
        "summary": "Get revenue for specific brand for a specified period.",
        "operationId": "RevenueForBrand",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date of period",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date of period",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "brandId",
            "in": "query",
            "description": "Brand ID, as retrievable from <a href=\"?deepLinking=true#Product/Brands\">/api/Product/Brand</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Customer ID, as retrievable from <a href=\"?deepLinking=true#Customer/GetAllCustomers\">/api/Customer</a>",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "projectId",
            "in": "query",
            "description": "ProjectId, as retrievable from <a href=\"?deepLinking=true#/Project/GetAllProjects\">/api/Project</a>",
            "required": false,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/Revenue"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Revenue/Customer": {
      "get": {
        "tags": [
          "Revenue"
        ],
        "summary": "Get revenue for customer for a specified period.",
        "operationId": "RevenueForCustomerDetailed",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13"
        ],
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date of period",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date of period",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Customer ID, as retrievable from <a href=\"?deepLinking=true#Customer/GetAllCustomers\">/api/Customer</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomerRevenue"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Revenue/Product": {
      "get": {
        "tags": [
          "Revenue"
        ],
        "summary": "Get revenue for product for specified period.",
        "operationId": "RevenueForProduct",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date of period",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date of period",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "productId",
            "in": "query",
            "description": "Product ID, as retrievable from <a href=\"?deepLinking=true#Product/ShopProductInformation\">/api/Product/ShopProducts</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Customer ID, as retrievable from <a href=\"?deepLinking=true#Customer/GetAllCustomers\">/api/Customer</a>",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "projectId",
            "in": "query",
            "description": "ProjectId, as retrievable from <a href=\"?deepLinking=true#/Project/GetAllProjects\">/api/Project</a>",
            "required": false,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/Revenue"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Revenue/SalesRepresentative": {
      "get": {
        "tags": [
          "Revenue"
        ],
        "summary": "Get revenue for sales representative for a specified period.",
        "operationId": "RevenueForSalesRepresentative",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date of period",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date of period",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "salesRepresentativeId",
            "in": "query",
            "description": "Sales representative ID \r\n as retrievable from <a href=\"?deepLinking=true#/Representative/Representative\">/api/Representative</a>.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Customer ID, as retrievable from <a href=\"?deepLinking=true#Customer/GetAllCustomers\">/api/Customer</a>",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "projectId",
            "in": "query",
            "description": "ProjectId, as retrievable from <a href=\"?deepLinking=true#/Project/GetAllProjects\">/api/Project</a>",
            "required": false,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/Revenue"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Revenue/Supplier": {
      "get": {
        "tags": [
          "Revenue"
        ],
        "summary": "Get revenue for supplier for specified period.",
        "operationId": "RevenueForSupplier",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date of period",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date of period",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "supplierId",
            "in": "query",
            "description": "Supplier ID, as retrievable from <a href=\"?deepLinking=true#Supplier/AllSuppliers\">/api/Supplier</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Customer ID, as retrievable from <a href=\"?deepLinking=true#Customer/GetAllCustomers\">/api/Customer</a>",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "projectId",
            "in": "query",
            "description": "ProjectId, as retrievable from <a href=\"?deepLinking=true#/Project/GetAllProjects\">/api/Project</a>",
            "required": false,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/Revenue"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/SalesAccount": {
      "get": {
        "tags": [
          "SalesAccount"
        ],
        "summary": "Get Sales account",
        "operationId": "GetSingleSalesAccountById",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "parameters": [
          {
            "name": "accountType",
            "in": "query",
            "description": "Account type in ERP, C = Customer, E = Employee, A = Shipping Address",
            "required": false,
            "type": "string"
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Get Id from <a href=\"?deepLinking=true#/Customer/Get\">/api/Customer</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "shippingAddressId",
            "in": "query",
            "description": "Get from <a href=\"?deepLinking=true#/Shipping/Get\">/api/Shipping</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "employeeId",
            "in": "query",
            "description": "Get from <a href=\"?deepLinking=true#/Employee/Get\">/api/Employee</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Sales Account returned",
            "schema": {
              "$ref": "#/definitions/V1_14.SalesAccount"
            }
          },
          "204": {
            "description": "No sales account by speficied ID found"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "SalesAccount"
        ],
        "summary": "Update Sales Account",
        "operationId": "UpdateSalesAccount",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "parameters": [
          {
            "name": "salesAccount",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/V1_14.SalesAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sales Account updated",
            "schema": {
              "type": "boolean"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "SalesAccount"
        ],
        "summary": "Add Sales Account",
        "operationId": "AddSalesAccount",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "parameters": [
          {
            "name": "salesAccount",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/V1_14.SalesAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V1_2.SalesAccountResult"
            }
          },
          "201": {
            "description": "Sales Account created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Sales account not found"
          }
        }
      },
      "delete": {
        "tags": [
          "SalesAccount"
        ],
        "summary": "Delete Sales Account",
        "operationId": "DeleteSalesAccount",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "accountType",
            "in": "query",
            "description": "Account type in ERP, C = Customer, E = Employee, A = Shipping Address",
            "required": false,
            "type": "string"
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Get Id from <a href=\"?deepLinking=true#/Customer/Get\">/api/Customer</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "employeeId",
            "in": "query",
            "description": "Get from <a href=\"?deepLinking=true#/Employee/Get\">/api/Employee</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "shippingAddressId",
            "in": "query",
            "description": "Get from <a href=\"?deepLinking=true#/Shipping/Get\">/api/Shipping</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Sales account deactivated",
            "schema": {
              "type": "boolean"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Sales account not found"
          }
        }
      }
    },
    "/api/SalesAccount/SalesAccount/All": {
      "get": {
        "tags": [
          "SalesAccount"
        ],
        "summary": "Get all Sales accounts (account type = C)",
        "operationId": "GetAllSalesAccounts",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Sales Accounts returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1_14.SalesAccount"
              }
            }
          },
          "204": {
            "description": "No sales accounts to retrieve"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Sector/{companyId}/{sectorId}": {
      "get": {
        "tags": [
          "Sector"
        ],
        "summary": "Get Sector",
        "operationId": "GetSectorById",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Get companyId from <a href=\"?deepLinking=true#/Company/Get\">/api/Company</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sectorId",
            "in": "path",
            "description": "Get sectorId from <a href=\"?deepLinking=true#/Sector/Get\">/api/Sector</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Sector returned",
            "schema": {
              "$ref": "#/definitions/V1_2.Sector"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Sector/{companyId}": {
      "get": {
        "tags": [
          "Sector"
        ],
        "summary": "Get Sectors from company",
        "operationId": "GetSectorsForCompany",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Get companyId from <a href=\"?deepLinking=true#/Company/Get\">/api/Company</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Sectors returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1_2.Sector"
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Shipping/Methods": {
      "get": {
        "tags": [
          "Shipping"
        ],
        "summary": "Get shipping methods",
        "operationId": "ShippingMethods",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "languageId",
            "in": "query",
            "description": "Get languageId from <a href=\"?filter=Language\">/api/Language</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Shipping methods returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/ShippingMethod"
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Shipping/Method": {
      "get": {
        "tags": [
          "Shipping"
        ],
        "summary": "Get shipping method",
        "operationId": "GetShippingMethodById",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "description": "Get Id from <a href=\"?filter=Shipping\">/api/Shipping/Methods</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "languageId",
            "in": "query",
            "description": "Get languageId from <a href=\"?filter=Language\">/api/Language</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Shipping method returned",
            "schema": {
              "$ref": "#/definitions/ShippingMethod"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Shipping/MethodsWebshop": {
      "get": {
        "tags": [
          "Shipping"
        ],
        "summary": "Get shipping methods for webshop",
        "operationId": "ShippingMethodsWebshop",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "Get storeId from <a href=\"?deepLinking=true#/Webshop/Store/Get\">/api/Store</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Shipping methods for webshop returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/ShippingMethodWebshop"
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Shipping/MethodsWebshop/{customerId}": {
      "get": {
        "tags": [
          "Shipping"
        ],
        "summary": "Get webshop shipping methods for customer",
        "operationId": "ShippingMethodsWebshopForCustomer",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "Get storeId from <a href=\"?deepLinking=true#/Webshop/Store/Get\">/api/Store</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Get customer ID from <a href=\"?deepLinking=true#/Customer/GetAllCustomers\">/api/Customer</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Shipping methods for webshop returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/ShippingMethodWebshop"
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Shipping": {
      "get": {
        "tags": [
          "Shipping"
        ],
        "summary": "Get shipping address",
        "operationId": "GetShippingAddressV111",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "description": "Get Id from <a href=\"?deepLinking=true#/Customer/Get\">/api/Customer</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "shippingAddressId",
            "in": "query",
            "description": "Get from <a href=\"?deepLinking=true#/Shipping/Get\">/api/Shipping</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Shipping address returned",
            "schema": {
              "$ref": "#/definitions/V1_9.ShippingAddress"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "Shipping"
        ],
        "summary": "Update shipping address",
        "operationId": "UpdateShippingAddressV111",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11"
        ],
        "parameters": [
          {
            "name": "shippingAddress",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/V1_9.ShippingAddress"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Shipping address updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Shipping address not found"
          }
        }
      },
      "post": {
        "tags": [
          "Shipping"
        ],
        "summary": "Add shipping address",
        "operationId": "AddShippingAddressV1_9",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "shippingAddress",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/V1_9.ShippingAddress"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Shipping address updated",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "Shipping"
        ],
        "summary": "Delete shipping address",
        "operationId": "DeleteShippingAddress",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "description": "Get Id from <a href=\"?deepLinking=true#/Customer/Get\">/api/Customer</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "shippingAddressId",
            "in": "query",
            "description": "Get from <a href=\"?deepLinking=true#/Shipping/Get\">/api/Shipping</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Shipping address updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Shipping address not found"
          }
        }
      }
    },
    "/api/Shipping/Costs": {
      "post": {
        "tags": [
          "Shipping"
        ],
        "summary": "This will calculate the shipping costs for a specified list of products.",
        "operationId": "Costs",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "parameters": [
          {
            "name": "CostsRequest",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ShippingCostRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Shipping costs returned",
            "schema": {
              "$ref": "#/definitions/ShippingCostResult"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/ShippingAddress/ShippingAddressStatus": {
      "get": {
        "tags": [
          "Shipping"
        ],
        "summary": "Get shipping address statusses",
        "operationId": "GetAllShippingAddressStatus",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Shipping address statusses returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1_2.ShippingAddressStatus"
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/ShippingAddress/ShippingAddressStatus/{shippingAddressStatusId}": {
      "get": {
        "tags": [
          "Shipping"
        ],
        "summary": "Get shipping address status by ID",
        "operationId": "ShippingAddressStatusById",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "shippingAddressStatusId",
            "in": "path",
            "description": "Get ID from <a href=\"?deepLinking=true&urls.primaryName=v1.2#/Shipping/ShippingAddressStatus/Get\">/api/Shipping/ShippingAddressStatus</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Shipping address status returned",
            "schema": {
              "$ref": "#/definitions/V1_2.ShippingAddressStatus"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Stock/StockChanges": {
      "put": {
        "tags": [
          "Stock"
        ],
        "summary": "Modify stock quantity for one or more products",
        "operationId": "StockChanges",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "parameters": [
          {
            "name": "CompanyId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "BranchId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "StockChanges",
            "in": "body",
            "required": false,
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/StockChange"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Stock changes applied succesfully"
          },
          "400": {
            "description": "Error applying stock changes"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Stock/StockChangeTypes": {
      "get": {
        "tags": [
          "Stock"
        ],
        "summary": "Return all stock change types",
        "operationId": "StockChangeTypes",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "parameters": [
          {
            "name": "CompanyId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Stock change types returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/StockChangeType"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Supplier": {
      "get": {
        "tags": [
          "Supplier"
        ],
        "summary": "Get all suppliers",
        "operationId": "GetAllSuppliers",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Supplier information returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1_14.Supplier"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Supplier/Supplier": {
      "get": {
        "tags": [
          "Supplier"
        ],
        "summary": "Find a supplier by any of its search options",
        "operationId": "SupplierBySearch",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "parameters": [
          {
            "name": "GLN",
            "in": "query",
            "description": "Global Location Number of supplier",
            "required": false,
            "type": "string"
          },
          {
            "name": "VATId",
            "in": "query",
            "description": "VAT ID of supplier",
            "required": false,
            "type": "string"
          },
          {
            "name": "ChamberofCommerceId",
            "in": "query",
            "description": "Chamber of Commerce ID of supplier",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Supplier information returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1_14.Supplier"
              }
            }
          },
          "204": {
            "description": "Supplier not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Supplier/Supplier/{SupplierId}": {
      "get": {
        "tags": [
          "Supplier"
        ],
        "summary": "Find a supplier by SupplierID",
        "operationId": "GetSupplierById",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "parameters": [
          {
            "name": "supplierId",
            "in": "path",
            "description": "Get supplier ID from <a href=\"?deepLinking=true#/Supplier/GetAllSuppliers\">/api/Supplier</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Supplier information returned",
            "schema": {
              "$ref": "#/definitions/V1_14.Supplier"
            }
          },
          "204": {
            "description": "Supplier not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/TaxCategories": {
      "get": {
        "tags": [
          "TaxCategories"
        ],
        "summary": "Get a list of all tax categories.",
        "operationId": "Get",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Tax categories returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaxCategory"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/TaxCategories/{TaxCategoryId}": {
      "get": {
        "tags": [
          "TaxCategories"
        ],
        "summary": "Get tax category details by TaxCategoryId.",
        "operationId": "GetById",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "TaxCategoryId",
            "in": "path",
            "description": "Tax category Id, as retrievable from <a href=\"?deepLinking=true#/TaxCategories/Get\">/api/TaxCategories</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Tax category returned",
            "schema": {
              "$ref": "#/definitions/TaxCategory"
            }
          },
          "204": {
            "description": "Tax category not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/UmsAuthorizer/{storeId}/{customerId}": {
      "get": {
        "tags": [
          "UmsAuthorizer"
        ],
        "summary": "Gets UMS authorizers of selected company",
        "operationId": "GetAuthorizersForCustomer",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "Get store ID from <a href=\"?deepLinking=true#/Webshop/Store\">/api/Webshop</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Get customer ID from <a href=\"?deepLinking=true#/Customer/GetAllCustomers\">/api/Customer</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/UmsModels.Authorizer"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/UmsAuthorizer/{storeId}/{customerId}/{employeeId}": {
      "get": {
        "tags": [
          "UmsAuthorizer"
        ],
        "summary": "Gets UMS authorizers for selected employee",
        "operationId": "GetAuthorizersForCustomerEmployee",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "Get store ID from <a href=\"?deepLinking=true#/Webshop/Store\">/api/Webshop</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Get customer ID from <a href=\"?deepLinking=true#/Customer/GetAllCustomers\">/api/Customer</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "description": "Get employee ID from <a href=\"?deepLinking=true#/Employee/GetCustomerEmployeesV111\">/api/Employee</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/UmsModels.Authorizer"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/UmsAuthorizer/required/{storeId}/{customerId}/{employeeId}": {
      "get": {
        "tags": [
          "UmsAuthorizer"
        ],
        "summary": "Retrieves if authorizer is required",
        "operationId": "CheckAuthorizerRequired",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "Get store ID from <a href=\"?deepLinking=true#/Webshop/Store\">/api/Webshop</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Get customer ID from <a href=\"?deepLinking=true#/Customer/GetAllCustomers\">/api/Customer</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "description": "Get employee ID from <a href=\"?deepLinking=true#/Employee/GetCustomerEmployeesV111\">/api/Employee</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/UmsAuthorizer": {
      "put": {
        "tags": [
          "UmsAuthorizer"
        ],
        "summary": "Updates display order authorizers",
        "operationId": "UpdateDisplayOrder",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "StoreId",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "CustomerId",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "employeeId",
            "in": "query",
            "description": "EmployeeId",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sequenceId",
            "in": "query",
            "description": "SequenceId",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "newSequenceId",
            "in": "query",
            "description": "New sequence Id",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "UmsAuthorizer"
        ],
        "summary": "Adds authorizer",
        "operationId": "AddUmsAuthorizer",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "StoreId",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "CustomerId",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "employeeId",
            "in": "query",
            "description": "EmployeeId",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "authorizerId",
            "in": "query",
            "description": "EmployeeId of Authorizer",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "UmsAuthorizer"
        ],
        "summary": "Deletes Authorizer for selected employee",
        "operationId": "RemoveUmsAuthorizer",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "employeeId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sequenceId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/UmsAuthorizer/Order": {
      "post": {
        "tags": [
          "UmsAuthorizer"
        ],
        "summary": "Verify if order is within budget and / or needs to be authorized.",
        "operationId": "AuthorizeOrder",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Details for budget/authorization verification",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BudgetAuthorizationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/BudgetAuthorizationResult"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/UmsRoles/{customerId}/{storeId}": {
      "get": {
        "tags": [
          "UmsAuthorizer"
        ],
        "summary": "Gets UMS roles",
        "operationId": "RolesForCustomer",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Get customerId from <a href=\"?deepLinking=true#/Customer/Get\">/api/Customer</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "storeId",
            "in": "path",
            "description": "Get storeId from <a href=\"?deepLinking=true#/Webshop/Store\">/api/Webshop/Store</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/UMS.Role"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/UmsRoles/{customerId}/{storeId}/{roleId}": {
      "get": {
        "tags": [
          "UmsAuthorizer"
        ],
        "summary": "Gets UMS role",
        "operationId": "UmsRole",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Get customerId from <a href=\"?deepLinking=true#/Customer/Get\">/api/Customer</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "storeId",
            "in": "path",
            "description": "Get storeId from <a href=\"?deepLinking=true#/Webshop/Store\">/api/Webshop/Store</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "Get roleId from <a href=\"?deepLinking=true#/UmsAuthorizer/Roles\">/api/UmsRoles</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Role data succesfully returned.",
            "schema": {
              "$ref": "#/definitions/UMS.Role"
            }
          },
          "204": {
            "description": "Role data not found."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Unit/SalesUnit": {
      "get": {
        "tags": [
          "Unit"
        ],
        "summary": "Get all sales units for company",
        "operationId": "GetSalesUnits",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "description": "Company ID for which sales units are applicable, retrieve ID from <a href=\"?deepLinking=true#/Company/GetAllCompanies\">/api/Company</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/SalesUnit"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Unit/SalesUnit/{unitId}": {
      "get": {
        "tags": [
          "Unit"
        ],
        "summary": "Get sales unit by ID",
        "operationId": "GetSalesUnitById",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "description": "Company ID for which sales units are applicable, retrieve ID from <a href=\"?deepLinking=true#/Company/GetAllCompanies\">/api/Company</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "unitId",
            "in": "path",
            "description": "Sales unit ID for requested details, retrieve ID from <a href=\"?deepLinking=true#/Unit/GetSalesUnits\">/api/Unit</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SalesUnit"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Webshop/AddOrder": {
      "post": {
        "tags": [
          "Webshop"
        ],
        "summary": "Add webshop order",
        "operationId": "AddWebshopOrder",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15"
        ],
        "parameters": [
          {
            "name": "order",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/V1_15.WebshopOrder"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Order added succesfully, ordernumber returned.",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          "400": {
            "description": "Order not created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Webshop/AuthorizationRequest": {
      "put": {
        "tags": [
          "Webshop"
        ],
        "summary": "Add or update authorization request for webshoporder",
        "operationId": "AddOrUpdateAuthorizationRequest",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AuthorizationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Authorisation request executed succesfully",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/AuthorizationResult"
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Webshop/api/Webshop/CancelAuthorizationRequest": {
      "delete": {
        "tags": [
          "Webshop"
        ],
        "summary": "Cancel authorization request for webshoporder",
        "operationId": "CancelAuthorizationRequest",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "Get storeId from <a href=\"?deepLinking=true#/Webshop/Store\">/api/Webshop/Store</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Get customer ID from <a href=\"?deepLinking=true#/Customer/GetAllCustomers\">/api/Customer</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "employeeId",
            "in": "query",
            "description": "Get employeeId from <a href=\"?deepLinking=true&urls.primaryName=v1.4#/Employee/GetCustomerEmployees\">/api/Employee</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "weborderId",
            "in": "query",
            "description": "Weborder identification (note: this id differs from the (ERP) order Id!).",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Authorisation request executed succesfully",
            "schema": {
              "type": "boolean"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Webshop/Store": {
      "get": {
        "tags": [
          "Webshop"
        ],
        "summary": "Get Stores",
        "operationId": "Store",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/Store"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Webshop/ReceptionMethod": {
      "get": {
        "tags": [
          "Webshop"
        ],
        "summary": "Get reception methods for webshop orders.",
        "operationId": "ReceptionMethod",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReceptionMethod"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Webshop/OciCustomFields": {
      "get": {
        "tags": [
          "Webshop"
        ],
        "summary": "Get OCI custom fields",
        "operationId": "OciCustomFields",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "CompanyId",
            "in": "query",
            "description": "Company ID for wich OCI custom fields apply, as retrievable from <a href=\"?deepLinking=true#/Company/Get\">/api/Company</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "StoreId",
            "in": "query",
            "description": "Store ID for wich OCI custom fields apply, as retrievable from <a href=\"?deepLinking=true#/Webshop/Store/Get\">/api/Store</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "CustomerId",
            "in": "query",
            "description": "Customer ID for which OCI custom fields apply, as retrievable from <a href=\"?deepLinking=true&urls.primaryName=v1.2#/Customer/Get\">/api/Customer</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "EmployeeId",
            "in": "query",
            "description": "Employee ID for which OCI custom fields apply, as retrievable from <a href=\"?deepLinking=true&urls.primaryName=v1.2#/Employee/Get\">/api/Employee</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "ProductIds",
            "in": "query",
            "description": "Product Ids for which OCI custom fields apply, as retrievable from <a href=\"?filter=Product/ShopProducts\">/api/Product/Product</a>",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "uniqueItems": false
          },
          {
            "name": "quantities",
            "in": "query",
            "description": "Quantities for products in OCI order",
            "required": true,
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            },
            "collectionFormat": "multi",
            "uniqueItems": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1_2.OciCustomField"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Webshop/Category": {
      "get": {
        "tags": [
          "Webshop"
        ],
        "summary": "Get categories for shop",
        "operationId": "CategoriesForShop",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "Get store ID from <a href=\"?deepLinking=true#/Webshop/Get\">/api/Webshop</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "languageId",
            "in": "query",
            "description": "Get languageId from <a href=\"?deepLinking=true#/Language/Get\">/api/Language</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/Category"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "Webshop"
        ],
        "summary": "Get modified / new categories for shop",
        "operationId": "ModifiedCategories",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "categoryRequest",
            "in": "body",
            "description": "Request body for retrieval of modified/changed categories",
            "required": false,
            "schema": {
              "$ref": "#/definitions/V1_3.CategoryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/Category"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Webshop/CategoryWithProducts": {
      "get": {
        "tags": [
          "Webshop"
        ],
        "summary": "Get categories including underlying products for shop",
        "operationId": "CategoriesWithProductsForShop",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "Get store ID from <a href=\"?deepLinking=true#/Webshop/Get\">/api/Webshop</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "languageId",
            "in": "query",
            "description": "Get languageId from <a href=\"?deepLinking=true#/Language/Get\">/api/Language</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/Category"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Webshop/Category/{categoryId}/{position}": {
      "get": {
        "tags": [
          "Webshop"
        ],
        "summary": "Get category for shop",
        "operationId": "CategoryById",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "Get store ID from <a href=\"?deepLinking=true#/Webshop/Get\">/api/Webshop</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "languageId",
            "in": "query",
            "description": "Get language ID from <a href=\"?deepLinking=true#/Language/Get\">/api/Language</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "categoryId",
            "in": "path",
            "description": "Get category ID from <a href=\"?deepLinking=true&urls.primaryName=v1.3#/Webshop/Category/Get\">/api/Webshop/Category</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "position",
            "in": "path",
            "description": "Category's position",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "Webshop"
        ],
        "summary": "Delete category for shop",
        "operationId": "DeleteCategory",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "Get store ID from <a href=\"?deepLinking=true#/Webshop/Store\">/api/Webshop</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "languageId",
            "in": "query",
            "description": "Get language ID from <a href=\"?deepLinking=true#/Language/Get\">/api/Language</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "categoryId",
            "in": "path",
            "description": "Get category ID from <a href=\"?deepLinking=true&urls.primaryName=v1.3#/Webshop/Category/Get\">/api/Webshop/Category</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "position",
            "in": "path",
            "description": "Category's position",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Webshop/Category/SimplifiedWithProducts": {
      "get": {
        "tags": [
          "Webshop"
        ],
        "summary": "Get all categories for specified store, including name and products",
        "operationId": "SimplifiedCategories",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "Get store ID from <a href=\"?deepLinking=true#/Webshop/Store\">/api/Webshop</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Categories succesfully returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/CategorySimple"
              }
            }
          },
          "204": {
            "description": "No categories found"
          }
        }
      }
    },
    "/api/Webshop/CategoryRole": {
      "get": {
        "tags": [
          "Webshop"
        ],
        "summary": "Get category roles (ACL)",
        "operationId": "CategoryRoles",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "Get store ID from <a href=\"?deepLinking=true#/Webshop/Store\">/api/Webshop</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "categoryRoleId",
            "in": "query",
            "description": "Get category role ID from <a href=\"?deepLinking=true#/Webshop/CategoryRoles\">/api/Webshop</a>\r\n In case no role ID is used (or role ID = 0), all category roles will be returned.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Category role(s) returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/CategoryRole"
              }
            }
          },
          "204": {
            "description": "No category role found."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Webshop/Specification/Allowfiltering": {
      "get": {
        "tags": [
          "Webshop"
        ],
        "summary": "Get Specificationfiltering",
        "operationId": "SpecificationAllowFiltering",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "Get store ID from <a href=\"?deepLinking=true#/Webshop/Store\">/api/Webshop</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/Specification"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Webshop/CustomerSpecific": {
      "get": {
        "tags": [
          "Webshop"
        ],
        "summary": "Get Customer specific information",
        "operationId": "CustomerSpecific",
        "consumes": [
          "application/json;v=1.16"
        ],
        "produces": [
          "application/json;v=1.16"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "Get store ID from <a href=\"?deepLinking=true#/Webshop/Store\">/api/Webshop</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Get customer ID from <a href=\"?deepLinking=true#/Customer/GetAllCustomers\">/api/Customer</a>\r\n In case no customerId is used, all customer specific values will be returned.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomerSpecific"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Webshop/ProductSpecification/Allowfiltering": {
      "get": {
        "tags": [
          "Webshop"
        ],
        "summary": "Get Product Specificationfiltering",
        "operationId": "ProductSpecificationAllowFiltering",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "Get store ID from <a href=\"?deepLinking=true#/Webshop/Store\">/api/Webshop</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Position where to start the query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of attributes in request (maximum is 25 000)",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/Specification"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/WebshopUser": {
      "get": {
        "tags": [
          "WebUser"
        ],
        "summary": "Returns a list of all webshop users of selected customer and user (sub)group (optional)",
        "operationId": "GetWebUsersForCustomer",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "Get store ID from <a href=\"?deepLinking=true#/Webshop/Store\">/api/Webshop</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Get customer ID from <a href=\"?deepLinking=true#/Customer/GetAllCustomers\">/api/Customer</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "groupId",
            "in": "query",
            "description": "Get ID of webuser group from <a href=\"?deepLinking=true#/WebUser/GroupsByCustomerId\">/api/Webuser</a>",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "subGroupId",
            "in": "query",
            "description": "Get ID of webuser subgroup (must have groupId > 0) from <a href=\"?deepLinking=true#/WebUser/SubGroups\">/api/Webuser</a>",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1_15.WebUser"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "put": {
        "tags": [
          "WebUser"
        ],
        "summary": "Updates webshop user with selected data",
        "operationId": "UpdateUser",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15"
        ],
        "parameters": [
          {
            "name": "lsoort",
            "in": "query",
            "description": "Store ID, as retrievable from <a href=\"?deepLinking=true#/Webshop/Store\">/api/Webshop/Store</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "debinr",
            "in": "query",
            "description": "Customer ID, as retrievable from <a href=\"?deepLinking=true#/Customer/GetAllCustomers\">/api/Customer</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "user",
            "in": "body",
            "description": "User to update",
            "required": false,
            "schema": {
              "$ref": "#/definitions/V1_15.WebUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "WebUser"
        ],
        "summary": "Creates a new webshop user for selected customer",
        "operationId": "PostWebUser",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "description": "Get company ID from <a href=\"?deepLinking=true#/Company/GetAllCompanies\">/api/Webshop</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Get store ID from <a href=\"?deepLinking=true#/Webshop/Store\">/api/Webshop</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Get customer ID from <a href=\"?deepLinking=true#/Customer/GetAllCustomers\">/api/Customer</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "user",
            "in": "body",
            "description": "Webshopuser to create",
            "required": false,
            "schema": {
              "$ref": "#/definitions/V1_15.WebUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "WebUser"
        ],
        "summary": "Cancels selected webshop user. API Update requests for this webshop user are no longer possible.",
        "operationId": "DeleteWebshopUserV1_9",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "lsoort",
            "in": "query",
            "description": "StoreId",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "debinr",
            "in": "query",
            "description": "CustomerId",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "medwnr",
            "in": "query",
            "description": "EmployeeId",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/WebshopUser/Store": {
      "get": {
        "tags": [
          "WebUser"
        ],
        "summary": "Get all webshop users for specified store",
        "operationId": "GetWebUsers",
        "consumes": [
          "application/json;v=1.16"
        ],
        "produces": [
          "application/json;v=1.16"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "description": "Get store ID from <a href=\"?deepLinking=true#/Webshop/Store\">/api/Webshop</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/WebUserBasic"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/WebshopUser/{storeId}/{customerId}/{employeeId}": {
      "get": {
        "tags": [
          "WebUser"
        ],
        "summary": "Gets webshop user as specified by EmployeeId",
        "operationId": "GetWebUserByEmployeeId",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "Store ID, as retrievable from <a href=\"?deepLinking=true#/Webshop/Store\">/api/Webshop</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer ID, as retrievable from <a href=\"?deepLinking=true#/Customer/GetAllCustomers\">/api/Customer</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "employeeId",
            "in": "path",
            "description": "Employee ID, as retrievable from <a href=\"?deepLinking=true#/Employee/GetCustomerEmployees\">/api/Employee</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/V1_15.WebUser"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/WebshopUser/WebshopUserId/{lsoort}/{username}": {
      "get": {
        "tags": [
          "WebUser"
        ],
        "summary": "Gets EmployeeId as specified by username",
        "operationId": "GetEmployeeIdByUsername",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "lsoort",
            "in": "path",
            "description": "StoreId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "username",
            "in": "path",
            "description": "Username",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/WebshopUser/Defaultsettings/{lsoort}/{debinr}": {
      "get": {
        "tags": [
          "WebUser"
        ],
        "summary": "Gets default settings of webusers from specified customer",
        "operationId": "GetDefaultSettings",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "parameters": [
          {
            "name": "lsoort",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "debinr",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UmsModels.UserSettings"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/WebshopUser/SizeForm/{lsoort}/{debinr}/{medwnr}": {
      "get": {
        "tags": [
          "WebUser"
        ],
        "summary": "Get size form",
        "operationId": "SizeForm",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "lsoort",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "debinr",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "medwnr",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Size form succesfully returned.",
            "schema": {
              "type": "file"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Size form not found."
          }
        }
      },
      "post": {
        "tags": [
          "WebUser"
        ],
        "summary": "Upload size form",
        "operationId": "UploadSizeForm",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "multipart/form-data;v=1.16",
          "multipart/form-data;v=1.15",
          "multipart/form-data;v=1.14",
          "multipart/form-data;v=1.13",
          "multipart/form-data;v=1.12",
          "multipart/form-data;v=1.11",
          "multipart/form-data;v=1.10",
          "multipart/form-data;v=1.9",
          "multipart/form-data;v=1.8",
          "multipart/form-data;v=1.7",
          "multipart/form-data;v=1.6",
          "multipart/form-data;v=1.5",
          "multipart/form-data;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "uploadedFile",
            "in": "formData",
            "description": "Upload File",
            "required": true,
            "type": "file"
          },
          {
            "name": "lsoort",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "debinr",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "medwnr",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Size form uploaded succesfully returned.",
            "schema": {
              "type": "boolean"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/WebshopUser/Groups/{storeId}/{customerId}": {
      "get": {
        "tags": [
          "WebUser"
        ],
        "summary": "Returns a list of all user groups specified for this customer",
        "operationId": "GroupsByCustomerId",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "Get storeId from <a href=\"?deepLinking=true#/Webshop/Store\">/api/Webshop/Store</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Get customerId from <a href=\"?deepLinking=true#/Customer/Get\">/api/Customer</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/UmsModels.UmsGroup"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/WebshopUser/SubGroups/{storeId}/{customerId}/{groupId}": {
      "get": {
        "tags": [
          "WebUser"
        ],
        "summary": "Returns a list of all user subgroups for a specified user group",
        "operationId": "SubGroups",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "Get storeId from <a href=\"?deepLinking=true#/Webshop/Store\">/api/Webshop/Store</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Get customerId from <a href=\"?deepLinking=true#/Customer/Get\">/api/Customer</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "Get groupId from <a href=\"?deepLinking=true#/WebUser/Groups\">/api/WebshopUsers/Groups</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/UmsModels.UmsGroup"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/WebshopUser/Groups/{storeId}/{customerId}/{groupId}": {
      "get": {
        "tags": [
          "WebUser"
        ],
        "summary": "Returns details for a specified user group",
        "operationId": "GroupById",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "Get storeId from <a href=\"?deepLinking=true#/Webshop/Store\">/api/Webshop/Store</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Get customerId from <a href=\"?deepLinking=true#/Customer/Get\">/api/Customer</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "Get groupId from <a href=\"?deepLinking=true#/WebUser/Groups\">/api/WebshopUsers/Groups</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UmsModels.UmsGroup"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/WebshopUser/Groups/{storeId}/{customerId}/{groupId}/{subgroupId}": {
      "get": {
        "tags": [
          "WebUser"
        ],
        "summary": "Returns details for a specified user subgroup",
        "operationId": "SubGroupById",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "Get storeId from <a href=\"?deepLinking=true#/Webshop/Store\">/api/Webshop/Store</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Get customerId from <a href=\"?deepLinking=true#/Customer/Get\">/api/Customer</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "Get groupId from <a href=\"?deepLinking=true#/WebUser/Groups\">/api/WebshopUsers/Groups</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "subgroupId",
            "in": "path",
            "description": "Get subgroupId from <a href=\"?deepLinking=true#/WebUser/Groups\">/api/WebshopUsers/Groups</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UmsModels.UmsGroup"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/WmsStatusInformation": {
      "get": {
        "tags": [
          "WmsStatusInformation"
        ],
        "summary": "Return Wms Status Information",
        "operationId": "WmsStatusInformation",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "produces": [
          "application/json;v=1.9",
          "application/json;v=1.8",
          "application/json;v=1.7",
          "application/json;v=1.6",
          "application/json;v=1.5",
          "application/json;v=1.4",
          "application/json;v=1.3",
          "application/json;v=1.2",
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "application/json;v=1.11",
          "application/json;v=1.10",
          "application/json;v=1.1",
          "application/json;v=1.0"
        ],
        "parameters": [
          {
            "name": "CompanyId",
            "in": "query",
            "description": "Get companyId from <a href=\"?filter=Company\">/api/Company</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "BranchId",
            "in": "query",
            "description": "Get branchId from <a href=\"?filter=Branch\">/api/Branch</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Wms status information returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/WmsStatusInformation"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/WorkOrder": {
      "get": {
        "tags": [
          "WorkOrder"
        ],
        "summary": "Get a list of all work orders for specified company and branch (and customer, if specified). BranchId = 0 will return work orders for all branches of\r\nselected company. It's optional to retrieve all work orders (default is only active work orders).",
        "operationId": "GetAllWorkOrders",
        "consumes": [
          "application/json;v=1.16"
        ],
        "produces": [
          "application/json;v=1.16"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "description": "Get companyId from <a href=\"?deepLinking=true#Company/GetAllCompanies\">/api/Company</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "branchId",
            "in": "query",
            "description": "Get branchId from <a href=\"?deepLinking=true#Branch/GetAllBranches\">/api/Branch</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Get customerId from <a href=\"?deepLinking=true#Customer/GetAllCustomers\">/api/Customer</a>. When customerId = 0, work orders for all customers\r\n will be returned.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "onlyActive",
            "in": "query",
            "description": "Return only active work orders. Default is true.",
            "required": false,
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "Work orders returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1_16.WorkOrder"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "WorkOrder"
        ],
        "summary": "Create a new workorder.",
        "operationId": "CreateWorkOrderInERP",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Work order request containing details of work order to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkOrderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created workorder",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Could not consume request object"
          }
        }
      }
    },
    "/api/WorkOrder/{employeeId}": {
      "get": {
        "tags": [
          "WorkOrder"
        ],
        "summary": "Get a list of all active work orders for specified employee.",
        "operationId": "GetWorkOrdersForEmployee",
        "consumes": [
          "application/json;v=1.16"
        ],
        "produces": [
          "application/json;v=1.16"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "description": "Get employeeId from <a href=\"?deepLinking=true#Employee/GetCompanyEmployee\">/api/Employee</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Work orders for employee returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1_16.WorkOrder"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/WorkOrder/ById/{orderId}": {
      "get": {
        "tags": [
          "WorkOrder"
        ],
        "summary": "Get active work order by id.",
        "operationId": "GetActiveWorkOrderById",
        "consumes": [
          "application/json;v=1.16"
        ],
        "produces": [
          "application/json;v=1.16"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "description": "Get companyId from <a href=\"?deepLinking=true#Company/GetAllCompanies\">/api/Company</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "branchId",
            "in": "query",
            "description": "Get branchId from <a href=\"?deepLinking=true#Branch/GetAllBranches\">/api/Branch</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "Get orderId from <a href=\"?deepLinking=true#/WorkOrder/GetAllWorkOrders\">/api/WorkOrder</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Work order returned",
            "schema": {
              "$ref": "#/definitions/V1_16.WorkOrder"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Work order not found"
          }
        }
      }
    },
    "/api/WorkOrder/Project": {
      "get": {
        "tags": [
          "WorkOrder"
        ],
        "summary": "Get workorders for specified project, optionally for all work orders of project (default is only active workorders)",
        "operationId": "GetWorkOrdersByProject",
        "consumes": [
          "application/json;v=1.16"
        ],
        "produces": [
          "application/json;v=1.16"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "description": "Get customer ID from <a href=\"?deepLinking=true#Customer/GetAllCustomers\">/api/Customer</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "projectId",
            "in": "query",
            "description": "Get project ID from <a href=\"?deepLinking=true#Project/GetAllProjects\">/api/Project</a>",
            "required": true,
            "type": "string"
          },
          {
            "name": "onlyActive",
            "in": "query",
            "description": "Return only active work orders. Default is true.",
            "required": false,
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "Work orders for project returned",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1_16.WorkOrder"
              }
            }
          },
          "204": {
            "description": "No work orders found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/WorkOrder/Class": {
      "get": {
        "tags": [
          "WorkOrder"
        ],
        "summary": "Get a list of all workorder classes.",
        "operationId": "GetWorkOrderClasses",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "description": "Get companyId from <a href=\"?deepLinking=true#Company/GetAllCompanies\">/api/Company</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned work order types",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkOrderClass"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/WorkOrder/Detail": {
      "put": {
        "tags": [
          "WorkOrder"
        ],
        "summary": "Edit a work order detail from a work order. Please note: products or costs cannot be replaced. That scenario would require \r\ndeleting the existing detail and adding the new product / cost.",
        "operationId": "EditWorkOrderDetail",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Work order detail change request containing details for the required change in the work order.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkOrderDetailChangeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created workorder",
            "schema": {
              "type": "boolean"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Could not consume request object"
          }
        }
      },
      "post": {
        "tags": [
          "WorkOrder"
        ],
        "summary": "Add a new work order detail to a work order.",
        "operationId": "CreateWorkOrderDetail",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Work order detail request containing values of work order detail to add.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkOrderDetailRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created workorder",
            "schema": {
              "type": "boolean"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Could not consume request object"
          }
        }
      },
      "delete": {
        "tags": [
          "WorkOrder"
        ],
        "summary": "Delete specified detail from work order.",
        "operationId": "DeleteWorkOrderDetail",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "description": "Get companyId from <a href=\"?deepLinking=true#Company/GetAllCompanies\">/api/Company</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "branchId",
            "in": "query",
            "description": "Get branchId from <a href=\"?deepLinking=true#Branch/GetAllBranches\">/api/Branch</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "workorderId",
            "in": "query",
            "description": "Get workorderId from <a href=\"?deepLinking=true#WorkOrder/GetAllWorkOrdersV112\">/api/Workorder</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderLineId",
            "in": "query",
            "description": "Line id of work order detail to delete.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderSubLineId",
            "in": "query",
            "description": "Sub line id of work order detail to delete.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/WorkOrder/Description": {
      "put": {
        "tags": [
          "WorkOrder"
        ],
        "summary": "Update work order description.",
        "operationId": "EditWorkOrderDescription",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Work order description change request, containing the details (incl. new description) to update the description of specified work order.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkOrderDescriptionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/WorkOrder/Date": {
      "put": {
        "tags": [
          "WorkOrder"
        ],
        "summary": "Update work order date",
        "operationId": "EditWorkOrderDate",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Work order date request, containing the details (incl. new date) to update the date of specified work order.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkOrderDateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/WorkOrder/Attachment": {
      "post": {
        "tags": [
          "WorkOrder"
        ],
        "summary": "Add attachment to work order",
        "operationId": "AddWorkOrderAttachment",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12",
          "multipart/form-data;v=1.16",
          "multipart/form-data;v=1.15",
          "multipart/form-data;v=1.14",
          "multipart/form-data;v=1.13",
          "multipart/form-data;v=1.12"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "parameters": [
          {
            "name": "uploadedFile",
            "in": "formData",
            "description": "Upload File",
            "required": true,
            "type": "file"
          },
          {
            "name": "companyId",
            "in": "query",
            "description": "Get companyId from <a href=\"?deepLinking=true#Company/GetAllCompanies\">/api/Company</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "branchId",
            "in": "query",
            "description": "Get branchId from <a href=\"?deepLinking=true#Branch/GetAllBranches\">/api/Branch</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "workOrderId",
            "in": "query",
            "description": "Get workorderId from <a href=\"?deepLinking=true#WorkOrder/GetAllWorkOrdersV112\">/api/Workorder</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/WorkOrder/Job": {
      "get": {
        "tags": [
          "WorkOrder"
        ],
        "summary": "Get jobs for work order hour",
        "operationId": "GetJobs",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "description": "Get companyId from <a href=\"?deepLinking=true#Company/GetAllCompanies\">/api/Company</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/Job"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/WorkOrder/Schedule": {
      "get": {
        "tags": [
          "WorkOrder"
        ],
        "summary": "Get (work order) schedule items.",
        "operationId": "GetSchedule",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "description": "Get companyId from <a href=\"?deepLinking=true#Company/GetAllCompanies\">/api/Company</a>. Value 0 if all schedule items should\r\n be returned (i.e. work order related and other schedule items).",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "branchId",
            "in": "query",
            "description": "Get branchId from <a href=\"?deepLinking=true#Branch/GetAllBranches\">/api/Branch</a>. Value 0 for all branches.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkOrderSchedule"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "WorkOrder"
        ],
        "summary": "Update an existing schedule item.",
        "operationId": "UpdateWorkOrderSchedule",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Details of item to schedule.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WorkOrderScheduleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "WorkOrder"
        ],
        "summary": "Create a new schedule item.",
        "operationId": "CreateWorkOrderSchedule",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Details of item to schedule.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WorkOrderScheduleRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "WorkOrder"
        ],
        "summary": "Delete a schedule item",
        "operationId": "DeleteWorkOrderSchedule",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "description": "Get companyId from <a href=\"?deepLinking=true#Company/GetAllCompanies\">/api/Company</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "branchId",
            "in": "query",
            "description": "Get branchId from <a href=\"?deepLinking=true#Branch/GetAllBranches\">/api/Branch</a>.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "scheduleId",
            "in": "query",
            "description": "Get scheduleId from <a href=\"?deepLinking=true#WorkOrder/GetSchedule\">/api/WorkOrder/Schedule</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "series",
            "in": "query",
            "description": "If item is one of a series of items, delete complete series.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/WorkOrder/Schedule/Employee": {
      "get": {
        "tags": [
          "WorkOrder"
        ],
        "summary": "Get work order scheduled items for specified employee.",
        "operationId": "GetScheduleForEmployee",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "query",
            "description": "Get employeeId from <a href=\"?deepLinking=true#Employee/GetCompanyEmployee\">/api/Employee</a>. Value 0 for all employees.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkOrderSchedule"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/WorkOrder/Schedule/WorkOrder": {
      "get": {
        "tags": [
          "WorkOrder"
        ],
        "summary": "Get work order scheduled items for specified work order.",
        "operationId": "GetScheduleForWorkOrder",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "description": "Get companyId from <a href=\"?deepLinking=true#Company/GetAllCompanies\">/api/Company</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "branchId",
            "in": "query",
            "description": "Get branchId from <a href=\"?deepLinking=true#Branch/GetAllBranches\">/api/Branch</a>.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "workOrderId",
            "in": "query",
            "description": "Get workOrderId from <a href=\"?deepLinking=true#WorkOrder/GetAllWorkOrdersV112\">/api/WorkOrder</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkOrderSchedule"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/WorkOrder/Schedule/{scheduleId}": {
      "get": {
        "tags": [
          "WorkOrder"
        ],
        "summary": "Get specified work order schedule item.",
        "operationId": "GetScheduleById",
        "consumes": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "produces": [
          "application/json;v=1.16",
          "application/json;v=1.15",
          "application/json;v=1.14",
          "application/json;v=1.13",
          "application/json;v=1.12"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "description": "Get companyId from <a href=\"?deepLinking=true#Company/GetAllCompanies\">/api/Company</a>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "branchId",
            "in": "query",
            "description": "Get branchId from <a href=\"?deepLinking=true#Branch/GetAllBranches\">/api/Branch</a>.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "scheduleId",
            "in": "path",
            "description": "Get scheduleId from <a href=\"?deepLinking=true#WorkOrder/GetSchedule\">/api/WorkOrder/Schedule</a>",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkOrderSchedule"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    }
  },
  "definitions": {
    "AccountInfo": {
      "type": "object",
      "properties": {
        "employeeId": {
          "format": "int32",
          "type": "integer"
        },
        "defaultCompanyId": {
          "format": "int32",
          "type": "integer"
        },
        "defaultBranchId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Login": {
      "required": [
        "userName",
        "password"
      ],
      "type": "object",
      "properties": {
        "userName": {
          "type": "string"
        },
        "password": {
          "format": "password",
          "type": "string"
        }
      }
    },
    "EmployeeLoginRequest": {
      "type": "object",
      "properties": {
        "userName": {
          "description": "User name of employee in ERP",
          "type": "string"
        },
        "password": {
          "description": "Password of employee in ERP",
          "type": "string"
        },
        "appId": {
          "description": "App ID, with 1 = CRM app, 2 = Work Order app",
          "enum": [
            "CRM",
            "WorkOrder"
          ],
          "type": "string"
        }
      }
    },
    "CheckedAddress": {
      "type": "object",
      "properties": {
        "street": {
          "type": "string"
        },
        "houseNumber": {
          "type": "string"
        },
        "houseNumberAddition": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "province": {
          "type": "string"
        },
        "residential": {
          "type": "boolean"
        },
        "validated": {
          "type": "boolean"
        }
      }
    },
    "EWSAccount": {
      "type": "object",
      "properties": {
        "emailAddress": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "SyncAppointments": {
      "type": "object",
      "properties": {
        "appointments": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Appointment"
          }
        },
        "syncState": {
          "type": "string"
        },
        "moreChangesAvailable": {
          "type": "boolean"
        }
      }
    },
    "Appointment": {
      "type": "object",
      "properties": {
        "start": {
          "format": "date-time",
          "type": "string"
        },
        "end": {
          "format": "date-time",
          "type": "string"
        },
        "subject": {
          "type": "string"
        },
        "body": {
          "type": "string"
        },
        "status": {
          "format": "int32",
          "type": "integer"
        },
        "categoryId": {
          "format": "int32",
          "type": "integer"
        },
        "category": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "exchangeID": {
          "type": "string"
        },
        "erpID": {
          "type": "string"
        }
      }
    },
    "V1_14.BranchInformation": {
      "type": "object",
      "properties": {
        "companyId": {
          "format": "int32",
          "description": "Company Id, as retrievable from <a href=\"?deepLinking=true#/Company/Get\">/api/Company</a>",
          "type": "integer"
        },
        "branchId": {
          "format": "int32",
          "description": "Branch Id, as retrievable from <a href=\"?deepLinking=true#/Branch/Get\">/api/Branch</a>",
          "type": "integer"
        },
        "branchName": {
          "description": "Branch name",
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/V1_9.Address",
          "description": "Branch Address information"
        },
        "contactInformation": {
          "$ref": "#/definitions/V1_2.ContactInformation",
          "description": "Contact information for branch"
        },
        "gln": {
          "description": "Global Location Number for Branch",
          "type": "string"
        }
      }
    },
    "V1_9.Address": {
      "required": [
        "street",
        "houseNumber"
      ],
      "type": "object",
      "properties": {
        "street": {
          "description": "Street name",
          "maxLength": 30,
          "type": "string"
        },
        "houseNumber": {
          "description": "House number of address",
          "type": "string"
        },
        "houseNumberAddition": {
          "description": "House number addition of Address",
          "type": "string"
        },
        "postalCode": {
          "description": "Postal Code",
          "type": "string"
        },
        "city": {
          "description": "City name",
          "type": "string"
        },
        "country": {
          "$ref": "#/definitions/V1_9.Country",
          "description": "Country where company is located."
        }
      }
    },
    "V1_2.ContactInformation": {
      "type": "object",
      "properties": {
        "phone": {
          "description": "Phone number",
          "type": "string"
        },
        "mobile": {
          "description": "Mobile phone number",
          "type": "string"
        },
        "secondPhone": {
          "description": "Secondary phone number",
          "type": "string"
        },
        "fax": {
          "description": "Facsimile number",
          "type": "string"
        },
        "email": {
          "description": "Email address",
          "type": "string"
        },
        "website": {
          "description": "Website URL",
          "type": "string"
        }
      }
    },
    "V1_9.Country": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Country ID in ERP, as retrievable from <a href=\"?deepLinking=true#/Country/GetAllCountries\">/api/Country</a>",
          "type": "integer"
        },
        "name": {
          "description": "Country name",
          "type": "string"
        },
        "isO3166": {
          "description": "ISO identification for country",
          "type": "string"
        }
      }
    },
    "Budget": {
      "required": [
        "id"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Id of budget, as retrievable from <a href=\"?deepLinking=true#/Budget/GetBudgetsForCustomer\">/api/Budget</a>",
          "type": "integer"
        },
        "name": {
          "description": "Name of budget",
          "maxLength": 45,
          "type": "string"
        },
        "budgetTerms": {
          "format": "int32",
          "description": "Number of terms during which budget is applicable",
          "type": "integer"
        },
        "budgetTermType": {
          "description": "Type of term (0 = Day, 1 = Week, 2 = Month, 3 = Year)",
          "enum": [
            "Day",
            "Week",
            "Month",
            "Year"
          ],
          "type": "string"
        },
        "budgetType": {
          "description": "Type of budget (0 = Amount (in currency), 1 = Quantity)",
          "enum": [
            "Amount",
            "Quantity"
          ],
          "type": "string"
        },
        "budgetUserType": {
          "description": "Type of user (User, Authorizer)",
          "enum": [
            "User",
            "Authorizer"
          ],
          "type": "string"
        },
        "effectiveDate": {
          "format": "date",
          "description": "Date from which budget will be effective",
          "type": "string"
        },
        "budgetDateType": {
          "description": "Type (Budget, User) for determining end date of Budget. Budget implicates end date is based on effective date of budget, User implicates\r\nend date is based on start date of budget for user",
          "enum": [
            "Budget",
            "User"
          ],
          "type": "string"
        },
        "hasLimit": {
          "description": "Budget has a maximum above which user cannot place an order.",
          "type": "boolean"
        },
        "limit": {
          "format": "double",
          "description": "Maximum amount or quantity a user can order with this budget.",
          "type": "number"
        },
        "canOrderAboveLimit": {
          "description": "User can order above limit for this budget (if so, authorization is required)",
          "type": "boolean"
        },
        "alwaysAuthorizeOrders": {
          "description": "All orders require authorization",
          "type": "boolean"
        },
        "hasMaximumOrderAmount": {
          "description": "A maximum amount / quantity per order is applicable for this budget",
          "type": "boolean"
        },
        "maximumOrderAmount": {
          "format": "double",
          "description": "Maximum amount / quantity per order",
          "type": "number"
        },
        "repeatingBudget": {
          "description": "Budget will be renewed after expiration",
          "type": "boolean"
        },
        "repeatUntil": {
          "format": "date",
          "description": "Budget will be renewed until set date",
          "type": "string"
        },
        "takeUnspentBudgetToNextPeriod": {
          "description": "Unused budget will be transfered to following period",
          "type": "boolean"
        },
        "maximumUnspentBudget": {
          "format": "double",
          "description": "Maximum amount / quantity that can be transfered to following period",
          "type": "number"
        },
        "default": {
          "description": "Budget is default budget for customer",
          "type": "boolean"
        }
      }
    },
    "UmsModels.BudgetUsage": {
      "description": "Webshop user budget history",
      "required": [
        "id"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Id of budget, as retrievable from <a href=\"?deepLinking=true#/Budget/GetBudgetsForCustomer\">/api/Budget</a>",
          "type": "integer"
        },
        "startDate": {
          "format": "date",
          "description": "Start date of budget",
          "type": "string"
        },
        "endDate": {
          "format": "date",
          "description": "End date of budget",
          "type": "string"
        },
        "budgetType": {
          "description": "Type of budget (0 = Amount (in currency), 1 = Quantity)",
          "enum": [
            "Amount",
            "Quantity"
          ],
          "type": "string"
        },
        "defaultBudget": {
          "format": "double",
          "description": "Budget is default budget for customer",
          "type": "number"
        },
        "budget": {
          "format": "double",
          "description": "Budget amount / quantity",
          "type": "number"
        },
        "used": {
          "format": "double",
          "description": "Used amount / quantity",
          "type": "number"
        },
        "remaining": {
          "format": "double",
          "description": "Remaining amount / quantity in budget",
          "type": "number"
        },
        "takenFromPreviousPeriod": {
          "format": "double",
          "description": "Unused Amount quantity from previous budget",
          "type": "number"
        },
        "reasonForChange": {
          "description": "Reason for change in budget",
          "type": "string"
        },
        "active": {
          "description": "Budget is active",
          "type": "boolean"
        },
        "editable": {
          "description": "Budget can be edited",
          "type": "boolean"
        },
        "name": {
          "description": "Budget name",
          "type": "string"
        }
      }
    },
    "BudgetOverviewRequest": {
      "required": [
        "storeId",
        "customerId",
        "employeeId",
        "budgetTypeCode",
        "products"
      ],
      "type": "object",
      "properties": {
        "storeId": {
          "format": "int32",
          "description": "Store ID, as retrievable from <a href=\"?deepLinking=true#/Webshop/Store\">/api/Webshop/Store</a>",
          "type": "integer"
        },
        "customerId": {
          "format": "int32",
          "description": "Customer ID, as retrievable from <a href=\"?deepLinking=true#/Customer/GetAllBasic\">/api/Customer</a>",
          "type": "integer"
        },
        "employeeId": {
          "format": "int32",
          "description": "ID of employee who placed order, as retrievable from <a href=\"?deepLinking=true#/Employee/GetCustomerEmployeesV111\">/api/Employee</a>",
          "type": "integer"
        },
        "budgetTypeCode": {
          "description": "Budget type identification code, with \"A\" = Authorization budget, \"B\" = User budget.",
          "pattern": "A|B",
          "type": "string"
        },
        "products": {
          "description": "List of products including quantity.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1_15.ProductQuantity"
          }
        }
      }
    },
    "V1_15.ProductQuantity": {
      "type": "object",
      "properties": {
        "productId": {
          "description": "Product ID as received from <a href=\"?deepLinking=true#/Product/ShopProductInformation\">/api/Product</a>",
          "type": "string"
        },
        "quantity": {
          "format": "double",
          "description": "Quantity for this product",
          "type": "number"
        },
        "price": {
          "format": "double",
          "description": "Product price",
          "type": "number"
        }
      }
    },
    "V1_11.BudgetOverview": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Id of budget, as retrievable from <a href=\"?deepLinking=true#/Budget/GetBudgetsForCustomer\">/api/Budget</a>",
          "type": "integer"
        },
        "startDate": {
          "format": "date",
          "description": "Startdate of budget",
          "type": "string"
        },
        "endDate": {
          "format": "date",
          "description": "End date for budget",
          "type": "string"
        },
        "budgetType": {
          "description": "Type of budget (0 = Amount (in currency), 1 = Quantity)",
          "enum": [
            "Amount",
            "Quantity"
          ],
          "type": "string"
        },
        "mainUsage": {
          "$ref": "#/definitions/BudgetUsageDetail",
          "description": "Main budget usage information"
        },
        "categoryUsage": {
          "description": "Budget usage for underlying categories in customer's product selection",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/BudgetUsageDetail"
          }
        }
      }
    },
    "BudgetUsageDetail": {
      "description": "Usage details for specific Budget",
      "type": "object",
      "properties": {
        "budgetId": {
          "format": "int32",
          "description": "Budget Id",
          "type": "integer"
        },
        "description": {
          "description": "Description for usage",
          "type": "string"
        },
        "budget": {
          "format": "double",
          "description": "Budget amount (can be quantity or currency value)",
          "type": "number"
        },
        "used": {
          "format": "double",
          "description": "Amount already used from budget",
          "type": "number"
        },
        "remaining": {
          "format": "double",
          "description": "Remaining amount form budget",
          "type": "number"
        },
        "categoryPath": {
          "description": "Path of category",
          "type": "string"
        },
        "inShoppingCart": {
          "format": "double",
          "description": "Amount in shopping cart",
          "type": "number"
        },
        "categoryIds": {
          "$ref": "#/definitions/Level",
          "description": "CategoryIds for category"
        }
      }
    },
    "Level": {
      "type": "object",
      "properties": {
        "level1": {
          "format": "int32",
          "description": "Level ID for height 1",
          "type": "integer"
        },
        "level2": {
          "format": "int32",
          "description": "Level ID for height 2",
          "type": "integer"
        },
        "level3": {
          "format": "int32",
          "description": "Level ID for height 3",
          "type": "integer"
        },
        "level4": {
          "format": "int32",
          "description": "Level ID for height 4",
          "type": "integer"
        },
        "level5": {
          "format": "int32",
          "description": "Level ID for height 5",
          "type": "integer"
        }
      }
    },
    "CompanyInformation": {
      "type": "object",
      "properties": {
        "companyId": {
          "format": "int32",
          "type": "integer"
        },
        "companyName": {
          "type": "string"
        }
      }
    },
    "CompanyDetails": {
      "type": "object",
      "properties": {
        "companyId": {
          "format": "int32",
          "description": "Company ID, as retrievable from <a href=\"?deepLinking=true#/Company/GetAllCompanies\">/api/Company</a>",
          "type": "integer"
        },
        "companyName": {
          "description": "Company name",
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/V1_9.Address",
          "description": "Company visiting address"
        },
        "postOfficeBox": {
          "$ref": "#/definitions/PostOfficeBox",
          "description": "Company PO Box"
        },
        "contactInformation": {
          "$ref": "#/definitions/ContactInformation",
          "description": "Company contact information"
        },
        "fiscalNumber": {
          "description": "Company fiscal number",
          "type": "string"
        },
        "chamberOfCommerceId": {
          "description": "Company Chamber of Commerce Identification",
          "type": "string"
        },
        "gln": {
          "description": "Company Global Location Number",
          "type": "string"
        }
      }
    },
    "PostOfficeBox": {
      "type": "object",
      "properties": {
        "boxNumber": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "city": {
          "type": "string"
        }
      }
    },
    "ContactInformation": {
      "type": "object",
      "properties": {
        "phone": {
          "description": "Phone number",
          "type": "string"
        },
        "mobile": {
          "description": "Mobile phone number",
          "type": "string"
        },
        "fax": {
          "description": "Facsimile number",
          "type": "string"
        },
        "email": {
          "description": "Email address",
          "type": "string"
        },
        "website": {
          "description": "Website URL",
          "type": "string"
        }
      }
    },
    "CostCentreLevel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "costCentres": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/CostCentre"
          }
        }
      }
    },
    "CostCentre": {
      "type": "object",
      "properties": {
        "costCentreId": {
          "format": "int32",
          "type": "integer"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "CostCentrePerGeneralLedgerAccount": {
      "type": "object",
      "properties": {
        "generalLedgerAccount": {
          "$ref": "#/definitions/GeneralLedgerAccount"
        },
        "costCentreLevels": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/CostCentreLevel"
          }
        }
      }
    },
    "GeneralLedgerAccount": {
      "type": "object",
      "properties": {
        "legerAccountNumber": {
          "format": "int32",
          "description": "General ledger account number, as retrievable from <a href=\"?deepLinking=true#/Ledger/GeneralLedgerAccount\">/api/Ledger</a>",
          "type": "integer"
        },
        "description": {
          "description": "Description of general ledger account",
          "type": "string"
        },
        "accountKind": {
          "format": "int32",
          "description": "Kind of account: 0 = Normal account, 1 = VAT account, 2 = Manual entries allowed",
          "type": "integer"
        },
        "splitToCostCentres": {
          "description": "Entries on this account should be allocated to cost centres",
          "type": "boolean"
        },
        "constCentre1Required": {
          "description": "Allocation to cost centre level 1 is required for this account",
          "type": "boolean"
        },
        "constCentre2Required": {
          "description": "Allocation to cost centre level 2 is required for this account",
          "type": "boolean"
        },
        "constCentre3Required": {
          "description": "Allocation to cost centre level 3 is required for this account",
          "type": "boolean"
        },
        "constCentre4Required": {
          "description": "Allocation to cost centre level 4 is required for this account",
          "type": "boolean"
        },
        "constCentre5Required": {
          "description": "Allocation to cost centre level 5 is required for this account",
          "type": "boolean"
        }
      }
    },
    "CostType": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "invoiceDescription": {
          "type": "string"
        },
        "purchaseLedger": {
          "format": "int32",
          "type": "integer"
        },
        "saleLegder": {
          "format": "int32",
          "type": "integer"
        },
        "amount": {
          "format": "double",
          "type": "number"
        },
        "type": {
          "enum": [
            "other",
            "deposit",
            "disposalFee"
          ],
          "type": "string"
        }
      }
    },
    "BranchInformation": {
      "type": "object",
      "properties": {
        "companyId": {
          "format": "int32",
          "description": "Company Id, as retrievable from <a href=\"?deepLinking=true#/Company/Get\">/api/Company</a>",
          "type": "integer"
        },
        "branchId": {
          "format": "int32",
          "description": "Branch Id, as retrievable from <a href=\"?deepLinking=true#/Branch/Get\">/api/Branch</a>",
          "type": "integer"
        },
        "branchName": {
          "description": "Branch name",
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/Address",
          "description": "Branch Address information"
        },
        "contactInformation": {
          "$ref": "#/definitions/ContactInformation",
          "description": "Contact information for branch"
        },
        "gln": {
          "description": "Global Location Number for Branch",
          "type": "string"
        }
      }
    },
    "Address": {
      "type": "object",
      "properties": {
        "street": {
          "description": "Street (full details)",
          "type": "string"
        },
        "streetName": {
          "description": "Name of street",
          "type": "string"
        },
        "houseNumber": {
          "description": "House number of address",
          "type": "string"
        },
        "houseNumberAddition": {
          "description": "Addition to house number in address",
          "type": "string"
        },
        "postalCode": {
          "description": "Postal Code",
          "type": "string"
        },
        "city": {
          "description": "City name",
          "type": "string"
        },
        "countryId": {
          "format": "int32",
          "description": "Country Id as retrievable from <a href=\"?deepLinking=true#/Country/Get\">/api/Country</a>",
          "type": "integer"
        }
      }
    },
    "Country": {
      "type": "object",
      "properties": {
        "number": {
          "format": "int32",
          "description": "Country ID in ERP, as retrievable from <a href=\"?deepLinking=true#/Country/GetAllCountries\">/api/Country</a>",
          "type": "integer"
        },
        "name": {
          "description": "Country name",
          "type": "string"
        },
        "isO3166": {
          "description": "ISO identification for country",
          "type": "string"
        }
      }
    },
    "CrmAppointment": {
      "type": "object",
      "properties": {
        "appointmentId": {
          "format": "int32",
          "description": "ID of appointment, as retrievable from <a href=\"?deepLinking=true#/CRM/Appointment\">/api/CRM/Appointment</a>",
          "type": "integer"
        },
        "salesRepresentativeId": {
          "format": "int32",
          "description": "Employee ID for sales representative for customer, as retrievable from <a href=\"?deepLinking=true#/Representative/Representative\">/api/Representative</a>",
          "type": "integer"
        },
        "salesRepresentativeName": {
          "description": "Employee name of sales representative",
          "type": "string"
        },
        "customerId": {
          "format": "int32",
          "description": "Customer ID, as retrievable from <a href=\"?deepLinking=true#Customer/GetAllCustomers\">/api/Customer</a>",
          "type": "integer"
        },
        "customerName": {
          "description": "Customer name",
          "type": "string"
        },
        "projectId": {
          "description": "Project ID as retrievable from <a href=\"?deepLinking=true#Project/GetAllProjects\">/api/Project</a>",
          "type": "string"
        },
        "projectName": {
          "description": "Project Name",
          "type": "string"
        },
        "statusId": {
          "description": "Appointment status, 10 = scheduled, 20 = fixed, 97 = cancelled, 98 = finished",
          "enum": [
            "Scheduled",
            "Fixed",
            "Cancelled",
            "Finished"
          ],
          "type": "string"
        },
        "description": {
          "description": "Description of appointment",
          "type": "string"
        },
        "activityId": {
          "format": "int32",
          "description": "Activity ID, as retrievable from",
          "type": "integer"
        },
        "startTime": {
          "format": "date-time",
          "description": "Start time of appointment",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "End time of appointment",
          "type": "string"
        },
        "previousAppointmentId": {
          "format": "int32",
          "description": "Appointment ID of previous appointment, as retrievable from <a href=\"?deepLinking=true#/CRM/Appointment\">/api/CRM/Appointment</a>",
          "type": "integer"
        },
        "followUpAppointments": {
          "description": "IDs of follow up appointments, as retrievable from <a href=\"?deepLinking=true#/CRM/Appointment\">/api/CRM/Appointment</a>",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "freeText": {
          "description": "Free text",
          "type": "string"
        },
        "scheduled": {
          "description": "Is the appointment automatically scheduled by the planningmodule?",
          "type": "boolean"
        },
        "contactPerson": {
          "description": "Name of contact person at customer",
          "type": "string"
        },
        "actionResultId": {
          "format": "int32",
          "description": "ID of action result, as retrievable from",
          "type": "integer"
        },
        "orderId": {
          "format": "int32",
          "description": "Order ID, as retrievable from <a href=\"?deepLinking=true#Order/OrderWithPaginationAndSearch\">/api/Order/Order</a>",
          "type": "integer"
        },
        "plannerId": {
          "format": "int32",
          "description": "ID of employee that scheduled this appointment, as retrievable from <a href=\"?deepLinking=true#/Employee/GetCompanyEmployee\">/api/Employee</a>",
          "type": "integer"
        },
        "plannerName": {
          "description": "Name of employee that scheduled this appointment",
          "type": "string"
        },
        "order": {
          "$ref": "#/definitions/OrderSimplified",
          "description": "Order (i.e. quotation) related to order"
        }
      }
    },
    "OrderSimplified": {
      "type": "object",
      "properties": {
        "orderId": {
          "format": "int32",
          "description": "Order ID as retrievable from <a href=\"?filter=Order\">/api/Order</a>",
          "type": "integer"
        },
        "orderStatus": {
          "description": "Status of order (Quotation = 0, FinancialMonitoring = 1, MarginCheck = 2, EdiCheck = 3, Active = 4, ReleasedInternalDelivery = 6, Parked = 10, Cancelled = 97, Processed = 98, Blocked =99)",
          "enum": [
            "Quotation",
            "FinancialMonitoring",
            "MarginCheck",
            "EdiCheck",
            "Active",
            "ReleasedInternalDelivery",
            "Parked",
            "Cancelled",
            "Processed",
            "Blocked"
          ],
          "type": "string"
        },
        "orderDate": {
          "format": "date-time",
          "description": "Date when order was placed",
          "type": "string"
        },
        "validUntil": {
          "format": "date-time",
          "description": "Date until when order (i.e.quotation) is valid",
          "type": "string"
        },
        "orderValue": {
          "$ref": "#/definitions/Amount",
          "description": "Total order value"
        }
      }
    },
    "Amount": {
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "format": "double",
          "description": "Amount in local currency",
          "type": "number"
        },
        "foreignCurrencyValue": {
          "format": "double",
          "description": "Amount in foreign currency if applicable",
          "type": "number"
        }
      }
    },
    "CrmAppointmentRequest": {
      "required": [
        "description"
      ],
      "type": "object",
      "properties": {
        "salesRepresentativeId": {
          "format": "int32",
          "description": "Employee ID for sales representative for customer, as retrievable from <a href=\"?deepLinking=true#/Representative/Representative\">/api/Representative</a>",
          "type": "integer"
        },
        "customerId": {
          "format": "int32",
          "description": "Customer ID, as retrievable from <a href=\"?deepLinking=true#Customer/GetAllCustomers\">/api/Customer</a>",
          "type": "integer"
        },
        "projectId": {
          "description": "Project ID as retrievable from <a href=\"?deepLinking=true#Project/GetAllProjects\">/api/Project</a>",
          "type": "string"
        },
        "statusId": {
          "description": "Appointment status, 10 = scheduled, 20 = fixed, 97 = cancelled, 98 = finished",
          "enum": [
            "Scheduled",
            "Fixed",
            "Cancelled",
            "Finished"
          ],
          "type": "string"
        },
        "description": {
          "description": "Description of appointment",
          "type": "string"
        },
        "activityId": {
          "format": "int32",
          "description": "Activity ID, as retrievable from",
          "type": "integer"
        },
        "startTime": {
          "format": "date-time",
          "description": "Start time of appointment",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "End time of appointment",
          "type": "string"
        },
        "previousAppointmentId": {
          "format": "int32",
          "description": "Appointment ID of previous appointment, as retrievable from",
          "type": "integer"
        },
        "freeText": {
          "description": "Free text",
          "type": "string"
        },
        "contactPerson": {
          "description": "Employee ID of customer's contact person, as retrievable from <a href=\"?deepLinking=true#Employee/GetCustomerEmployeesV111\">/api/Employee/CustomerEmployee/{customerId}</a>",
          "type": "string"
        },
        "actionResultId": {
          "format": "int32",
          "description": "ID of action result, as retrievable from",
          "type": "integer"
        },
        "orderId": {
          "format": "int32",
          "description": "Order ID, as retrievable from <a href=\"?deepLinking=true#Order/OrderWithPaginationAndSearch\">/api/Order/Order</a>",
          "type": "integer"
        },
        "plannerId": {
          "format": "int32",
          "description": "Employee ID that scheduled this appointment, as retrievable from <a href=\"?deepLinking=true#/Employee/GetCompanyEmployee\">/api/Employee</a>",
          "type": "integer"
        }
      }
    },
    "CrmActivity": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Activity ID, as retrievable from <a href=\"?deepLinking=true#/CRM/GetActivities\">/api/CRM/Activity</a>",
          "type": "integer"
        },
        "description": {
          "description": "Description of activity",
          "type": "string"
        },
        "color": {
          "format": "int32",
          "description": "32-bit ARGB color value attributed to activity",
          "type": "integer"
        }
      }
    },
    "Currency": {
      "type": "object",
      "properties": {
        "currencyId": {
          "format": "int32",
          "description": "Id for Currency as retrievable from <a href=\"?filter=Currency\">/api/Currency</a>",
          "type": "integer"
        },
        "description": {
          "description": "Currency description",
          "type": "string"
        },
        "shortDescription": {
          "description": "Short currency description",
          "type": "string"
        },
        "rate": {
          "format": "double",
          "description": "Exchange rate",
          "type": "number"
        },
        "isoCode": {
          "description": "ISO identification for currency",
          "type": "string"
        },
        "symbol": {
          "description": "Symbol for this currency",
          "type": "string"
        }
      }
    },
    "V1_15.CustomerBasic": {
      "type": "object",
      "properties": {
        "customerId": {
          "format": "int32",
          "description": "Customer ID, as retrievable from <a href=\"?deepLinking=true#/Customer/GetAll\">/api/Customer</a>",
          "type": "integer"
        },
        "searchKey": {
          "description": "Search key for customer",
          "maxLength": 6,
          "type": "string"
        },
        "name": {
          "description": "Customer Name",
          "type": "string"
        },
        "secondName": {
          "description": "Customer name extension",
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/V1_9.Address",
          "description": "Customer's visiting address"
        },
        "postOfficeBox": {
          "$ref": "#/definitions/PostOfficeBox",
          "description": "Customer's postal address"
        },
        "contactInformation": {
          "$ref": "#/definitions/V1_15.ContactInformation",
          "description": "Customer's contact information"
        },
        "gln": {
          "description": "Global Location Number of customer",
          "type": "string"
        },
        "currencyCode": {
          "format": "int32",
          "description": "currencyCode as received from <a href=\"?filter=Currency\">/api/Currency</a>",
          "type": "integer"
        },
        "debtorMonitoringCode": {
          "description": "Debtor monitoring code, where None = 0, Blocked = 1, DebtCollector = 2",
          "enum": [
            "none",
            "blocked",
            "debtCollector"
          ],
          "type": "string"
        },
        "debtorMonitoringText": {
          "description": "Debtor monitoring text",
          "type": "string"
        }
      }
    },
    "V1_15.ContactInformation": {
      "type": "object",
      "properties": {
        "phone": {
          "description": "Phone number",
          "type": "string"
        },
        "mobile": {
          "description": "Mobile phone number",
          "type": "string"
        },
        "secondPhone": {
          "description": "Secondary phone number",
          "type": "string"
        },
        "email": {
          "description": "Email address",
          "type": "string"
        },
        "website": {
          "description": "Website URL",
          "type": "string"
        }
      }
    },
    "V1_15.Customer": {
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/V1_9.Address",
          "description": "Customer's visiting address"
        },
        "postOfficeBox": {
          "$ref": "#/definitions/PostOfficeBox",
          "description": "Customer's postal address"
        },
        "contactInformation": {
          "$ref": "#/definitions/V1_15.ContactInformation",
          "description": "Customer's contact information"
        },
        "salesEmployees": {
          "description": "Sales employees for customer, as retrievable from <a href=\"?deepLinking=true#/Employees\">/api/Employee</a>",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1_2.SalesEmployee"
          }
        },
        "externalId": {
          "description": "External identifcation at partners",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1_3.ExternalId"
          }
        },
        "webshopCustomerDetails": {
          "$ref": "#/definitions/WebshopCustomerDetails",
          "description": "Details of customer for webshop (only applicable if customer is a webshop customer)"
        },
        "shippingMethodId": {
          "format": "int32",
          "description": "ID for shipping method, as retrievable from <a href=\"?deepLinking=true#/Methods\">/api/Shipping</a>",
          "type": "integer"
        },
        "customerId": {
          "format": "int32",
          "description": "Customer ID, as retrievable from <a href=\"?deepLinking=true#/Customer/GetAll\">/api/Customer</a>",
          "type": "integer"
        },
        "searchKey": {
          "description": "Search key for customer",
          "maxLength": 6,
          "type": "string"
        },
        "name": {
          "description": "Customer Name",
          "type": "string"
        },
        "secondName": {
          "description": "Customer name extension",
          "type": "string"
        },
        "gln": {
          "description": "Global Location Number of customer",
          "type": "string"
        },
        "languageId": {
          "format": "int32",
          "description": "ID of customer's language, as retrievable from <a href=\"?deepLinking=true#/Language/Get\">/api/Language</a>",
          "type": "integer"
        },
        "countryCode": {
          "description": "Country (ISO) ID as retrievable from <a href=\"?deepLinking=true#/Country/GetByIso3166\">/api/Country</a>",
          "type": "string"
        },
        "currencyCode": {
          "format": "int32",
          "description": "Currency ID as retrievable from <a href=\"?deepLinking=true#/Currency/CurrencyCodes\">/api/Currency</a>",
          "type": "integer"
        },
        "contactPerson": {
          "description": "Name of contactperson at customer",
          "type": "string"
        },
        "rayonId": {
          "format": "int32",
          "description": "Rayon ID for customer, as retrievable from <a href=\"?deepLinking=true#/Rayon/Get\">/api/Customer</a>",
          "type": "integer"
        },
        "sectorId": {
          "format": "int32",
          "description": "Sector ID for customer, as retrievable from <a href=\"?deepLinking=true#/Sector/Get\">/api/Customer</a>",
          "type": "integer"
        },
        "customerSince": {
          "format": "date-time",
          "description": "Customer since this date",
          "type": "string"
        },
        "defaultBranche": {
          "format": "int32",
          "description": "Default branche for customer",
          "type": "integer"
        },
        "confirmationRequired": {
          "description": "Confirmation is required for customer's orders",
          "type": "boolean"
        },
        "vatId": {
          "description": "VAT-registration ID for customer",
          "type": "string"
        },
        "chamberOfCommerceId": {
          "description": "Chamber of Commerce registration ID for customer",
          "type": "string"
        },
        "creditInsuranceId": {
          "description": "Id of customer at credit insurance company",
          "type": "string"
        },
        "customerGroupId": {
          "format": "int32",
          "description": "Customer group ID for customer, as retrievable from <a href=\"?deepLinking=true#/CustomerGroup/Get\">/api/Customer</a>",
          "type": "integer"
        },
        "directDebit": {
          "description": "Direct debit is applicable for customer",
          "type": "boolean"
        },
        "maxDirectDebitAmount": {
          "format": "double",
          "description": "Maximum amount for direct debit",
          "type": "number"
        },
        "deliveryCondition": {
          "format": "int32",
          "description": "Delivery condition, as retrievable from <a href=\"?deepLinking=true#/DeliverCondition/Get\">/api/Customer</a>",
          "type": "integer"
        },
        "deliveryNoteCode": {
          "description": "ID of delivery note code, where Free = 0, WithoutPrices = 1,IncludingPrices =2, Cash =3",
          "default": 0,
          "enum": [
            "Free",
            "WithoutPrices",
            "IncludingPrices",
            "Cash"
          ],
          "type": "string"
        },
        "backOrdersAllowed": {
          "description": "Backorders allowed for customer",
          "type": "boolean"
        },
        "remindCustomer": {
          "description": "Customer receives reminder when applicable",
          "type": "boolean"
        },
        "creditLimit": {
          "format": "int32",
          "description": "Maximum credit amount for customer",
          "type": "integer"
        },
        "numberOfInvoices": {
          "format": "int32",
          "description": "Number of (printed) invoices required by customer",
          "type": "integer"
        },
        "calculateAdministrationFees": {
          "description": "Administration fees are charged to customer",
          "type": "boolean"
        },
        "paymentCondition": {
          "format": "int32",
          "description": "Payment condition ID, as retrievable from <a href=\"?deepLinking=true#/PaymentCondition\">/api/Customer</a>",
          "type": "integer"
        },
        "collectiveInvoice": {
          "description": "Customer can receive collective invoices",
          "type": "boolean"
        },
        "singleOrderInvoice": {
          "description": "Customer's invoices always contain one order",
          "type": "boolean"
        },
        "customerOrderNumberRequired": {
          "description": "Orders require customer's order number",
          "type": "boolean"
        },
        "orderReferenceRequired": {
          "description": "Orders require an order reference",
          "type": "boolean"
        },
        "freightCostsId": {
          "format": "int32",
          "description": "ID used for calculation of freight costs",
          "type": "integer"
        },
        "shippingAddressRequired": {
          "description": "Shipping address required for customer",
          "type": "boolean"
        },
        "ediInvoices": {
          "description": "Invoices will be sent via EDI",
          "type": "boolean"
        },
        "ediEmailContact": {
          "format": "int32",
          "description": "Contact for EDI invoices",
          "type": "integer"
        },
        "ediEmailAddress": {
          "description": "Contact for EDI invoices",
          "type": "string"
        },
        "bic": {
          "description": "BIC (Bank Identification Code)",
          "type": "string"
        },
        "iban": {
          "description": "IBAN (International Bank Account Number)",
          "type": "string"
        },
        "isProspect": {
          "description": "Customer is a prospect",
          "type": "boolean"
        },
        "deliveryInFull": {
          "description": "Deliveries in full for customer, no partial deliveries",
          "type": "boolean"
        },
        "backorderInFull": {
          "description": "Back orders are delivered in full",
          "type": "boolean"
        },
        "invoicedIfComplete": {
          "description": "Invoices are only sent after delivery of all orderitems",
          "type": "boolean"
        },
        "invoicedPerOrder": {
          "description": "Invoiced per order",
          "type": "boolean"
        },
        "debtorMonitoringCode": {
          "description": "Debtor monitoring code, where None = 0, Blocked = 1, DebtCollector = 2",
          "enum": [
            "None",
            "Blocked",
            "DebtCollector"
          ],
          "type": "string"
        },
        "debtorMonitoringText": {
          "description": "Debtor monitoring text",
          "type": "string"
        },
        "textId": {
          "format": "int32",
          "description": "Text Id",
          "type": "integer"
        },
        "appId": {
          "description": "ID of application that sends edit request",
          "enum": [
            "Salesforce"
          ],
          "type": "string"
        },
        "isWebshopCustomer": {
          "description": "Customer has a webshop account",
          "type": "boolean"
        },
        "customerClassification": {
          "description": "Customer classification",
          "maxLength": 1,
          "type": "string"
        },
        "annualRevenue": {
          "format": "double",
          "description": "Year to Date revenue for customer",
          "type": "number"
        }
      }
    },
    "V1_2.SalesEmployee": {
      "type": "object",
      "properties": {
        "salesPersonId": {
          "format": "int32",
          "description": "Sales person ID for customer, as retrievable from <a href=\"?deepLinking=true#/Employees\">/api/Employee</a>",
          "type": "integer"
        },
        "salesRepresentativeId": {
          "format": "int32",
          "description": "Sales representative ID for customer, as retrievable from <a href=\"?deepLinking=true#/Representative/Representative\">/api/Representative</a>",
          "type": "integer"
        },
        "salesPersonExternalId": {
          "description": "Sales person ID according to external account",
          "type": "string"
        },
        "salesRepresentativeExternalId": {
          "description": "Sales representative ID according to external account",
          "type": "string"
        }
      }
    },
    "V1_3.ExternalId": {
      "type": "object",
      "properties": {
        "partnerId": {
          "description": "Partner Identification, with \"SF\" = Salesforce",
          "maxLength": 2,
          "type": "string"
        },
        "accountId": {
          "description": "Account ID as registered at partner",
          "type": "string"
        }
      }
    },
    "WebshopCustomerDetails": {
      "required": [
        "storeId",
        "budgets",
        "webshopShippingMethods",
        "paymentMethods"
      ],
      "type": "object",
      "properties": {
        "storeId": {
          "format": "int32",
          "description": "Store ID, as retrievable from <a href=\"?deepLinking=true#/Webshop/Store\">/api/Webshop/Store</a>",
          "type": "integer"
        },
        "productSelections": {
          "description": "Productselections for customer (optional), as retrievable from <a href=\"?deepLinking=true#/ProductSelection\">/api/ProductSelection</a>.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/UmsModels.ProductSelection"
          }
        },
        "budgets": {
          "description": "List of budgets for customer. List should containt at least one budget. In addition, one budget should be marked as default.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/BudgetSimplified"
          }
        },
        "webshopShippingMethods": {
          "description": "List of webshop shipping methods for customer. List should contain at least one webshop shipping method. In addition, one shipping\r\nmethod shoud be marked as default.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShippingMethodWebshop"
          }
        },
        "paymentMethods": {
          "description": "List of payment methods for customer. List should contain at least one payment method. In addition, one payment method should be \r\nmarked as default.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentMethod"
          }
        }
      }
    },
    "UmsModels.ProductSelection": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "default": {
          "type": "boolean"
        }
      }
    },
    "BudgetSimplified": {
      "required": [
        "id"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Id of budget, as retrievable from <a href=\"?deepLinking=true#/Budget/GetBudgetsForCustomer\">/api/Budget</a>",
          "type": "integer"
        },
        "default": {
          "description": "Budget is default budget for customer",
          "type": "boolean"
        }
      }
    },
    "ShippingMethodWebshop": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Webshop shipping method ID, as retrievable from <a href=\"?deepLinking=true#/Shipping/ShippingMethodsWebshop\"> Shipping/MethodsWebshop</a>.",
          "type": "integer"
        },
        "erpId": {
          "format": "int32",
          "description": "Shipping method ID as registered in ERP. A value of -1 indicates that the default shipping method of the customer is applicable.",
          "type": "integer"
        },
        "isDefault": {
          "description": "Shipping method is the default method.",
          "type": "boolean"
        },
        "description": {
          "description": "Description of the shipping method.",
          "type": "string"
        },
        "deliveryCode": {
          "format": "int32",
          "description": "Delivery code, with 0 = delivery note, 1 = NPD sticker, 2 = DHL3D label, 3 = TNT Innight, 4 = Ship, 5 = DGO-Nedpak, 6 = HST, 7 = TPG.",
          "type": "integer"
        }
      }
    },
    "PaymentMethod": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Payment Method Id, as retrievable from <a href=\"?deepLinking=true#/Customer/PaymentMethod\"> Customer/PaymentMethod</a>",
          "type": "integer"
        },
        "description": {
          "description": "Name of payment method",
          "type": "string"
        },
        "isDefault": {
          "description": "Payment method is the default for customer",
          "type": "boolean"
        }
      }
    },
    "V1_15.CustomerEnhanced": {
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/V1_9.Address",
          "description": "Customer visiting address"
        },
        "postOfficeBox": {
          "$ref": "#/definitions/PostOfficeBox",
          "description": "Customer postal address"
        },
        "contactInformation": {
          "$ref": "#/definitions/V1_15.ContactInformation",
          "description": "Customer's contactinformation"
        },
        "shippingAddress": {
          "description": "Customer's shipping addresses",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1_9.ShippingAddress"
          }
        },
        "shippingMethod": {
          "$ref": "#/definitions/ShippingMethod",
          "description": "Default shipping method for customer"
        },
        "projectRequired": {
          "description": "Project specification is required for customer (i.e. in orders etc.)",
          "type": "boolean"
        },
        "applySurchargeOpenedPackage": {
          "description": "Customer will be charged for opened packages",
          "type": "boolean"
        },
        "salesEmployees": {
          "description": "Sales employees for customer, as retrievable from <a href=\"?deepLinking=true#/Employees\">/api/Employee</a>",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1_2.SalesEmployee"
          }
        },
        "externalId": {
          "description": "External identifcation at partners",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1_3.ExternalId"
          }
        },
        "hasPriceList": {
          "description": "Customer has a pricelist",
          "type": "boolean"
        },
        "contactPersons": {
          "description": "Contact persons for customer",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1_11.CustomerEmployee"
          }
        },
        "customerId": {
          "format": "int32",
          "description": "Customer ID, as retrievable from <a href=\"?deepLinking=true#/Customer/GetAll\">/api/Customer</a>",
          "type": "integer"
        },
        "searchKey": {
          "description": "Search key for customer",
          "maxLength": 6,
          "type": "string"
        },
        "name": {
          "description": "Customer Name",
          "type": "string"
        },
        "secondName": {
          "description": "Customer name extension",
          "type": "string"
        },
        "gln": {
          "description": "Global Location Number of customer",
          "type": "string"
        },
        "languageId": {
          "format": "int32",
          "description": "ID of customer's language, as retrievable from <a href=\"?deepLinking=true#/Language/Get\">/api/Language</a>",
          "type": "integer"
        },
        "countryCode": {
          "description": "Country (ISO) ID as retrievable from <a href=\"?deepLinking=true#/Country/GetByIso3166\">/api/Country</a>",
          "type": "string"
        },
        "currencyCode": {
          "format": "int32",
          "description": "Currency ID as retrievable from <a href=\"?deepLinking=true#/Currency/CurrencyCodes\">/api/Currency</a>",
          "type": "integer"
        },
        "contactPerson": {
          "description": "Name of contactperson at customer",
          "type": "string"
        },
        "rayonId": {
          "format": "int32",
          "description": "Rayon ID for customer, as retrievable from <a href=\"?deepLinking=true#/Rayon/Get\">/api/Customer</a>",
          "type": "integer"
        },
        "sectorId": {
          "format": "int32",
          "description": "Sector ID for customer, as retrievable from <a href=\"?deepLinking=true#/Sector/Get\">/api/Customer</a>",
          "type": "integer"
        },
        "customerSince": {
          "format": "date-time",
          "description": "Customer since this date",
          "type": "string"
        },
        "defaultBranche": {
          "format": "int32",
          "description": "Default branche for customer",
          "type": "integer"
        },
        "confirmationRequired": {
          "description": "Confirmation is required for customer's orders",
          "type": "boolean"
        },
        "vatId": {
          "description": "VAT-registration ID for customer",
          "type": "string"
        },
        "chamberOfCommerceId": {
          "description": "Chamber of Commerce registration ID for customer",
          "type": "string"
        },
        "creditInsuranceId": {
          "description": "Id of customer at credit insurance company",
          "type": "string"
        },
        "customerGroupId": {
          "format": "int32",
          "description": "Customer group ID for customer, as retrievable from <a href=\"?deepLinking=true#/CustomerGroup/Get\">/api/Customer</a>",
          "type": "integer"
        },
        "directDebit": {
          "description": "Direct debit is applicable for customer",
          "type": "boolean"
        },
        "maxDirectDebitAmount": {
          "format": "double",
          "description": "Maximum amount for direct debit",
          "type": "number"
        },
        "deliveryCondition": {
          "format": "int32",
          "description": "Delivery condition, as retrievable from <a href=\"?deepLinking=true#/DeliverCondition/Get\">/api/Customer</a>",
          "type": "integer"
        },
        "deliveryNoteCode": {
          "description": "ID of delivery note code, where Free = 0, WithoutPrices = 1,IncludingPrices =2, Cash =3",
          "default": 0,
          "enum": [
            "Free",
            "WithoutPrices",
            "IncludingPrices",
            "Cash"
          ],
          "type": "string"
        },
        "backOrdersAllowed": {
          "description": "Backorders allowed for customer",
          "type": "boolean"
        },
        "remindCustomer": {
          "description": "Customer receives reminder when applicable",
          "type": "boolean"
        },
        "creditLimit": {
          "format": "int32",
          "description": "Maximum credit amount for customer",
          "type": "integer"
        },
        "numberOfInvoices": {
          "format": "int32",
          "description": "Number of (printed) invoices required by customer",
          "type": "integer"
        },
        "calculateAdministrationFees": {
          "description": "Administration fees are charged to customer",
          "type": "boolean"
        },
        "paymentCondition": {
          "format": "int32",
          "description": "Payment condition ID, as retrievable from <a href=\"?deepLinking=true#/PaymentCondition\">/api/Customer</a>",
          "type": "integer"
        },
        "collectiveInvoice": {
          "description": "Customer can receive collective invoices",
          "type": "boolean"
        },
        "singleOrderInvoice": {
          "description": "Customer's invoices always contain one order",
          "type": "boolean"
        },
        "customerOrderNumberRequired": {
          "description": "Orders require customer's order number",
          "type": "boolean"
        },
        "orderReferenceRequired": {
          "description": "Orders require an order reference",
          "type": "boolean"
        },
        "freightCostsId": {
          "format": "int32",
          "description": "ID used for calculation of freight costs",
          "type": "integer"
        },
        "shippingAddressRequired": {
          "description": "Shipping address required for customer",
          "type": "boolean"
        },
        "ediInvoices": {
          "description": "Invoices will be sent via EDI",
          "type": "boolean"
        },
        "ediEmailContact": {
          "format": "int32",
          "description": "Contact for EDI invoices",
          "type": "integer"
        },
        "ediEmailAddress": {
          "description": "Contact for EDI invoices",
          "type": "string"
        },
        "bic": {
          "description": "BIC (Bank Identification Code)",
          "type": "string"
        },
        "iban": {
          "description": "IBAN (International Bank Account Number)",
          "type": "string"
        },
        "isProspect": {
          "description": "Customer is a prospect",
          "type": "boolean"
        },
        "deliveryInFull": {
          "description": "Deliveries in full for customer, no partial deliveries",
          "type": "boolean"
        },
        "backorderInFull": {
          "description": "Back orders are delivered in full",
          "type": "boolean"
        },
        "invoicedIfComplete": {
          "description": "Invoices are only sent after delivery of all orderitems",
          "type": "boolean"
        },
        "invoicedPerOrder": {
          "description": "Invoiced per order",
          "type": "boolean"
        },
        "debtorMonitoringCode": {
          "description": "Debtor monitoring code, where None = 0, Blocked = 1, DebtCollector = 2",
          "enum": [
            "None",
            "Blocked",
            "DebtCollector"
          ],
          "type": "string"
        },
        "debtorMonitoringText": {
          "description": "Debtor monitoring text",
          "type": "string"
        },
        "textId": {
          "format": "int32",
          "description": "Text Id",
          "type": "integer"
        },
        "appId": {
          "description": "ID of application that sends edit request",
          "enum": [
            "Salesforce"
          ],
          "type": "string"
        },
        "isWebshopCustomer": {
          "description": "Customer has a webshop account",
          "type": "boolean"
        },
        "customerClassification": {
          "description": "Customer classification",
          "maxLength": 1,
          "type": "string"
        },
        "annualRevenue": {
          "format": "double",
          "description": "Year to Date revenue for customer",
          "type": "number"
        }
      }
    },
    "V1_9.ShippingAddress": {
      "required": [
        "customerId",
        "name",
        "address",
        "contactInformation",
        "shippingStatus"
      ],
      "type": "object",
      "properties": {
        "customerId": {
          "format": "int32",
          "description": "Customer ID, as retrievable from <a href=\"?deepLinking=true#/Customer/GetAllCustomers\">/api/Customer</a>",
          "type": "integer"
        },
        "id": {
          "format": "int32",
          "description": "Shipping address ID, as retrievable from <a href=\"?deepLinking=true#/Shipping/Get\">/api/Shipping</a>",
          "type": "integer"
        },
        "name": {
          "description": "Shipping address name",
          "type": "string"
        },
        "secondName": {
          "description": "Shipping address extended name",
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/V1_9.Address",
          "description": "Address lines for shipping address"
        },
        "gln": {
          "description": "Global Location Number of shipping address",
          "type": "string"
        },
        "contactInformation": {
          "$ref": "#/definitions/ContactInformation",
          "description": "Contact information for shipping address"
        },
        "shippingStatus": {
          "$ref": "#/definitions/V1_2.ShippingAddressStatus",
          "description": "Status of shipping address"
        },
        "route": {
          "description": "Route identification",
          "type": "string"
        },
        "shippingMethodId": {
          "format": "int32",
          "description": "Shipping method ID, as retrievable from <a href=\"?deepLinking=true#/Shipping/Methods\">/api/Shipping</a>",
          "type": "integer"
        },
        "rayonId": {
          "format": "int32",
          "description": "Rayon ID for shipping address, as retrievable from <a href=\"?deepLinking=true#/Rayon/Get\">/api/Customer</a>",
          "type": "integer"
        },
        "isDefault": {
          "description": "Shipping address is default address",
          "type": "boolean"
        }
      }
    },
    "ShippingMethod": {
      "required": [
        "id"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "languageId": {
          "format": "int32",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "deliveryOnMonday": {
          "type": "boolean"
        },
        "deliveryOnTuesday": {
          "type": "boolean"
        },
        "deliveryOnWednesday": {
          "type": "boolean"
        },
        "deliveryOnThursday": {
          "type": "boolean"
        },
        "deliveryOnFriday": {
          "type": "boolean"
        },
        "deliveryOnSaturday": {
          "type": "boolean"
        },
        "deliveryOnSunday": {
          "type": "boolean"
        },
        "zipcodeRequired": {
          "type": "boolean"
        },
        "checkZipcode": {
          "type": "boolean"
        },
        "weightRequired": {
          "type": "boolean"
        },
        "trackAndTraceURL": {
          "type": "string"
        }
      }
    },
    "V1_11.CustomerEmployee": {
      "type": "object",
      "properties": {
        "customerId": {
          "format": "int32",
          "description": "Customer ID, as retrievable from <a href=\"?deepLinking=true#/Customer/Get\">/api/Customer</a>",
          "type": "integer"
        },
        "employeeId": {
          "format": "int32",
          "description": "Employee ID, as retrievable from <a href=\"?deepLinking=true#/Employee/Get\">/api/Employee</a>",
          "type": "integer"
        },
        "firstName": {
          "description": "First name of employee",
          "type": "string"
        },
        "lastName": {
          "description": "Surname of employee",
          "type": "string"
        },
        "initials": {
          "description": "Initials of employee",
          "type": "string"
        },
        "employeeAddress": {
          "$ref": "#/definitions/V1_9.Address",
          "description": "Address of employee"
        },
        "gender": {
          "description": "Gender of employee, such as M(ale), F(emale) or N.A.",
          "type": "string"
        },
        "titleId": {
          "format": "int32",
          "description": "Employee's title ID, as retrievable from <a href=\"?deepLinking=true#/Titles/Get\">/api/Employee</a>",
          "type": "integer"
        },
        "positionId": {
          "format": "int32",
          "description": "Employees Position Id, as retrievable from <a href=\"?deepLinking=true#/Position/Get\">/api/Employee</a>",
          "type": "integer"
        },
        "contactInformation": {
          "$ref": "#/definitions/V1_2.ContactInformation",
          "description": "Contact information for employee"
        },
        "isEmployed": {
          "description": "Employee is employed by customer",
          "type": "boolean"
        },
        "newslettersAllowed": {
          "description": "Employee may receive digital newsletters",
          "type": "boolean"
        },
        "externalId": {
          "description": "External identifcation at partners",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1_3.ExternalId"
          }
        },
        "appId": {
          "description": "Id of partner that submits request: 0 = Salesforce, 1 = Centix, 2 = Other",
          "enum": [
            "Salesforce",
            "Centix",
            "Other"
          ],
          "type": "string"
        }
      }
    },
    "V1_2.ShippingAddressStatus": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Id of Shipping address status, as retrievable from <a href=\"?deepLinking=true&urls.primaryName=v1.2#/Shipping/ShippingAddressStatus/Get\">/api/Shipping/ShippingAddressStatus</a>",
          "type": "integer"
        },
        "description": {
          "description": "Description of shipping address status",
          "type": "string"
        },
        "toVisit": {
          "description": "Shipping address to be visited",
          "type": "boolean"
        }
      }
    },
    "CustomerBranche": {
      "type": "object",
      "properties": {
        "customerId": {
          "format": "int32",
          "type": "integer"
        },
        "brancheId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "V1_2.ShippingAddress": {
      "type": "object",
      "properties": {
        "customerId": {
          "format": "int32",
          "description": "Customer ID, as retrievable from <a href=\"?deepLinking=true#/Customer/Get\">/api/Customer</a>",
          "type": "integer"
        },
        "id": {
          "format": "int32",
          "description": "Shipping address ID, as retrievable from <a href=\"?deepLinking=true#/Shipping/Get\">/api/Shipping</a>",
          "type": "integer"
        },
        "name": {
          "description": "Shipping address name",
          "type": "string"
        },
        "secondName": {
          "description": "Shipping address extended name",
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/Address",
          "description": "Address lines for shipping address"
        },
        "country": {
          "$ref": "#/definitions/Country",
          "description": "Shipping Address country"
        },
        "gln": {
          "description": "Global Location Number of shipping address",
          "type": "string"
        },
        "contactInformation": {
          "$ref": "#/definitions/V1_2.ContactInformation",
          "description": "Contact information for shipping address"
        },
        "shippingStatus": {
          "$ref": "#/definitions/V1_2.ShippingAddressStatus",
          "description": "Status of shipping address"
        },
        "route": {
          "description": "Route identification",
          "type": "string"
        },
        "shippingMethodId": {
          "format": "int32",
          "description": "Shipping method ID, as retrievable from <a href=\"?deepLinking=true#/Shipping/Methods\">/api/Shipping</a>",
          "type": "integer"
        },
        "rayonId": {
          "format": "int32",
          "description": "Rayon ID for shipping address, as retrievable from <a href=\"?deepLinking=true#/Rayon/Get\">/api/Customer</a>",
          "type": "integer"
        },
        "isDefault": {
          "description": "Shipping address is default address",
          "type": "boolean"
        }
      }
    },
    "RequestProductPriceList": {
      "required": [
        "companyId",
        "branchId",
        "customerId",
        "projectId",
        "shippingAddressId",
        "emailAddress",
        "storeId"
      ],
      "type": "object",
      "properties": {
        "priceListType": {
          "enum": [
            "Groeneveld",
            "Etim",
            "BranchemodelOld",
            "BranchemodelNew"
          ],
          "type": "string"
        },
        "companyId": {
          "format": "int32",
          "description": "companyId as received from <a href=\"?filter=Company\">/api/Company</a>",
          "type": "integer"
        },
        "branchId": {
          "format": "int32",
          "description": "branchId as received from <a href=\"?filter=Branch\">/api/Branch</a>",
          "type": "integer"
        },
        "customerId": {
          "format": "int32",
          "description": "customerId as received from <a href=\"?filter=Customer\">/api/Customer</a>",
          "type": "integer"
        },
        "projectId": {
          "description": "projectId as received from <a href=\"?filter=Project\">/api/Project</a>",
          "type": "string"
        },
        "shippingAddressId": {
          "format": "int32",
          "description": "shippingAddressId as received from <a href=\"?filter=Customer\">/api/Customer</a>",
          "type": "integer"
        },
        "emailAddress": {
          "description": "E-mail address for notitication when pricelist is ready for download",
          "type": "string"
        },
        "storeId": {
          "format": "int32",
          "description": "storeId as received from <a href=\"?filter=Webshop\">/api/Webshop</a>",
          "type": "integer"
        },
        "levels": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Levels"
          }
        }
      }
    },
    "Levels": {
      "type": "object",
      "properties": {
        "level1": {
          "format": "int32",
          "type": "integer"
        },
        "level2": {
          "format": "int32",
          "type": "integer"
        },
        "level3": {
          "format": "int32",
          "type": "integer"
        },
        "level4": {
          "format": "int32",
          "type": "integer"
        },
        "level5": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "V1_14.CustomerGroup": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Customer group Id, as retrievable from <a href=\"?deepLinking=true&urls.primaryName=v1.2#/Customer/CustomerGroup\">/api/Customer</a>",
          "type": "integer"
        },
        "description": {
          "description": "Customer group name",
          "type": "string"
        },
        "calculateSurcharge": {
          "description": "Customer group is charged with a surcharge",
          "type": "boolean"
        },
        "surchargePercentage": {
          "format": "double",
          "description": "Surchage in percent",
          "type": "number"
        },
        "fixedAnnualPrice": {
          "description": "Fixed annual price is used for customer group",
          "type": "boolean"
        },
        "calculateExchangeRateSurcharge": {
          "description": "Customer group is charged with a exchange rate surcharge",
          "type": "boolean"
        },
        "marginAlert": {
          "description": "Margin alert, if false, customers will not appear on list of margin alerts",
          "type": "boolean"
        },
        "ledgerAccount": {
          "format": "int32",
          "description": "Ledger account receivables for customer group",
          "type": "integer"
        }
      }
    },
    "V1_14.Delivery": {
      "required": [
        "companyId",
        "branchId",
        "customerId",
        "orderdate",
        "customerReference",
        "deliveryDate",
        "name",
        "address",
        "type",
        "referencedOrderId"
      ],
      "type": "object",
      "properties": {
        "companyId": {
          "format": "int32",
          "description": "CompanyId as retrievable from <a href=\"?filter=Company\">/api/Company</a>",
          "type": "integer"
        },
        "branchId": {
          "format": "int32",
          "description": "BranchId as retrievable from <a href=\"?filter=Branch\">/api/Branch</a>",
          "type": "integer"
        },
        "storeId": {
          "format": "int32",
          "description": "StoreId where order is placed, as retrievable from <a href=\"?filter=Webshop\">/api/Webshop</a>",
          "type": "integer"
        },
        "orderId": {
          "format": "int32",
          "description": "OrderId as retrievable from <a href=\"?filter=Order\">/api/Order</a>",
          "type": "integer"
        },
        "deliveryId": {
          "format": "int32",
          "type": "integer"
        },
        "customerId": {
          "format": "int32",
          "description": "CustomerId as retrievable from <a href=\"?filter=Customer\">/api/Customer</a>",
          "type": "integer"
        },
        "orderdate": {
          "format": "date-time",
          "type": "string"
        },
        "customerReference": {
          "type": "string"
        },
        "deliveryDate": {
          "format": "date-time",
          "type": "string"
        },
        "addressId": {
          "format": "int32",
          "description": "Address id as retrievable from <a href=\"?filter=Customer\">/api/Customer/ShippingAddress</a>",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "secondName": {
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/V1_9.Address"
        },
        "phone": {
          "type": "string"
        },
        "type": {
          "enum": [
            "Invoice",
            "CreditNote"
          ],
          "type": "string"
        },
        "currencyCode": {
          "format": "int32",
          "description": "currencyCode as retrievable from <a href=\"?filter=Currency\">/api/Currency</a>",
          "type": "integer"
        },
        "customerOrderNumber": {
          "type": "string"
        },
        "numberOfPackages": {
          "format": "int32",
          "type": "integer"
        },
        "numberOfLengths": {
          "format": "int32",
          "type": "integer"
        },
        "numberOfPallets": {
          "format": "int32",
          "type": "integer"
        },
        "numberOfEuroPallets": {
          "format": "int32",
          "type": "integer"
        },
        "numberOfLengthPallets": {
          "format": "int32",
          "type": "integer"
        },
        "weight": {
          "format": "double",
          "type": "number"
        },
        "numberOfLabels": {
          "format": "int32",
          "type": "integer"
        },
        "projectId": {
          "description": "ProjectId as retrievable from <a href=\"?filter=Project\">/api/Project</a>",
          "type": "string"
        },
        "referencedOrderId": {
          "description": "reference to the ordernumber of the calling party",
          "type": "string"
        },
        "referringType": {
          "description": "Specify the type this delivery originates from.",
          "enum": [
            "Unknown",
            "WorkOrder",
            "Rental"
          ],
          "type": "string"
        },
        "webOrderNumber": {
          "type": "string"
        },
        "deliveryValue": {
          "$ref": "#/definitions/Amount",
          "description": "Total invoice amount"
        },
        "lines": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeliveryDetails"
          }
        }
      }
    },
    "DeliveryDetails": {
      "required": [
        "type",
        "productId",
        "description",
        "quantity",
        "invoicedQuantity",
        "price",
        "numberOfSalesUnitPerPrice",
        "discountPercentage1",
        "discountPercentage2",
        "documentTypeId",
        "referencedLineId",
        "costTypeId"
      ],
      "type": "object",
      "properties": {
        "lineId": {
          "format": "int32",
          "type": "integer"
        },
        "orderlineId": {
          "format": "int32",
          "type": "integer"
        },
        "orderlineChildId": {
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "enum": [
            "Product",
            "Special",
            "Cost",
            "Text",
            "Composition",
            "Component",
            "Hours"
          ],
          "type": "string"
        },
        "productId": {
          "description": "ProductId as retrievable from <a href=\"?filter=Product\">/api/Product</a>",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "quantity": {
          "format": "double",
          "type": "number"
        },
        "invoicedQuantity": {
          "format": "double",
          "type": "number"
        },
        "standardPackagingQuantity": {
          "format": "double",
          "description": "Quantity for standard packaging of product",
          "type": "number"
        },
        "price": {
          "$ref": "#/definitions/Amount"
        },
        "packagingPrice": {
          "format": "double",
          "description": "Price for packaging of product",
          "type": "number"
        },
        "vatTarrif": {
          "description": "If not specified product default tariff will be used, or High tariff in case of Costs.",
          "enum": [
            "High",
            "Low",
            "Zero"
          ],
          "type": "string"
        },
        "numberOfSalesUnitPerPrice": {
          "format": "int32",
          "type": "integer"
        },
        "discountPercentage1": {
          "format": "double",
          "type": "number"
        },
        "discountPercentage2": {
          "format": "double",
          "type": "number"
        },
        "netLineAmount": {
          "$ref": "#/definitions/Amount"
        },
        "discountAmount": {
          "$ref": "#/definitions/Amount"
        },
        "warranty": {
          "type": "boolean"
        },
        "documentTypeId": {
          "format": "int32",
          "description": "DocumentTypeId as retrievable from <a href=\"?filter=DocumentType\">/api/DocumentType</a>",
          "type": "integer"
        },
        "referencedLineId": {
          "format": "int32",
          "description": "reference to the linenumber of the calling party",
          "type": "integer"
        },
        "costTypeId": {
          "format": "int32",
          "description": "CostTypeId as retrievable from <a href=\"?filter=CostType\">/api/CostType</a>",
          "type": "integer"
        }
      }
    },
    "DeliveryResult": {
      "type": "object",
      "properties": {
        "companyId": {
          "format": "int32",
          "description": "CompanyId as retrievable from <a href=\"?filter=Company\">/api/Company</a>",
          "type": "integer"
        },
        "branchId": {
          "format": "int32",
          "description": "BranchId as retrievable from <a href=\"?filter=Branch\">/api/Branch</a>",
          "type": "integer"
        },
        "orderId": {
          "format": "int32",
          "description": "OrderId as retrievable from <a href=\"?filter=Order\">/api/Order</a>",
          "type": "integer"
        },
        "deliveryId": {
          "format": "int32",
          "description": "Delivery Id as retrievable from <a href=\"?filter=Delivery\">/api/Delivery</a>",
          "type": "integer"
        }
      }
    },
    "V1_2.DeliveryCondition": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Delivery condition ID, as retrievable from <a href=\"?deepLinking=true&urls.primaryName=v1.2#/Delivery/DeliveryCondition\">/api/Delivery</a>",
          "type": "integer"
        },
        "description": {
          "description": "Name of delivery condition",
          "type": "string"
        },
        "productionType": {
          "description": "Production type of delivery: NoProduction = 0, ExternalProductionIncludingComponents = 4, InternalProduction = 6, InternalProductionWarehouseReceipt = 7, ExternalProduction = 8, ExternalProductionWarehouseReceipt = 9",
          "enum": [
            "GeenProductie",
            "ExterneProductieMetComponenten",
            "InterneProductie",
            "InterneProductieMagazijnbon",
            "ExterneProductie",
            "ExterneProductieMagazijnbon"
          ],
          "type": "string"
        },
        "productionBranche": {
          "format": "int32",
          "description": "ID of production branch, as retrievable from <a href=\"?deepLinking=true#/Branch/Get\">/api/Branch</a>",
          "type": "integer"
        },
        "receivingBranche": {
          "format": "int32",
          "description": "ID of receiving branch, as retrievable from <a href=\"?deepLinking=true#/Branch/Get\">/api/Branch</a>",
          "type": "integer"
        },
        "productionWarehouse": {
          "format": "int32",
          "description": "ID of production warehouse",
          "type": "integer"
        },
        "receivingWarehouse": {
          "format": "int32",
          "description": "ID of receiving warehouse",
          "type": "integer"
        },
        "repackingFerney": {
          "description": "To repack Ferney",
          "type": "boolean"
        }
      }
    },
    "DocumentType": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "workOffer": {
          "type": "boolean"
        },
        "offer": {
          "type": "boolean"
        },
        "orderConfirmation": {
          "type": "boolean"
        },
        "warehouseReceipt": {
          "type": "boolean"
        },
        "deliveryNote": {
          "type": "boolean"
        },
        "invoice": {
          "type": "boolean"
        },
        "workOrder": {
          "type": "boolean"
        },
        "warehouseRecieptWorkOrder": {
          "type": "boolean"
        },
        "counterSubsequentDelivery": {
          "type": "boolean"
        },
        "returnNote": {
          "type": "boolean"
        },
        "returnReceipt": {
          "type": "boolean"
        },
        "toPurchase": {
          "type": "boolean"
        },
        "purchaseAdvice": {
          "type": "boolean"
        },
        "offerRequestPurchaseOrder": {
          "type": "boolean"
        },
        "purchaseOrder": {
          "type": "boolean"
        },
        "goodsReceipt": {
          "type": "boolean"
        },
        "internalInvoice": {
          "type": "boolean"
        },
        "supplierReclamation": {
          "type": "boolean"
        },
        "productionNote": {
          "type": "boolean"
        }
      }
    },
    "V1_16.Employee": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Id of employee, as retrievable from <a href=\"?deepLinking=true#/Employee/GetAllCompanyEmployees\">/api/Employee</a>",
          "type": "integer"
        },
        "name": {
          "description": "Name of employee",
          "type": "string"
        },
        "secondName": {
          "description": "Second name of employee",
          "type": "string"
        },
        "contactInformation": {
          "$ref": "#/definitions/V1_2.ContactInformation",
          "description": "Contact information for employee"
        },
        "purchaser": {
          "description": "Employee is purchaser",
          "type": "boolean"
        },
        "employmentStartDate": {
          "format": "date-time",
          "description": "Startdate of employment",
          "type": "string"
        },
        "employmentEndDate": {
          "format": "date-time",
          "description": "Enddate of employment",
          "type": "string"
        },
        "salesPerson": {
          "description": "Employee is salesperson",
          "type": "boolean"
        },
        "salesRepresentative": {
          "description": "Employee is sales representative",
          "type": "boolean"
        },
        "marketSegmentLeader": {
          "description": "Employee is market segment leader",
          "type": "boolean"
        },
        "inspector": {
          "description": "Employee is inspector",
          "type": "boolean"
        },
        "orderPicker": {
          "description": "Employee is order picker",
          "type": "boolean"
        },
        "mechanic": {
          "description": "Employee is service employee",
          "type": "boolean"
        },
        "goodsReceiver": {
          "description": "Employee is goods receiver",
          "type": "boolean"
        },
        "counterEmployee": {
          "description": "Employee works at the counter",
          "type": "boolean"
        },
        "stockResponsible": {
          "description": "Employee is responsible for stock",
          "type": "boolean"
        },
        "defaultCompany": {
          "format": "int32",
          "description": "Default company for employee, as retrievable from <a href=\"?deepLinking=true#/Company/GetAllCompanies\">/api/Company</a>",
          "type": "integer"
        },
        "defaultBranch": {
          "format": "int32",
          "description": "Default branch for employee, as retrievable from <a href=\"?deepLinking=true#/Branch/GetAllBranches\">/api/Branch</a>",
          "type": "integer"
        },
        "externalId": {
          "description": "External identifcation at partners",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1_3.ExternalId"
          }
        }
      }
    },
    "UmsModels.V1_15.Employee": {
      "required": [
        "lastName",
        "gender"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "username": {
          "maxLength": 60,
          "type": "string"
        },
        "email": {
          "maxLength": 60,
          "type": "string"
        },
        "userEmail": {
          "maxLength": 60,
          "type": "string"
        },
        "ccEmails": {
          "maxLength": 60,
          "type": "string"
        },
        "firstName": {
          "maxLength": 45,
          "type": "string"
        },
        "lastName": {
          "maxLength": 30,
          "type": "string"
        },
        "gender": {
          "maxLength": 1,
          "type": "string"
        },
        "employeeAddress": {
          "$ref": "#/definitions/V1_9.Address"
        },
        "telephone": {
          "maxLength": 25,
          "type": "string"
        },
        "mobile": {
          "maxLength": 25,
          "type": "string"
        },
        "disabled": {
          "type": "boolean"
        }
      }
    },
    "UmsModels.Employee": {
      "description": "Basic employee data",
      "required": [
        "lastName",
        "gender"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "username": {
          "maxLength": 60,
          "type": "string"
        },
        "email": {
          "maxLength": 60,
          "type": "string"
        },
        "userEmail": {
          "maxLength": 60,
          "type": "string"
        },
        "ccEmails": {
          "maxLength": 60,
          "type": "string"
        },
        "firstName": {
          "maxLength": 45,
          "type": "string"
        },
        "lastName": {
          "maxLength": 30,
          "type": "string"
        },
        "gender": {
          "maxLength": 1,
          "type": "string"
        },
        "employeeAddress": {
          "$ref": "#/definitions/UmsModels.Address"
        },
        "telephone": {
          "maxLength": 25,
          "type": "string"
        },
        "mobile": {
          "maxLength": 25,
          "type": "string"
        },
        "disabled": {
          "type": "boolean"
        }
      }
    },
    "UmsModels.Address": {
      "required": [
        "id",
        "country"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "addressLine": {
          "maxLength": 30,
          "type": "string"
        },
        "zipCode": {
          "maxLength": 7,
          "type": "string"
        },
        "city": {
          "maxLength": 25,
          "type": "string"
        },
        "country": {
          "$ref": "#/definitions/UmsModels.Country"
        }
      }
    },
    "UmsModels.Country": {
      "description": "Land",
      "required": [
        "id"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Landnummer",
          "type": "integer"
        },
        "name": {
          "description": "Naam",
          "type": "string"
        }
      }
    },
    "V1_2.Title": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Title ID, as retrievable from <a href=\"?deepLinking=true&urls.primaryName=v1.2#/Employee/Title/Get\">/api/Employee/Title</a>",
          "type": "integer"
        },
        "description": {
          "description": "Title name",
          "type": "string"
        }
      }
    },
    "V1_2.Role": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Role Id, as retrievable from <a href=\"?deepLinking=true&urls.primaryName=v1.2#/Employee/Role/Get\">/api/Employee/Role</a>",
          "type": "integer"
        },
        "description": {
          "description": "Description of role",
          "type": "string"
        }
      }
    },
    "HotlistDetailed": {
      "description": "Hotlist including underlying products",
      "type": "object",
      "properties": {
        "storeId": {
          "format": "int32",
          "description": "StoreId where hotlist is applicable, as retrieved from <a href=\"?filter=Webshop\">/api/Webshop</a>",
          "type": "integer"
        },
        "hotlistId": {
          "format": "int32",
          "description": "User login for which hotlist is applicable, as retrieved from <a href=\"?filter=Webshopuser\">/api/Webshopuser</a>",
          "type": "integer"
        },
        "description": {
          "description": "Description of hotlist",
          "type": "string"
        },
        "customerId": {
          "format": "int32",
          "description": "CustomerId as retrieved from <a href=\"?filter=Customer\">/api/Customer</a>",
          "type": "integer"
        },
        "webshopLogin": {
          "description": "StoreId where order is placed, as retrieved from <a href=\"?filter=Hotlist\">/api/Hotlist</a>",
          "type": "string"
        },
        "products": {
          "description": "List of productIds from Erp as retrieved from <a href=\"?filter=Product\">/api/Product</a>",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "V1_4.Hotlist": {
      "description": "Hotlist",
      "type": "object",
      "properties": {
        "storeId": {
          "format": "int32",
          "description": "StoreId where hotlist is applicable, as retrieved from <a href=\"?filter=Webshop\">/api/Webshop</a>",
          "type": "integer"
        },
        "hotlistId": {
          "format": "int32",
          "description": "User login for which hotlist is applicable, as retrieved from <a href=\"?filter=Webshopuser\">/api/Webshopuser</a>",
          "type": "integer"
        },
        "description": {
          "description": "Description of hotlist",
          "type": "string"
        },
        "customerId": {
          "format": "int32",
          "description": "CustomerId as retrieved from <a href=\"?filter=Customer\">/api/Customer</a>",
          "type": "integer"
        },
        "webshopLogin": {
          "description": "StoreId where order is placed, as retrieved from <a href=\"?filter=Hotlist\">/api/Hotlist</a>",
          "type": "string"
        }
      }
    },
    "InternalInvoice": {
      "required": [
        "companyId",
        "branchId",
        "purchaseId",
        "deliverySequenceId"
      ],
      "type": "object",
      "properties": {
        "companyId": {
          "format": "int32",
          "maximum": 99,
          "minimum": 1,
          "type": "integer"
        },
        "branchId": {
          "format": "int32",
          "maximum": 999,
          "minimum": 1,
          "type": "integer"
        },
        "purchaseId": {
          "format": "int32",
          "maximum": 9999999,
          "minimum": 1,
          "type": "integer"
        },
        "deliverySequenceId": {
          "format": "int32",
          "maximum": 999,
          "minimum": 1,
          "type": "integer"
        },
        "internalInvoiceLines": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/InternalInvoiceLine"
          }
        }
      }
    },
    "InternalInvoiceLine": {
      "required": [
        "internalInvoiceLineId",
        "supplierId",
        "supplierGroupId"
      ],
      "type": "object",
      "properties": {
        "internalInvoiceLineId": {
          "format": "int32",
          "type": "integer"
        },
        "supplierId": {
          "format": "int32",
          "type": "integer"
        },
        "supplierGroupId": {
          "format": "int32",
          "type": "integer"
        },
        "productId": {
          "type": "string"
        },
        "supplierProductId": {
          "type": "string"
        },
        "supplierOrganisationProductId": {
          "type": "string"
        },
        "type": {
          "format": "int32",
          "description": "Type (0=Product, 1=Special, 2=Cost, 3=Text)",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "taxCategoryId": {
          "format": "int32",
          "description": "VAT category Id, as retrievable from <a href=\"?deepLinking=true#/TaxCategories/Get\">/api/TaxCategories</a>",
          "type": "integer"
        },
        "purchaseUnitId": {
          "$ref": "#/definitions/Unit"
        },
        "purchasePriceQuantity": {
          "format": "int32",
          "type": "integer"
        },
        "orderQuantity": {
          "format": "double",
          "type": "number"
        },
        "deliveredQuantity": {
          "format": "double",
          "type": "number"
        },
        "ledgerAccountNumber": {
          "format": "int32",
          "type": "integer"
        },
        "discountPercentage": {
          "format": "double",
          "type": "number"
        },
        "discountPercentage2": {
          "format": "double",
          "type": "number"
        },
        "discountPercentage3": {
          "format": "double",
          "type": "number"
        },
        "purchasePrice": {
          "format": "double",
          "description": "Purchase price (before discounts / surcharges) per unit",
          "type": "number"
        },
        "netPrice": {
          "format": "double",
          "description": "Net price per unit",
          "type": "number"
        },
        "discountAmount": {
          "format": "double",
          "type": "number"
        },
        "netLineAmount": {
          "format": "double",
          "type": "number"
        },
        "zeroPriceAccepted": {
          "type": "boolean"
        },
        "receivingEmployee": {
          "$ref": "#/definitions/Employee"
        },
        "purchaser": {
          "$ref": "#/definitions/Employee"
        }
      }
    },
    "Unit": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Unit id",
          "type": "integer"
        },
        "description": {
          "description": "Unit description",
          "type": "string"
        }
      }
    },
    "Employee": {
      "type": "object",
      "properties": {
        "number": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "purchaser": {
          "type": "boolean"
        }
      }
    },
    "MatchInternalInvoice": {
      "required": [
        "companyId",
        "branchId",
        "purchaseId",
        "deliverySequenceId",
        "internalInvoiceLineId"
      ],
      "type": "object",
      "properties": {
        "companyId": {
          "format": "int32",
          "maximum": 99,
          "minimum": 1,
          "type": "integer"
        },
        "branchId": {
          "format": "int32",
          "maximum": 999,
          "minimum": 1,
          "type": "integer"
        },
        "purchaseId": {
          "format": "int32",
          "maximum": 9999999,
          "minimum": 1,
          "type": "integer"
        },
        "deliverySequenceId": {
          "format": "int32",
          "maximum": 999,
          "minimum": 1,
          "type": "integer"
        },
        "internalInvoiceLineId": {
          "format": "int32",
          "type": "integer"
        },
        "externalId": {
          "description": "Optional if passed directly with UploadPurchaseInvoice",
          "type": "string"
        },
        "purchasePrice": {
          "format": "double",
          "type": "number"
        },
        "discountPercentage": {
          "format": "double",
          "type": "number"
        },
        "invoicedQuantity": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "V1_2.Invoice": {
      "required": [
        "companyId",
        "branchId",
        "invoiceNumber",
        "invoiceTotalAmount",
        "invoiceDate",
        "customerId",
        "vat",
        "currencyCode"
      ],
      "type": "object",
      "properties": {
        "companyId": {
          "format": "int32",
          "description": "CompanyId as retrievable from <a href=\"?deepLinking=true#/Company/Get\">/api/Company</a>",
          "maximum": 99,
          "minimum": 1,
          "type": "integer"
        },
        "branchId": {
          "format": "int32",
          "description": "BranchId as retrievable from <a href=\"?deepLinking=true#/Branch/Get\">/api/Branch</a>",
          "maximum": 999,
          "minimum": 1,
          "type": "integer"
        },
        "invoiceNumber": {
          "format": "int32",
          "description": "InvoiceId as retrievable from <a href=\"?filter=Invoice\">/api/Invoice</a>",
          "maximum": 9999999,
          "minimum": 1,
          "type": "integer"
        },
        "invoiceStatus": {
          "description": "Status of invoice: 0 = Created, 1 = Paid in full",
          "enum": [
            "Created",
            "PaidFully"
          ],
          "type": "string"
        },
        "invoiceTotalAmount": {
          "$ref": "#/definitions/Amount",
          "description": "Invoice total amount incl. VAT"
        },
        "invoiceDate": {
          "format": "date-time",
          "description": "Invoice date",
          "type": "string"
        },
        "customerId": {
          "format": "int32",
          "description": "Customer Id, as retrievable from <a href=\"?deepLinking=true#/Customer/Get\">/api/Customer</a>",
          "maximum": 9999999,
          "minimum": 1,
          "type": "integer"
        },
        "goodsAmount": {
          "$ref": "#/definitions/Amount",
          "description": "Total amount of goods excl. VAT"
        },
        "costAmount": {
          "$ref": "#/definitions/Amount",
          "description": "Total amount of goods excl. VAT"
        },
        "purchaseAmount": {
          "$ref": "#/definitions/Amount",
          "description": "Purchase value of goods"
        },
        "vat": {
          "description": "VAT information",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1_2.Vat"
          }
        },
        "outstandingAmount": {
          "$ref": "#/definitions/Amount",
          "description": "Total amount still to be paid"
        },
        "paymentDiscountTerm": {
          "format": "int32",
          "description": "Customer default will be used if not parsed.",
          "type": "integer"
        },
        "paymentDiscountPercentage": {
          "format": "double",
          "description": "Customer default will be used if not parsed.",
          "type": "number"
        },
        "paymentDiscountAmount": {
          "$ref": "#/definitions/Amount",
          "description": "Will be calculated from paymentDiscountPercentage is not parsed"
        },
        "currencyCode": {
          "format": "int32",
          "description": "currencyCode from obtained from Get CurrencyCodes",
          "maximum": 99,
          "minimum": 0,
          "type": "integer"
        },
        "currencyRate": {
          "format": "double",
          "description": "Default rate for the supplied currency wil be used if not parsed.",
          "type": "number"
        },
        "invoiceType": {
          "description": "Default will be 'Invoice' if not parsed",
          "enum": [
            "Invoice",
            "Prepayment",
            "Credit"
          ],
          "type": "string"
        },
        "orderQuantity": {
          "format": "int32",
          "description": "Number of orders to which this invoice relates.",
          "type": "integer"
        },
        "processByPrinter": {
          "description": "Invoice to be processed by printer",
          "type": "boolean"
        },
        "printQuantity": {
          "format": "int32",
          "description": "Number of times this invoice has been printed",
          "type": "integer"
        },
        "processbyEdi": {
          "description": "Invoice to be processed by EDI",
          "type": "boolean"
        },
        "ediQuantity": {
          "format": "int32",
          "description": "Number of times this invoice has been processed by EDI",
          "type": "integer"
        },
        "processByMailServer": {
          "description": "Invoice to be processed by Mailserver",
          "type": "boolean"
        },
        "mailQuantity": {
          "format": "int32",
          "description": "Number of times this invoice has been sent by Mailserver",
          "type": "integer"
        },
        "processByPrintservice": {
          "description": "Invoice to be processed by print service",
          "type": "boolean"
        },
        "paymentMethod": {
          "description": "Default will be 'On account' if not parsed.",
          "enum": [
            "OnAccount",
            "InCash"
          ],
          "type": "string"
        },
        "projectId": {
          "description": "Project Id, as retrievable from <a href=\"?filter=Project\">/api/Project</a>",
          "type": "string"
        },
        "shippingAddresId": {
          "format": "int32",
          "description": "Shipping Address Id, as retrievable from <a href=\"?filter=Customer\">/api/Customer</a>",
          "type": "integer"
        },
        "invoiceCountry": {
          "$ref": "#/definitions/Country",
          "description": "Country to which invoice is shipped, as retrievable from <a href=\"?filter=Country\">/api/Country</a>"
        },
        "vatTableId": {
          "format": "int32",
          "description": "VAT Table Id",
          "type": "integer"
        },
        "creditLimitTerm": {
          "format": "int32",
          "description": "Credit limit term in days",
          "type": "integer"
        },
        "creditLimitPercentage": {
          "format": "double",
          "description": "Credit limit percentage",
          "type": "number"
        },
        "creditLimitAmount": {
          "$ref": "#/definitions/Amount",
          "description": "Credit limit amount"
        },
        "creditLimitBaseAmount": {
          "$ref": "#/definitions/Amount",
          "description": "Credit limit Base amount"
        },
        "invoiceDiscountAmount": {
          "$ref": "#/definitions/Amount",
          "description": "Invoice discount amount"
        },
        "invoiceDiscountPercentage": {
          "format": "double",
          "description": "Invoice discount in percent",
          "type": "number"
        },
        "interestAmount": {
          "$ref": "#/definitions/Amount",
          "description": "Interest amount"
        },
        "depositAmount": {
          "$ref": "#/definitions/Amount",
          "description": "Deposited Amount"
        },
        "invoiceCustomerId": {
          "format": "int32",
          "description": "Customer Id to whom invoice is addressed, as retrievable from <a href=\"?filter=Customer\">/api/Customer</a>",
          "type": "integer"
        },
        "purchaseGroupId": {
          "format": "int32",
          "description": "Id of Purchase group",
          "type": "integer"
        },
        "reminderQuantity": {
          "format": "int32",
          "description": "Number of issued reminders for invoice",
          "type": "integer"
        },
        "directDebit": {
          "description": "Is invoice direct debit",
          "type": "boolean"
        },
        "dispute": {
          "description": "Is there a dispute for this invoice",
          "type": "boolean"
        },
        "expirationDate": {
          "format": "date-time",
          "description": "Date when invoice will expire",
          "type": "string"
        },
        "firstPaymentDate": {
          "format": "date-time",
          "description": "Date of first payment",
          "type": "string"
        },
        "finalPaymentDate": {
          "format": "date-time",
          "description": "Date of final payment",
          "type": "string"
        },
        "countryVatId": {
          "description": "Country Id according to VAT classification, may differ from regular Country Id",
          "type": "string"
        },
        "orderCustomerId": {
          "format": "int32",
          "description": "Customer Id who placed order, as retrievable from <a href=\"?filter=Customer\">/api/Customer</a>",
          "type": "integer"
        },
        "fiscalNumber": {
          "description": "Fiscal number",
          "type": "string"
        },
        "creditCode": {
          "description": "Credit code for invoice: 0 = invoice, 1 = credit note, 2 = correction",
          "enum": [
            "Invoice",
            "CreditNote",
            "Correction"
          ],
          "type": "string"
        },
        "progressInvoiceId": {
          "format": "int32",
          "description": "Progress Invoice Id, as retrievable from <a href=\"?filter=Invoice\">/api/Invoice</a>",
          "type": "integer"
        },
        "customerPONumber": {
          "description": "Id of customer PO",
          "type": "string"
        },
        "poStatus": {
          "description": "PO Status of invoice: NotApplicable = 0, ToRequest = 5, SendWithoutPONumber = 10, PONumberAvailableInvoiceToBeSend = 15, InvoiceSentPONumberIncluded = 98",
          "enum": [
            "NotApplicable",
            "ToRequest",
            "SendWithoutPONumber",
            "PONumberAvailableInvoiceToBeSend",
            "InvoiceSentPONumberIncluded"
          ],
          "type": "string"
        },
        "poSendDate": {
          "format": "date-time",
          "description": "Date on which invoice is sent with PO number included",
          "type": "string"
        },
        "ledgerJournalEntries": {
          "description": "Ledger number used to register the invoice amount",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1_2.LedgerJournalEntry"
          }
        },
        "userid": {
          "type": "string"
        },
        "internal": {
          "description": "Invoice for order with internal use",
          "type": "boolean"
        }
      }
    },
    "V1_2.Vat": {
      "type": "object",
      "properties": {
        "vatBaseAmount": {
          "$ref": "#/definitions/Amount"
        },
        "vatPercentage": {
          "format": "double",
          "type": "number"
        },
        "vatAmount": {
          "$ref": "#/definitions/Amount"
        }
      }
    },
    "V1_2.LedgerJournalEntry": {
      "required": [
        "branchId",
        "ledgerNumber",
        "description",
        "amount",
        "debitCredit"
      ],
      "type": "object",
      "properties": {
        "branchId": {
          "format": "int32",
          "maximum": 999,
          "minimum": 1,
          "type": "integer"
        },
        "ledgerNumber": {
          "format": "int32",
          "description": "Ledger number used to register the supplied amount",
          "type": "integer"
        },
        "description": {
          "description": "Description to be registered with this entry.",
          "type": "string"
        },
        "amount": {
          "format": "double",
          "description": "Ledger journal amount excl. VAT",
          "type": "number"
        },
        "debitCredit": {
          "description": "Indicates whether the specified amount should be registerd on the debit or credit side of the ledger journal.",
          "enum": [
            "Debit",
            "Credit"
          ],
          "type": "string"
        }
      }
    },
    "Invoice": {
      "required": [
        "companyId",
        "branchId",
        "invoiceNumber",
        "invoiceTotalAmount",
        "invoiceDate",
        "customerId",
        "vat",
        "currencyCode",
        "ledgerJournalEntries"
      ],
      "type": "object",
      "properties": {
        "companyId": {
          "format": "int32",
          "description": "CompanyId as retrievable from <a href=\"?deepLinking=true#/Company/Get\">/api/Company</a>",
          "maximum": 99,
          "minimum": 1,
          "type": "integer"
        },
        "branchId": {
          "format": "int32",
          "description": "BranchId as retrievable from <a href=\"?deepLinking=true#/Branch/Get\">/api/Branch</a>",
          "maximum": 999,
          "minimum": 1,
          "type": "integer"
        },
        "invoiceNumber": {
          "format": "int32",
          "description": "InvoiceId as retrievable from <a href=\"?filter=Invoice\">/api/Invoice</a>",
          "maximum": 9999999,
          "minimum": 1,
          "type": "integer"
        },
        "invoiceTotalAmount": {
          "format": "double",
          "description": "Invoice total amount incl. VAT",
          "type": "number"
        },
        "invoiceDate": {
          "format": "date-time",
          "description": "Invoice date",
          "type": "string"
        },
        "customerId": {
          "format": "int32",
          "description": "Customer Id, as retrievable from <a href=\"?deepLinking=true#/Customer/Get\">/api/Customer</a>",
          "maximum": 9999999,
          "minimum": 1,
          "type": "integer"
        },
        "goodsAmount": {
          "format": "double",
          "description": "Total amount of goods excl. VAT",
          "type": "number"
        },
        "costAmount": {
          "format": "double",
          "description": "Total amount of goods excl. VAT",
          "type": "number"
        },
        "purchaseAmount": {
          "format": "double",
          "description": "Purchase value of goods",
          "type": "number"
        },
        "vat": {
          "description": "VAT information",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Vat"
          }
        },
        "outstandingAmount": {
          "format": "double",
          "type": "number"
        },
        "paymentDiscountTerm": {
          "format": "int32",
          "description": "Customer default will be used if not parsed.",
          "type": "integer"
        },
        "paymentDiscountPercentage": {
          "format": "double",
          "description": "Customer default will be used if not parsed.",
          "type": "number"
        },
        "paymentDiscountAmount": {
          "format": "double",
          "description": "Will be calculated from paymentDiscountPercentage is not parsed",
          "type": "number"
        },
        "currencyCode": {
          "format": "int32",
          "description": "currencyCode from obtained from GetCurrencyCodes",
          "maximum": 99,
          "minimum": 0,
          "type": "integer"
        },
        "currencyRate": {
          "format": "double",
          "description": "Default rate for the supplied currency wil be used if not parsed.",
          "type": "number"
        },
        "invoiceType": {
          "description": "Default will be 'Invoice' if not parsed",
          "enum": [
            "Invoice",
            "Prepayment",
            "Credit"
          ],
          "type": "string"
        },
        "orderQuantity": {
          "format": "int32",
          "description": "Number of orders to which this invoice relates.",
          "type": "integer"
        },
        "printQuantity": {
          "format": "int32",
          "description": "Number of times this invoice has been printed.",
          "type": "integer"
        },
        "paymentMethod": {
          "description": "Default will be 'On account' if not parsed.",
          "enum": [
            "OnAccount",
            "InCash"
          ],
          "type": "string"
        },
        "ledgerJournalEntries": {
          "description": "Ledger number used to register the invoice amount",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/LedgerJournalEntry"
          }
        }
      }
    },
    "Vat": {
      "required": [
        "vatBaseAmount",
        "vatPercentage",
        "vatAmount"
      ],
      "type": "object",
      "properties": {
        "vatBaseAmount": {
          "format": "double",
          "type": "number"
        },
        "vatPercentage": {
          "format": "double",
          "type": "number"
        },
        "vatAmount": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "LedgerJournalEntry": {
      "required": [
        "branchId",
        "ledgerNumber",
        "description",
        "amount",
        "debitCredit"
      ],
      "type": "object",
      "properties": {
        "branchId": {
          "format": "int32",
          "maximum": 999,
          "minimum": 1,
          "type": "integer"
        },
        "ledgerNumber": {
          "format": "int32",
          "description": "Ledger number used to register the supplied amount",
          "type": "integer"
        },
        "description": {
          "description": "Description to be registered with this entry.",
          "type": "string"
        },
        "amount": {
          "format": "double",
          "description": "Ledger journal amount excl. VAT",
          "type": "number"
        },
        "debitCredit": {
          "description": "Indicates whether the specified amount should be registered on the debit or credit side of the ledger journal.",
          "enum": [
            "Debit",
            "Credit"
          ],
          "type": "string"
        }
      }
    },
    "V1_2.PaymentCondition": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Payment condition ID, as retrievable from <a href=\"?deepLinking=true&urls.primaryName=v1.2#/Invoice/PaymentCondition\">/api/Invoice</a>",
          "type": "integer"
        },
        "description": {
          "description": "Name of Payment condition",
          "type": "string"
        },
        "paymentTerm": {
          "format": "int32",
          "description": "Payment term in days",
          "type": "integer"
        },
        "paymentDiscountTerm": {
          "format": "int32",
          "description": "Period of validity for payment discount in days",
          "type": "integer"
        },
        "paymentDiscountPercentage": {
          "format": "double",
          "description": "Payment discount in percent",
          "type": "number"
        },
        "paymentDiscountPercentageCreditInvoice": {
          "format": "double",
          "description": "Payment discount credit invoice in percent",
          "type": "number"
        },
        "creditRestrictionTerm": {
          "format": "int32",
          "description": "Credit restriction term in days",
          "type": "integer"
        },
        "creditRestrictionPercentage": {
          "format": "double",
          "description": "Credit restriction percentage",
          "type": "number"
        },
        "prePaymentCode": {
          "description": "Prepayment code: 0 = None 1 = Cash on Delivery, 2 = Prepayment",
          "enum": [
            "Geen",
            "Rembours",
            "Vooruitbetalen",
            "Contant"
          ],
          "type": "string"
        }
      }
    },
    "Language": {
      "type": "object",
      "properties": {
        "number": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "iso": {
          "type": "string"
        }
      }
    },
    "SupplierGeneralLedgerAccounts": {
      "type": "object",
      "properties": {
        "supplierId": {
          "format": "int32",
          "type": "integer"
        },
        "generalLedgerAccounts": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/GeneralLedgerAccount"
          }
        }
      }
    },
    "LedgerJournal": {
      "required": [
        "companyId",
        "ledgerJournalDate",
        "ledgerJournalEntries"
      ],
      "type": "object",
      "properties": {
        "companyId": {
          "format": "int32",
          "maximum": 99,
          "minimum": 1,
          "type": "integer"
        },
        "ledgerJournalDate": {
          "format": "date-time",
          "type": "string"
        },
        "ledgerJournalEntries": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/LedgerJournalEntry"
          }
        }
      }
    },
    "LogMessage": {
      "type": "object",
      "properties": {
        "errorMessage": {
          "type": "string"
        },
        "errorType": {
          "enum": [
            "FileErrors",
            "MySQLUpdate",
            "ProgramErrors",
            "WebshopUpdate",
            "MailErrors",
            "ServerErrors",
            "Debug",
            "UnhandledException",
            "SendMail",
            "Wms"
          ],
          "type": "string"
        },
        "extendedMessage": {
          "type": "string"
        },
        "priority": {
          "enum": [
            "Unknown",
            "Low",
            "Medium",
            "High"
          ],
          "type": "string"
        }
      }
    },
    "MarketSegment": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "SegmentCustomer": {
      "type": "object",
      "properties": {
        "customerId": {
          "format": "int32",
          "type": "integer"
        },
        "marketSegmentId": {
          "format": "int32",
          "type": "integer"
        },
        "representativeTypeId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "MediaInformation": {
      "description": "Model for media information",
      "type": "object",
      "properties": {
        "productId": {
          "description": "ID of Product for this media information, as retrievable from <a href=\"?deepLinking=true#/Product/ShopProductInformation\">/api/Product</a>",
          "type": "string"
        },
        "languageId": {
          "format": "int32",
          "description": "Language Id where media will be attributed to, as retrievable from <a href=\"?deepLinking=true#/Language/Get\">/api/Language</a>",
          "type": "integer"
        },
        "storeId": {
          "format": "int32",
          "description": "Store Id where media will be attributed to, as retrievable from <a href=\"?filter=Webshop\">/api/Webshop</a>",
          "type": "integer"
        },
        "mediaId": {
          "format": "int32",
          "description": "Id for media, as registered in ERP and as retrievable from <a href=\"?deepLinking=true#/Media/Media\">/api/Media/Media</a>",
          "type": "integer"
        },
        "sequenceId": {
          "format": "int32",
          "description": "Sequence Id of media",
          "type": "integer"
        },
        "mediaType": {
          "description": "Media type, where \"AB\" = picture, \"DC\" = document, \"DP\" = Document of Performace (DoP), \"VB\" = safety data sheet, \"KM\" = certification, \"VD\" = video, \"EV\" = embedded video",
          "maxLength": 2,
          "type": "string"
        },
        "source": {
          "description": "Source of media",
          "maxLength": 200,
          "type": "string"
        },
        "description": {
          "description": "Description of media",
          "maxLength": 200,
          "type": "string"
        },
        "hashCode": {
          "description": "Hash code for media",
          "type": "string"
        },
        "extension": {
          "description": "Extension of media file",
          "maxLength": 5,
          "type": "string"
        },
        "isDefault": {
          "description": "In case of media type picture, picture is default image.",
          "default": false,
          "type": "boolean"
        },
        "toUpdate": {
          "description": "Media will be updated",
          "default": false,
          "type": "boolean"
        }
      }
    },
    "OrderChangeResult": {
      "type": "object",
      "properties": {
        "orderChanges": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderChange"
          }
        },
        "deliveryChanges": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeliveryChange"
          }
        }
      }
    },
    "OrderChange": {
      "type": "object",
      "properties": {
        "orderId": {
          "format": "int32",
          "description": "Order ID, as retrievable from <a href=\"?deepLinking=true#/Order/Get\">/api/Order</a>",
          "type": "integer"
        },
        "dateModified": {
          "format": "date-time",
          "description": "Date when order is modified",
          "type": "string"
        },
        "storeOrderId": {
          "description": "Web order ID as submitted by source where order is placed",
          "type": "string"
        },
        "status": {
          "description": "Order status, with 5 = On hold, 10 = Active, 15 = Being picked, 20 = Partially shipped, 25 = Drop shipment, 97 = Cancelled, 98 = Completed",
          "enum": [
            "OnHold",
            "Active",
            "BeingPicked",
            "PartiallyShipped",
            "DropShipment",
            "Cancelled",
            "Completed"
          ],
          "type": "string"
        },
        "details": {
          "description": "Datails for order change",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderChangeDetail"
          }
        }
      }
    },
    "DeliveryChange": {
      "type": "object",
      "properties": {
        "orderId": {
          "format": "int32",
          "description": "Sales ordernumber of the ERP",
          "type": "integer"
        },
        "sequenceId": {
          "format": "int32",
          "description": "Sequencenumber of this delivery for this specific order",
          "type": "integer"
        },
        "dateModified": {
          "format": "date-time",
          "description": "Date and time of this change",
          "type": "string"
        },
        "storeOrderId": {
          "description": "Sales ordernumber of the webshop",
          "type": "string"
        },
        "shippingMethodId": {
          "format": "int32",
          "description": "Shipping method id of the ERP",
          "type": "integer"
        },
        "shippingMethod": {
          "description": "Shipping method name of the ERP",
          "type": "string"
        },
        "deliveryDate": {
          "format": "date-time",
          "description": "Deliverydate as noted in the ERP",
          "type": "string"
        },
        "trackAndTraceCodes": {
          "description": "The track and trace codes as Mavis received from the WMS",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "details": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeliveryChangeDetail"
          }
        }
      }
    },
    "OrderChangeDetail": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "OrderDetailId as created by the ERP",
          "type": "integer"
        },
        "storeDetailId": {
          "format": "int32",
          "description": "Id of order detail as registered in webshop",
          "type": "integer"
        },
        "productId": {
          "description": "Product Id, as retrievable from <a href=\"?deepLinking=true#/Product/Get\">/api/Product</a>",
          "type": "string"
        },
        "quantityOrdered": {
          "format": "double",
          "description": "Product quantity as ordered",
          "type": "number"
        },
        "quantityAllocated": {
          "format": "double",
          "description": "Product quantity already allocated",
          "type": "number"
        },
        "quantityDelivered": {
          "format": "double",
          "description": "Product quantity already delivered",
          "type": "number"
        },
        "quantityCancelled": {
          "format": "double",
          "description": "Product quantity that is cancelled",
          "type": "number"
        }
      }
    },
    "DeliveryChangeDetail": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "OrderDetailId as created by the ERP",
          "type": "integer"
        },
        "storeDetailId": {
          "format": "int32",
          "description": "OrderDetailId as created by the ERP",
          "type": "integer"
        },
        "productId": {
          "description": "ERP ProductID",
          "type": "string"
        },
        "deliveredQuantity": {
          "format": "double",
          "description": "Delivered quantity",
          "type": "number"
        },
        "remainingQuantity": {
          "format": "double",
          "description": "Remaining quantity",
          "type": "number"
        }
      }
    },
    "V1_14.Order": {
      "required": [
        "companyId"
      ],
      "type": "object",
      "properties": {
        "shippingInformation": {
          "$ref": "#/definitions/V1_9.ShippingAddress",
          "description": "Shippingaddress information if not addressId is passed."
        },
        "customer": {
          "$ref": "#/definitions/V1_14.Customer",
          "description": "Customer for order as retrievable from <a href=\"?filter=Customer\">/api/Customer</a>"
        },
        "orderDetails": {
          "description": "Order details containing all orderlines for order",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1_2.OrderDetail"
          }
        },
        "attachedFiles": {
          "description": "Files attached to order",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AttachedFile"
          }
        },
        "orderId": {
          "format": "int32",
          "description": "Order ID as retrievable from <a href=\"?filter=Order\">/api/Order</a>",
          "type": "integer"
        },
        "storeId": {
          "format": "int32",
          "description": "Store ID where order is placed, as retrievable from <a href=\"?filter=Webshop\">/api/Webshop</a>",
          "type": "integer"
        },
        "companyId": {
          "format": "int32",
          "description": "Company ID as retrievable from <a href=\"?filter=Company\">/api/Company</a>",
          "type": "integer"
        },
        "branchId": {
          "format": "int32",
          "description": "Branch ID as retrievable from <a href=\"?filter=Branch\">/api/Branch</a>",
          "type": "integer"
        },
        "customerId": {
          "format": "int32",
          "description": "Customer ID as retrievable from <a href=\"?filter=Customer\">/api/Customer</a>",
          "type": "integer"
        },
        "deliveryAddressId": {
          "format": "int32",
          "description": "Address ID for delivery as retrievable from <a href=\"?filter=Customer\">/api/Customer/ShippingAddress</a>",
          "type": "integer"
        },
        "webOrderId": {
          "description": "Web order ID as submitted by source where order is placed",
          "type": "string"
        },
        "customerReference": {
          "description": "Reference as submitted by customer",
          "type": "string"
        },
        "orderDate": {
          "format": "date-time",
          "description": "Date when order was placed",
          "type": "string"
        },
        "deliveryDate": {
          "format": "date-time",
          "description": "Date when order will be delivered",
          "type": "string"
        },
        "currencyId": {
          "format": "int32",
          "description": "Currency Id as retrievable from <a href=\"?filter=Currency\">/api/Currency</a>",
          "type": "integer"
        },
        "projectId": {
          "description": "Project Id as retrievable from <a href=\"?filter=Project\">/api/Project</a>",
          "type": "string"
        },
        "customerOrderNumber": {
          "description": "Ordernumber as submitted by customer",
          "type": "string"
        },
        "orderValue": {
          "$ref": "#/definitions/Amount",
          "description": "Total order value"
        },
        "orderStatus": {
          "description": "Status of order (Quotation = 0, FinancialMonitoring = 1, MarginCheck = 2, EdiCheck = 3, Active = 4, ReleasedInternalDelivery = 6, Parked = 10, Cancelled = 97, Processed = 98, Blocked =99)",
          "enum": [
            "Quotation",
            "FinancialMonitoring",
            "MarginCheck",
            "EdiCheck",
            "Active",
            "ReleasedInternalDelivery",
            "Parked",
            "Cancelled",
            "Processed",
            "Blocked"
          ],
          "type": "string"
        },
        "deliveryInFull": {
          "description": "Order will be delivered in full.",
          "type": "boolean"
        }
      }
    },
    "V1_14.Customer": {
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/V1_9.Address",
          "description": "Customer visiting address"
        },
        "postOfficeBox": {
          "$ref": "#/definitions/PostOfficeBox",
          "description": "Customer postal address"
        },
        "contactInformation": {
          "$ref": "#/definitions/V1_2.ContactInformation",
          "description": "Customer's contactinformation"
        },
        "salesEmployees": {
          "description": "Sales employees for customer, as retrievable from <a href=\"?deepLinking=true#/Employees\">/api/Employee</a>",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1_2.SalesEmployee"
          }
        },
        "externalId": {
          "description": "External identifcation at partners",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1_3.ExternalId"
          }
        },
        "webshopCustomerDetails": {
          "$ref": "#/definitions/WebshopCustomerDetails",
          "description": "Details of customer for webshop (only applicable if customer is a webshop customer)"
        },
        "shippingMethodId": {
          "format": "int32",
          "description": "ID for shipping method, as retrievable from <a href=\"?deepLinking=true#/Methods\">/api/Shipping</a>",
          "type": "integer"
        },
        "customerId": {
          "format": "int32",
          "description": "Customer ID, as retrievable from <a href=\"?deepLinking=true#/Customer/GetAll\">/api/Customer</a>",
          "type": "integer"
        },
        "searchKey": {
          "description": "Search key for customer",
          "maxLength": 6,
          "type": "string"
        },
        "name": {
          "description": "Customer Name",
          "type": "string"
        },
        "secondName": {
          "description": "Customer name extension",
          "type": "string"
        },
        "gln": {
          "description": "Global Location Number of customer",
          "type": "string"
        },
        "languageId": {
          "format": "int32",
          "description": "ID of customer's language, as retrievable from <a href=\"?deepLinking=true#/Language/Get\">/api/Language</a>",
          "type": "integer"
        },
        "countryCode": {
          "description": "Country (ISO) ID as retrievable from <a href=\"?deepLinking=true#/Country/GetByIso3166\">/api/Country</a>",
          "type": "string"
        },
        "currencyCode": {
          "format": "int32",
          "description": "Currency ID as retrievable from <a href=\"?deepLinking=true#/Currency/CurrencyCodes\">/api/Currency</a>",
          "type": "integer"
        },
        "contactPerson": {
          "description": "Name of contactperson at customer",
          "type": "string"
        },
        "rayonId": {
          "format": "int32",
          "description": "Rayon ID for customer, as retrievable from <a href=\"?deepLinking=true#/Rayon/Get\">/api/Customer</a>",
          "type": "integer"
        },
        "sectorId": {
          "format": "int32",
          "description": "Sector ID for customer, as retrievable from <a href=\"?deepLinking=true#/Sector/Get\">/api/Customer</a>",
          "type": "integer"
        },
        "customerSince": {
          "format": "date-time",
          "description": "Customer since this date",
          "type": "string"
        },
        "defaultBranche": {
          "format": "int32",
          "description": "Default branche for customer",
          "type": "integer"
        },
        "confirmationRequired": {
          "description": "Confirmation is required for customer's orders",
          "type": "boolean"
        },
        "vatId": {
          "description": "VAT-registration ID for customer",
          "type": "string"
        },
        "chamberOfCommerceId": {
          "description": "Chamber of Commerce registration ID for customer",
          "type": "string"
        },
        "creditInsuranceId": {
          "description": "Id of customer at credit insurance company",
          "type": "string"
        },
        "customerGroupId": {
          "format": "int32",
          "description": "Customer group ID for customer, as retrievable from <a href=\"?deepLinking=true#/CustomerGroup/Get\">/api/Customer</a>",
          "type": "integer"
        },
        "directDebit": {
          "description": "Direct debit is applicable for customer",
          "type": "boolean"
        },
        "maxDirectDebitAmount": {
          "format": "double",
          "description": "Maximum amount for direct debit",
          "type": "number"
        },
        "deliveryCondition": {
          "format": "int32",
          "description": "Delivery condition, as retrievable from <a href=\"?deepLinking=true#/DeliverCondition/Get\">/api/Customer</a>",
          "type": "integer"
        },
        "deliveryNoteCode": {
          "description": "ID of delivery note code, where Free = 0, WithoutPrices = 1,IncludingPrices =2, Cash =3",
          "default": 0,
          "enum": [
            "Free",
            "WithoutPrices",
            "IncludingPrices",
            "Cash"
          ],
          "type": "string"
        },
        "backOrdersAllowed": {
          "description": "Backorders allowed for customer",
          "type": "boolean"
        },
        "remindCustomer": {
          "description": "Customer receives reminder when applicable",
          "type": "boolean"
        },
        "creditLimit": {
          "format": "int32",
          "description": "Maximum credit amount for customer",
          "type": "integer"
        },
        "numberOfInvoices": {
          "format": "int32",
          "description": "Number of (printed) invoices required by customer",
          "type": "integer"
        },
        "calculateAdministrationFees": {
          "description": "Administration fees are charged to customer",
          "type": "boolean"
        },
        "paymentCondition": {
          "format": "int32",
          "description": "Payment condition ID, as retrievable from <a href=\"?deepLinking=true#/PaymentCondition\">/api/Customer</a>",
          "type": "integer"
        },
        "collectiveInvoice": {
          "description": "Customer can receive collective invoices",
          "type": "boolean"
        },
        "singleOrderInvoice": {
          "description": "Customer's invoices always contain one order",
          "type": "boolean"
        },
        "customerOrderNumberRequired": {
          "description": "Orders require customer's order number",
          "type": "boolean"
        },
        "orderReferenceRequired": {
          "description": "Orders require an order reference",
          "type": "boolean"
        },
        "freightCostsId": {
          "format": "int32",
          "description": "ID used for calculation of freight costs",
          "type": "integer"
        },
        "shippingAddressRequired": {
          "description": "Shipping address required for customer",
          "type": "boolean"
        },
        "ediInvoices": {
          "description": "Invoices will be sent via EDI",
          "type": "boolean"
        },
        "ediEmailContact": {
          "format": "int32",
          "description": "Contact for EDI invoices",
          "type": "integer"
        },
        "ediEmailAddress": {
          "description": "Contact for EDI invoices",
          "type": "string"
        },
        "bic": {
          "description": "BIC (Bank Identification Code)",
          "type": "string"
        },
        "iban": {
          "description": "IBAN (International Bank Account Number)",
          "type": "string"
        },
        "isProspect": {
          "description": "Customer is a prospect",
          "type": "boolean"
        },
        "deliveryInFull": {
          "description": "Deliveries in full for customer, no partial deliveries",
          "type": "boolean"
        },
        "backorderInFull": {
          "description": "Back orders are delivered in full",
          "type": "boolean"
        },
        "invoicedIfComplete": {
          "description": "Invoices are only sent after delivery of all orderitems",
          "type": "boolean"
        },
        "invoicedPerOrder": {
          "description": "Invoiced per order",
          "type": "boolean"
        },
        "debtorMonitoringCode": {
          "description": "Debtor monitoring code, where None = 0, Blocked = 1, DebtCollector = 2",
          "enum": [
            "None",
            "Blocked",
            "DebtCollector"
          ],
          "type": "string"
        },
        "debtorMonitoringText": {
          "description": "Debtor monitoring text",
          "type": "string"
        },
        "textId": {
          "format": "int32",
          "description": "Text Id",
          "type": "integer"
        },
        "appId": {
          "description": "ID of application that sends edit request",
          "enum": [
            "Salesforce"
          ],
          "type": "string"
        },
        "isWebshopCustomer": {
          "description": "Customer has a webshop account",
          "type": "boolean"
        },
        "customerClassification": {
          "description": "Customer classification",
          "maxLength": 1,
          "type": "string"
        },
        "annualRevenue": {
          "format": "double",
          "description": "Year to Date revenue for customer",
          "type": "number"
        }
      }
    },
    "V1_2.OrderDetail": {
      "type": "object",
      "properties": {
        "lineId": {
          "format": "int32",
          "description": "LineId for orderdetail",
          "type": "integer"
        },
        "lineChildId": {
          "format": "int32",
          "description": "ChildId for Line",
          "type": "integer"
        },
        "productId": {
          "description": "Product id as retrievable from <a href=\"?filter=Product\">/api/Product/Product</a>",
          "type": "string"
        },
        "orderQuantity": {
          "format": "double",
          "description": "Ordered quantity",
          "type": "number"
        },
        "deliveredQuantity": {
          "format": "double",
          "description": "Delivered quantity",
          "type": "number"
        },
        "toDeliverQuantity": {
          "format": "double",
          "description": "Quantity that is still to be delivered before order is completed",
          "type": "number"
        },
        "cancelledQuantity": {
          "format": "double",
          "description": "Quantity that is cancelled from original order quantity",
          "type": "number"
        },
        "onReservationQuantity": {
          "format": "double",
          "description": "Quantity that is placed on reservation for delivery",
          "type": "number"
        },
        "expectedDeliveryDate": {
          "format": "date-time",
          "description": "Date when delivery is expected",
          "type": "string"
        },
        "description": {
          "description": "Description of orderdetail, i.e. productdescription.",
          "type": "string"
        },
        "salesUnit": {
          "description": "Sales unit description",
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/Amount",
          "description": "Total value of orderdetail"
        },
        "price": {
          "$ref": "#/definitions/Amount",
          "description": "Price of order detail"
        },
        "vatRate": {
          "description": "VAT Rate for order detail",
          "enum": [
            "High",
            "Low",
            "Zero"
          ],
          "type": "string"
        },
        "numberOfSalesUnitPerPrice": {
          "format": "int32",
          "description": "Number of sales units per price",
          "type": "integer"
        },
        "discountRate1": {
          "format": "double",
          "description": "Discount rate 1 of order detail in percent",
          "type": "number"
        },
        "discountRate2": {
          "format": "double",
          "description": "Discount rate 2 of order detail in percent",
          "type": "number"
        },
        "discountAmount": {
          "$ref": "#/definitions/Amount",
          "description": "Discount value"
        },
        "warranty": {
          "description": "Warranty on order detail",
          "type": "boolean"
        },
        "documentTypeId": {
          "format": "int32",
          "description": "DocumentTypeId as retrievable from <a href=\"?filter=DocumentType\">/api/DocumentType</a>",
          "type": "integer"
        },
        "type": {
          "description": "Linetype: 0=Article, 1=Special, 2=Costs, 3=Text, 4=Composition, 5=Composition component, 6=Hours",
          "enum": [
            "Product",
            "Special",
            "Cost",
            "Text",
            "Composition",
            "Component",
            "Hours"
          ],
          "type": "string"
        }
      }
    },
    "AttachedFile": {
      "type": "object",
      "properties": {
        "type": {
          "format": "int32",
          "description": "Attachment type",
          "type": "integer"
        },
        "reference": {
          "description": "Reference for attached file for unique identification",
          "type": "string"
        },
        "sequenceId": {
          "format": "int32",
          "description": "Sequence ID of attached file (in relation to object the file is attached)",
          "type": "integer"
        },
        "name": {
          "description": "File name of attached file",
          "type": "string"
        },
        "description": {
          "description": "Description for attached file",
          "type": "string"
        },
        "documentType": {
          "format": "int32",
          "description": "Document type of file, as retrievable from <a href=\"?deepLinking=true#/DocumentType/GetAllDocumentTypes\">/api/DocumentType</a>",
          "type": "integer"
        }
      }
    },
    "ChangeOrderRequest": {
      "required": [
        "companyId",
        "branchId",
        "orderId"
      ],
      "type": "object",
      "properties": {
        "companyId": {
          "format": "int32",
          "description": "Company ID, as retrievable from <a href=\"?deepLinking=true#/Company/GetAllCompanies\">/api/Company</a>",
          "type": "integer"
        },
        "branchId": {
          "format": "int32",
          "description": "Branch ID. as retrievable from <a href=\"?deepLinking=true#/Branch/GetAllBranches\">/api/Branch</a>",
          "type": "integer"
        },
        "orderId": {
          "format": "int32",
          "description": "Order ID, as retrievable from <a href=\"?deepLinking=true#/Order\">/api/Order</a>",
          "type": "integer"
        },
        "deliveryInFull": {
          "description": "Order should be delivered in full.",
          "type": "boolean"
        },
        "orderLines": {
          "description": "Underlying OrderLines that should be modified",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderLineRequest"
          }
        }
      }
    },
    "OrderLineRequest": {
      "type": "object",
      "properties": {
        "orderLineId": {
          "format": "int32",
          "description": "Order line ID, as retrievable from <a href=\"?deepLinking=true#/Order\">/api/Order</a>",
          "type": "integer"
        },
        "productId": {
          "description": "Product ID, as retrievable from <a href=\"?deepLinking=true#/Product/ShopProductInformation\">/api/Product</a>",
          "type": "string"
        },
        "mutation": {
          "description": "Required change in order line (0 = No Change, 1 = Deliver available products and cancel remaining, 2 = Cancel order line)",
          "enum": [
            "NoChange",
            "DeliverAvailableCancelRemaining",
            "Cancel"
          ],
          "type": "string"
        }
      }
    },
    "Period": {
      "type": "object",
      "properties": {
        "date": {
          "format": "date-time",
          "type": "string"
        },
        "week": {
          "type": "string"
        },
        "quarter": {
          "type": "string"
        }
      }
    },
    "OutstandingPeriod": {
      "type": "object",
      "properties": {
        "companyId": {
          "format": "int32",
          "type": "integer"
        },
        "closingDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "ProductAlternative": {
      "type": "object",
      "properties": {
        "productId": {
          "description": "Product ID, as retrievable from <a href=\"?deepLinking=true#/Product/ShopProductInformation\">/api/Product</a>",
          "type": "string"
        },
        "alternatives": {
          "description": "Alternatives for product",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Alternative"
          }
        }
      }
    },
    "Alternative": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Product ID of alternative product, as retrievable from <a href=\"?deepLinking=true#/Product/ShopProductInformation\">/api/Product</a>",
          "type": "string"
        },
        "type": {
          "description": "Alternative type, where A = alternative and V = replacement",
          "maxLength": 1,
          "pattern": "A|V",
          "type": "string"
        },
        "sequenceId": {
          "format": "int32",
          "description": "Sequence ID of alternative, in order of preference (1 = first preference, 2 = second etc.)",
          "type": "integer"
        },
        "factor": {
          "format": "double",
          "description": "Factor of alternative, i.e. a value of 2 means two alternatives are required to replace 1 product.",
          "type": "number"
        },
        "startDate": {
          "format": "date-time",
          "description": "Start date when alternative is eligible.",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "description": "End date after which alternative is no longere eligible.",
          "type": "string"
        }
      }
    },
    "ArticleGroup": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Id of article group, as retrievable from <a href=\"?deepLinking=true#/Product/ArticleGroup\">/api/Product/ArticleGroup</a>",
          "type": "integer"
        },
        "description": {
          "description": "Description of article group",
          "type": "string"
        },
        "ledgerAccountSales": {
          "$ref": "#/definitions/Ledger",
          "description": "Ledger account for Sales"
        },
        "ledgerAccountCostPrice": {
          "$ref": "#/definitions/Ledger",
          "description": "Ledger account for cost price of sales"
        },
        "ledgerAccountStock": {
          "$ref": "#/definitions/Ledger",
          "description": "Ledger account for stock"
        },
        "ledgerAccountStockChanges": {
          "$ref": "#/definitions/Ledger",
          "description": "Ledger account for stock changes"
        },
        "ledgerAccountRevaluation": {
          "$ref": "#/definitions/Ledger",
          "description": "Ledger account for revaluation"
        },
        "ledgerAccountPriceDifferences": {
          "$ref": "#/definitions/Ledger",
          "description": "Ledger account for price differences"
        },
        "ledgerAccountPurchase": {
          "$ref": "#/definitions/Ledger",
          "description": "Ledger account for purchase (optional in ERP)"
        },
        "ledgerAccountCashSales": {
          "$ref": "#/definitions/Ledger",
          "description": "Ledger account for cash sales (optional in ERP)"
        },
        "ledgerAccountCostPriceCash": {
          "$ref": "#/definitions/Ledger",
          "description": "Ledger account for cost price of cash sales (optional in ERP)"
        },
        "ledgerAccountWorkshopSales": {
          "$ref": "#/definitions/Ledger",
          "description": "Ledger account for workshop sales (optional in ERP)"
        },
        "ledgerAccountCostPriceWorkshop": {
          "$ref": "#/definitions/Ledger",
          "description": "Ledger account for cost price of workshop sales (optional in ERP)"
        },
        "ledgerAccountCalculatedSales": {
          "$ref": "#/definitions/Ledger",
          "description": "Ledger account for calculated sales (optional in ERP)"
        },
        "ledgerAccountCalculatedPurchase": {
          "$ref": "#/definitions/Ledger",
          "description": "Ledger account for calculated purchases (optional in ERP)"
        },
        "ledgerAccountLaborCoverage": {
          "$ref": "#/definitions/Ledger",
          "description": "Ledger account for coverage of labor (optional in ERP)"
        },
        "ledgerAccountPricedSpecials": {
          "$ref": "#/definitions/Ledger",
          "description": "Ledger account for priced specials (optional in ERP)"
        },
        "canOrderSingleUnitErp": {
          "description": "Items in this group can be ordered as a single item in ERP application",
          "type": "boolean"
        },
        "canOrderSingleUnitWebshop": {
          "description": "Items in this group can be ordered as a single item in webshops",
          "type": "boolean"
        },
        "canOrderSingleUnitCounter": {
          "description": "Items in this group can be ordered as a single item at sales counter",
          "type": "boolean"
        }
      }
    },
    "Ledger": {
      "type": "object",
      "properties": {
        "ledgerNumber": {
          "format": "int32",
          "type": "integer"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "Brand": {
      "type": "object",
      "properties": {
        "brandId": {
          "format": "int32",
          "description": "Brand ID, as retrievable from <a href=\"?deepLinking=true#/Product/Brands\">/api/Product/Brand</a>",
          "type": "integer"
        },
        "description": {
          "description": "Description of brand",
          "type": "string"
        }
      }
    },
    "Composition": {
      "required": [
        "productId"
      ],
      "type": "object",
      "properties": {
        "productId": {
          "description": "Product ID of composition, as retrievable from <a href=\"?deepLinking=true#/Product/Product\">/api/Product</a>",
          "type": "string"
        },
        "description": {
          "description": "Product name",
          "type": "string"
        },
        "quantity": {
          "format": "double",
          "description": "Quantity of composition in order (if applicable)",
          "type": "number"
        },
        "price": {
          "format": "double",
          "description": "Price of composition in order (if applicable)",
          "type": "number"
        },
        "length": {
          "format": "double",
          "description": "Length of composition (if applicable for order)",
          "type": "number"
        },
        "type": {
          "description": "Type of product composition (1= final product, 2= composition)",
          "enum": [
            "FinalProduct",
            "Composition"
          ],
          "type": "string"
        },
        "components": {
          "description": "List of underlying components",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Component"
          }
        },
        "textLines": {
          "description": "Additional textlines (if applicable, attached to order)",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Component": {
      "required": [
        "productId"
      ],
      "type": "object",
      "properties": {
        "productId": {
          "description": "Product ID of component, as retrievable from <a href=\"?deepLinking=true#/Product/Product\">/api/Product</a>",
          "type": "string"
        },
        "description": {
          "description": "Productname",
          "type": "string"
        },
        "sequenceId": {
          "format": "int32",
          "description": "Sequence ID of product within the composition in order (please note: sequence id in order differs from sequence id at Composition Maintenance in ERP!)",
          "type": "integer"
        },
        "type": {
          "format": "int32",
          "description": "Line type of component (product (0), end product (1), composition (2), labor (3))",
          "pattern": "0|3",
          "type": "integer"
        },
        "quantity": {
          "format": "double",
          "description": "Quantity of this component in composition",
          "type": "number"
        },
        "attributeId": {
          "format": "int32",
          "description": "Attribute ID attributed to component",
          "type": "integer"
        }
      }
    },
    "CustomerProductReference": {
      "type": "object",
      "properties": {
        "customerId": {
          "format": "int32",
          "description": "Customer ID, as retrievable from <a href=\"?deepLinking=true#/Customer/GetAllCustomers\">/api/Customer</a>",
          "type": "integer"
        },
        "productId": {
          "description": "Product ID, as retrievable from <a href=\"?deepLinking=true#/Product/Get\">/api/Product</a>",
          "type": "string"
        },
        "description": {
          "description": "Product descriptiom",
          "type": "string"
        },
        "customerProductId": {
          "description": "Customer product ID, as retreivable from <a href=\"?deepLinking=true#/Product/CustomerProductReference/{customerId}\">/api/Product/CustomerProductReference/{customerId}</a>",
          "type": "string"
        },
        "customerProductDescription": {
          "description": "Description for customer product",
          "type": "string"
        }
      }
    },
    "CustomerProductReferenceRequest": {
      "required": [
        "customerId",
        "productId",
        "customerProductId"
      ],
      "type": "object",
      "properties": {
        "customerId": {
          "format": "int32",
          "description": "Customer ID, as retrievable from <a href=\"?deepLinking=true#/Customer/GetAllCustomers\">/api/Customer</a>",
          "type": "integer"
        },
        "productId": {
          "description": "Product ID, as retrievable from <a href=\"?deepLinking=true#/Product/Get\">/api/Product</a>",
          "type": "string"
        },
        "customerProductId": {
          "description": "Customer product ID, as retreivable from <a href=\"?deepLinking=true#/Product/CustomerProductReference/{customerId}\">/api/Product/CustomerProductReference/{customerId}</a>",
          "maxLength": 20,
          "type": "string"
        },
        "customerProductDescription": {
          "description": "Description for customer product",
          "maxLength": 45,
          "type": "string"
        }
      }
    },
    "CustomerSpecificProducts": {
      "type": "object",
      "properties": {
        "customerId": {
          "format": "int32",
          "description": "Customer ID, as retrievable from <a href=\"?deepLinking=true#/Customer/GetAllCustomers\">/api/Customer</a>",
          "type": "integer"
        },
        "name": {
          "description": "Customer name",
          "type": "string"
        },
        "products": {
          "description": "List of specific products for customer",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/SpecificProduct"
          }
        }
      }
    },
    "SpecificProduct": {
      "type": "object",
      "properties": {
        "productId": {
          "description": "Product ID as registered in ERP, as retrievable from <a href=\"?deepLinking=true#/Product/ShopProductInformation\">/api/Product/ShopProducts</a>",
          "type": "string"
        },
        "description": {
          "description": "Name of product",
          "type": "string"
        }
      }
    },
    "Ean": {
      "type": "object",
      "properties": {
        "productId": {
          "description": "Product ID, as retrievable from <a href=\"?deepLinking=true#/Product/ShopProductsV1_3\">/api/Product</a>",
          "type": "string"
        },
        "productEan": {
          "description": "European Article Number (EAN) for product",
          "type": "string"
        },
        "factor": {
          "format": "double",
          "description": "Conversion factor that indicates how many items are included in the EAN",
          "type": "number"
        },
        "description": {
          "description": "Description of EAN",
          "type": "string"
        }
      }
    },
    "V1_2.Package": {
      "type": "object",
      "properties": {
        "unitId": {
          "format": "int32",
          "description": "Id for package unit",
          "type": "integer"
        },
        "languageId": {
          "format": "int32",
          "description": "Id for language",
          "type": "integer"
        },
        "description": {
          "description": "Package description",
          "type": "string"
        }
      }
    },
    "V1_3.BranchAvailabilityResult": {
      "type": "object",
      "properties": {
        "branchId": {
          "format": "int32",
          "description": "Branch Id, as retrievable from <a href=\"?deepLinking=true#/Branch/Get\">/api/Branch</a>",
          "type": "integer"
        },
        "branchName": {
          "description": "Branch name",
          "type": "string"
        },
        "availability": {
          "format": "double",
          "description": "Product quantity available",
          "type": "number"
        }
      }
    },
    "ProductAvailabilityResult": {
      "description": "Availability change results",
      "type": "object",
      "properties": {
        "availability": {
          "description": "List of product availability changes",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Company"
          }
        }
      }
    },
    "Company": {
      "type": "object",
      "properties": {
        "companyId": {
          "format": "int32",
          "type": "integer"
        },
        "companyName": {
          "type": "string"
        },
        "branches": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Branch"
          }
        }
      }
    },
    "Branch": {
      "type": "object",
      "properties": {
        "branchId": {
          "format": "int32",
          "type": "integer"
        },
        "branchName": {
          "type": "string"
        },
        "productAvailibility": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductAvailability"
          }
        }
      }
    },
    "ProductAvailability": {
      "type": "object",
      "properties": {
        "dateModified": {
          "format": "date-time",
          "description": "Date and time of this change",
          "type": "string"
        },
        "productId": {
          "description": "ERP ProductID",
          "type": "string"
        },
        "availability": {
          "format": "double",
          "description": "Quantity available for customers",
          "type": "number"
        }
      }
    },
    "ProductDeliveryDaysResult": {
      "description": "Delivery days results",
      "type": "object",
      "properties": {
        "deliverydays": {
          "description": "List of delivery days per product",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductDeliveryDays"
          }
        }
      }
    },
    "ProductDeliveryDays": {
      "type": "object",
      "properties": {
        "productId": {
          "description": "Product SKU",
          "type": "string"
        },
        "deliveryDays": {
          "format": "int32",
          "description": "Estimated number of days to deliver the product when it is out of stock.",
          "type": "integer"
        },
        "estimatedBy": {
          "description": "Type of estimation for estimated delivery days",
          "enum": [
            "System",
            "ManuallyChanged",
            "ManuallyConfirmed",
            "EdiConfirmation"
          ],
          "type": "string"
        }
      }
    },
    "DeliveryDaysRequest": {
      "type": "object",
      "properties": {
        "storeId": {
          "format": "int32",
          "description": "Store ID, as retrievable from <a href=\"?deepLinking=true#/Webshop/Store\">/api/Webshop</a>",
          "type": "integer"
        },
        "productId": {
          "description": "List of product IDs, as retrievable from <a href=\"?deepLinking=true#/Product/ShopProductInformation\">/api/Product</a>",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "V1_4.PriceAndStock": {
      "type": "object",
      "properties": {
        "productId": {
          "description": "Product ID, as retrievable from <a href=\"?deepLinking=true#/Product/Get\">/api/Product</a>",
          "type": "string"
        },
        "price": {
          "format": "double",
          "description": "Product price",
          "type": "number"
        },
        "grossPrice": {
          "format": "double",
          "description": "Product gross price",
          "type": "number"
        },
        "netPrice": {
          "format": "double",
          "description": "Product net price",
          "type": "number"
        },
        "discountPercentage1": {
          "format": "double",
          "description": "First discount on product, in percent",
          "type": "number"
        },
        "discountPercentage2": {
          "format": "double",
          "description": "Second discount on product, in percent",
          "type": "number"
        },
        "netLineAmount": {
          "format": "double",
          "description": "Net line amount",
          "type": "number"
        },
        "discountAmount": {
          "format": "double",
          "description": "Discount amount",
          "type": "number"
        },
        "surchargePercentage": {
          "format": "double",
          "description": "Surcharge on product, in percent",
          "type": "number"
        },
        "marginPercentage": {
          "format": "double",
          "description": "Margin on product, in percent",
          "type": "number"
        },
        "priceCode": {
          "format": "int32",
          "description": "Price code, with 1 = Manual, 2 = Net price agreement, 3 = Discount price agreement, 4 = Discount agreement, 5 = Action price customer group,\r\n6 = Discount arrangement, 7 = Standard price, 8 = Action price, 9 = Surcharge price, 10 = Product price tier,\r\n13 = Price list, 14 = Product assortment discount, 15 = Project price list, \r\n16 = Project net price agreement, 17 = Project discount price agreement, 18 = Project discount agreement, \r\n20 = Price tier discount sub group, 21 = Price tier customer, 22 = Price tier product, 23 = Webshop price, 24 = Webshop credits,\r\n88 = Waranty",
          "type": "integer"
        },
        "packingChargeApplied": {
          "description": "Surcharge on packing applied?",
          "type": "boolean"
        },
        "packingChargePercentage": {
          "format": "double",
          "description": "Surcharge on packing, in percent",
          "type": "number"
        },
        "excluded": {
          "description": "Is product excluded?",
          "type": "boolean"
        },
        "canOrderSingleUnit": {
          "description": "Product can be ordered as a single unit",
          "type": "boolean"
        },
        "stock": {
          "format": "double",
          "description": "Stock amount",
          "type": "number"
        },
        "priceQuantity": {
          "format": "int32",
          "description": "Price quantity",
          "type": "integer"
        },
        "priceQuantityAmount": {
          "format": "double",
          "description": "Price as calculated in price quantity",
          "type": "number"
        },
        "priceUnit": {
          "description": "Price unit",
          "type": "string"
        },
        "unitQuantity": {
          "format": "int32",
          "description": "Unit for quantity",
          "type": "integer"
        },
        "standardPackagingQuantity": {
          "format": "double",
          "description": "Quantity for standard packaging of product",
          "type": "number"
        },
        "packagingPrice": {
          "format": "double",
          "description": "Price for packaging of product",
          "type": "number"
        },
        "suggestedRetailPrice": {
          "format": "double",
          "description": "Suggested retail price",
          "type": "number"
        },
        "retailPrice": {
          "format": "double",
          "description": "Retail price according to price list",
          "type": "number"
        },
        "standardPrice": {
          "format": "double",
          "description": "Standard accounting price",
          "type": "number"
        },
        "averagePurchasePrice": {
          "format": "double",
          "description": "Average purchase price",
          "type": "number"
        },
        "quantity": {
          "format": "double",
          "description": "Product quantity",
          "type": "number"
        },
        "error": {
          "description": "Error message",
          "type": "boolean"
        },
        "cost": {
          "description": "Cost for product",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cost"
          }
        },
        "state": {
          "format": "int32",
          "description": "Product state, with 1 = Stock, 2 = No stock, 3 = Do not order, 5 = Do not order / sell, 6 = Outlet, 7 = Do not sell, 8 = Special, 9 = Can be deleted",
          "type": "integer"
        }
      }
    },
    "Cost": {
      "type": "object",
      "properties": {
        "description": {
          "description": "Cost description",
          "type": "string"
        },
        "amount": {
          "format": "double",
          "description": "Cost currency amount",
          "type": "number"
        }
      }
    },
    "PriceAndStockRequest": {
      "type": "object",
      "properties": {
        "storeId": {
          "format": "int32",
          "description": "Store ID, as retrievable from <a href=\"?deepLinking=true#/Webshop/Get\">/api/Webshop</a>",
          "type": "integer"
        },
        "companyId": {
          "format": "int32",
          "description": "Company ID, as retrievable from <a href=\"?deepLinking=true#/Company/Get\">/api/Company</a>",
          "type": "integer"
        },
        "branchId": {
          "format": "int32",
          "description": "Branch ID, as retrievable from <a href=\"?deepLinking=true#/Branch/Get\">/api/Branch</a>",
          "type": "integer"
        },
        "customerId": {
          "format": "int32",
          "description": "Customer ID, as retrievable from <a href=\"?deepLinking=true#/Customer/Get\">/api/Customer</a>",
          "type": "integer"
        },
        "employeeId": {
          "format": "int32",
          "description": "Employee ID, as retrievable from <a href=\"?deepLinking=true#/Customer/Get\">/api/Customer</a>",
          "type": "integer"
        },
        "productIds": {
          "description": "List of product IDs, as retrievable from <a href=\"?deepLinking=true#/CustomerEmployee/Get\">/api/Product</a>",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "quantities": {
          "description": "List of quantities for product IDs in request",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "format": "double",
            "type": "number"
          }
        },
        "attributes": {
          "description": "List of attrributes for product",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PriceTiers": {
      "type": "object",
      "properties": {
        "productId": {
          "description": "Product ID, as retrievable from <a href=\"?deepLinking=true#/Product/ShopProductInformation\">/api/Product</a>",
          "type": "string"
        },
        "productTiers": {
          "description": "Price tiers for product",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PriceTier"
          }
        },
        "customerTiers": {
          "description": "Price tiers for customer",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerPriceTier"
          }
        }
      }
    },
    "PriceTier": {
      "type": "object",
      "properties": {
        "from": {
          "format": "double",
          "description": "Minimum quantity for which price tier is applicable",
          "type": "number"
        },
        "until": {
          "format": "double",
          "description": "Maximum quantity up to which price tier is applicable",
          "type": "number"
        },
        "discount": {
          "format": "double",
          "description": "Discount percentage for this price tier",
          "type": "number"
        },
        "price": {
          "format": "double",
          "description": "Applicable price for this price tier",
          "type": "number"
        }
      }
    },
    "CustomerPriceTier": {
      "type": "object",
      "properties": {
        "from": {
          "format": "double",
          "description": "Minimum quantity for which price tier is applicable",
          "type": "number"
        },
        "until": {
          "format": "double",
          "description": "Maximum quantity up to which price tier is applicable",
          "type": "number"
        },
        "discount": {
          "format": "double",
          "description": "Discount percentage for this price tier",
          "type": "number"
        },
        "discount2": {
          "format": "double",
          "description": "Second discount percentage for customer price tier",
          "type": "number"
        },
        "price": {
          "format": "double",
          "description": "Applicable price for this price tier",
          "type": "number"
        },
        "multiplicationRequired": {
          "description": "(Only in case when customer price tiers are applicable) Price tier only valid as a multiple, else product price tiers are valid.",
          "type": "boolean"
        },
        "multiplicationQuantity": {
          "format": "double",
          "description": "Multiplication quantity for which customer price tier is valid",
          "type": "number"
        }
      }
    },
    "PromotionalPriceAndStock": {
      "type": "object",
      "properties": {
        "productId": {
          "description": "Product ID, as retrievable from <a href=\"?deepLinking=true#/Product/Get\">/api/Product</a>",
          "type": "string"
        },
        "price": {
          "format": "double",
          "description": "Product price",
          "type": "number"
        },
        "stock": {
          "format": "double",
          "description": "Stock amount",
          "type": "number"
        },
        "priceUnit": {
          "description": "Price unit",
          "type": "string"
        },
        "unitQuantity": {
          "format": "int32",
          "description": "Unit for quantity",
          "type": "integer"
        },
        "startDate": {
          "format": "date-time",
          "description": "Start date for promotional price",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "description": "End date for promotional price. No end date (value is null) indicates that promotional price is valid untill revoked.",
          "type": "string"
        }
      }
    },
    "V1_3.ShopProduct": {
      "type": "object",
      "properties": {
        "productId": {
          "description": "Product ID, as retrievable from <a href=\"?deepLinking=true#/Product/Get\">/api/Product</a>",
          "type": "string"
        },
        "productData": {
          "$ref": "#/definitions/V1_3.ShopProductData",
          "description": "Comprehensive product data"
        },
        "dataHash": {
          "description": "Value of datahash",
          "type": "string"
        }
      }
    },
    "V1_3.ShopProductData": {
      "type": "object",
      "properties": {
        "storeId": {
          "format": "int32",
          "description": "Store ID, as retrievable from <a href=\"?deepLinking=true#/Webshop/Store\">/api/Webshop/Store</a>",
          "type": "integer"
        },
        "name": {
          "description": "Name of product",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/CultureString"
          }
        },
        "shortDescription": {
          "description": "Short description of product",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/CultureString"
          }
        },
        "fullDescription": {
          "description": "Comprehensive description of product",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/CultureString"
          }
        },
        "metaKeywords": {
          "description": "Meta keywords for product",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/CultureString"
          }
        },
        "supplierId": {
          "format": "int32",
          "description": "Supplier ID",
          "type": "integer"
        },
        "gtin": {
          "description": "Global Trade Item Number (GTIN) for product",
          "type": "string"
        },
        "taxCategoryId": {
          "format": "int32",
          "description": "VAT category Id, as retrievable from <a href=\"?deepLinking=true#/TaxCategories/Get\">/api/TaxCategories</a>",
          "type": "integer"
        },
        "price": {
          "format": "double",
          "description": "Sales price for product",
          "type": "number"
        },
        "specialPrice": {
          "format": "double",
          "description": "Special / promotional price for product",
          "type": "number"
        },
        "specialPriceStartDateTimeUtc": {
          "format": "date-time",
          "description": "Starting date when special price is applicable",
          "type": "string"
        },
        "specialPriceEndDateTimeUtc": {
          "format": "date-time",
          "description": "End date after which special price is no longer applicable",
          "type": "string"
        },
        "weight": {
          "format": "double",
          "description": "Weight of product",
          "type": "number"
        },
        "consumerPrice": {
          "format": "double",
          "description": "Consumer price for product",
          "type": "number"
        },
        "unit": {
          "description": "Sales unit for product",
          "type": "string"
        },
        "priceUnit": {
          "description": "Pricing unit for product",
          "type": "string"
        },
        "priceFactor": {
          "format": "int32",
          "description": "Factor for price calculation",
          "type": "integer"
        },
        "brand": {
          "description": "Brand name",
          "type": "string"
        },
        "supplierProductId": {
          "description": "Product Id at supplier",
          "type": "string"
        },
        "purchaseProductId": {
          "description": "Product Id at purchase organisation",
          "type": "string"
        },
        "standardPackageQuantity": {
          "format": "double",
          "description": "Quantity of product in standard packaging",
          "type": "number"
        },
        "hasTierPrice": {
          "description": "Has product a tier price?",
          "type": "boolean"
        },
        "state": {
          "format": "int32",
          "description": "Product state, with 1 = Stock, 2 = No stock, 3 = Do not order, 5 = Do not order / sell, 6 = Outlet, 7 = Do not sell, 8 = Special, 9 = Can be deleted",
          "type": "integer"
        },
        "canOrderSingleUnit": {
          "description": "If in package, single unit can be ordered",
          "type": "boolean"
        },
        "isoUnit": {
          "description": "ISO-identication of unit",
          "type": "string"
        },
        "unspsc": {
          "format": "int64",
          "description": "United Nations Standard Products and Services Code (UNSPSC) for product",
          "type": "integer"
        },
        "surchargeOpenedPackage": {
          "format": "double",
          "description": "Calculate a surcharge if package has to be opened to deliver desired quantity",
          "type": "number"
        },
        "unitId": {
          "format": "int32",
          "description": "ID for sales unit",
          "type": "integer"
        },
        "productDimensions": {
          "$ref": "#/definitions/Dimensions",
          "description": "Dimensions for product, such as height, weight"
        },
        "packageDimensions": {
          "$ref": "#/definitions/Dimensions",
          "description": "Dimensions for package, such as height, weigth"
        },
        "searchKey": {
          "description": "Search key for product",
          "type": "string"
        },
        "vatRate": {
          "format": "double",
          "description": "Vat rate in percent",
          "type": "number"
        },
        "webshopBasePrice": {
          "format": "double",
          "description": "Basis price (including surcharge) for product",
          "type": "number"
        },
        "transferPrice": {
          "format": "double",
          "description": "Transfer price for product",
          "type": "number"
        }
      }
    },
    "CultureString": {
      "type": "object",
      "properties": {
        "languageId": {
          "format": "int32",
          "description": "Language ID, as retrievable from <a href=\"?deepLinking=true#/Language/Get\">/api/Language</a>",
          "type": "integer"
        },
        "value": {
          "description": "Value of string",
          "type": "string"
        }
      }
    },
    "Dimensions": {
      "type": "object",
      "properties": {
        "length": {
          "format": "double",
          "description": "Length in mm",
          "type": "number"
        },
        "width": {
          "format": "double",
          "description": "Width in mm",
          "type": "number"
        },
        "height": {
          "format": "double",
          "description": "Height in mm",
          "type": "number"
        },
        "weight": {
          "format": "double",
          "description": "Weight in gram",
          "type": "number"
        }
      }
    },
    "ShopProductHash": {
      "type": "object",
      "properties": {
        "productId": {
          "description": "Product ID, as retrievable from <a href=\"?deepLinking=true#/Product/Get\">/api/Product</a>",
          "type": "string"
        },
        "dataHash": {
          "description": "Value of datahash",
          "type": "string"
        }
      }
    },
    "Product": {
      "type": "object",
      "properties": {
        "productId": {
          "description": "Product ID, as retrievable from <a href=\"?deepLinking=true#/Product/Get\">/api/Product</a>",
          "type": "string"
        },
        "description": {
          "description": "Name of product",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "purchaseDescription": {
          "description": "Product description according to purchaser",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "price": {
          "format": "double",
          "description": "Sales price for product",
          "type": "number"
        },
        "standardCost": {
          "format": "double",
          "description": "Standard Price for product",
          "type": "number"
        },
        "grossPurchasePrice": {
          "format": "double",
          "description": "Gross purchase price for product",
          "type": "number"
        },
        "purchasePrice": {
          "format": "double",
          "description": "Purchase price for product",
          "type": "number"
        },
        "consumerPrice": {
          "format": "double",
          "description": "Price for product for consumer",
          "type": "number"
        },
        "offerPrice": {
          "format": "double",
          "description": "Special / Promotional price",
          "type": "number"
        },
        "offerStarts": {
          "format": "date-time",
          "description": "Starting date when special price is applicable",
          "type": "string"
        },
        "offerEnds": {
          "format": "date-time",
          "description": "End date after which special price is no longer applicable",
          "type": "string"
        },
        "taxRate": {
          "format": "double",
          "description": "VAT rate for product",
          "type": "number"
        },
        "standardPackingQuantity": {
          "format": "double",
          "description": "Quantity of product in standard packaging",
          "type": "number"
        },
        "unspsc": {
          "description": "United Nations Standard Products and Services Code (UNSPSC) for product",
          "type": "string"
        },
        "ean": {
          "description": "European Article Number (EAN) for product",
          "type": "string"
        },
        "supplierProductId": {
          "description": "Product Id at supplier",
          "type": "string"
        },
        "purchasingOrganizationProductId": {
          "description": "Product Id at purchase organisation",
          "type": "string"
        },
        "salesUnit": {
          "description": "Sales unit description",
          "type": "string"
        },
        "priceFactor": {
          "format": "double",
          "description": "Factor for price calculation",
          "type": "number"
        },
        "productType": {
          "description": "Type Id for product, where 0 = Regular, 1 = Finished product, 2 = Composition, 3 = Labor product",
          "enum": [
            "Regular",
            "EndProduct",
            "Composition",
            "Labor"
          ],
          "type": "string"
        },
        "productDimensions": {
          "$ref": "#/definitions/Dimensions",
          "description": "Dimensions for product, such as height, weight"
        },
        "packagingDimensions": {
          "$ref": "#/definitions/Dimensions",
          "description": "Dimensions for package, such as height, weigth"
        }
      }
    },
    "ProductInformation": {
      "description": "Model for product information",
      "required": [
        "description",
        "supplierPID",
        "searchKey",
        "manufacturerPID",
        "groupId",
        "subGroupId"
      ],
      "type": "object",
      "properties": {
        "description": {
          "description": "Name of product",
          "maxLength": 45,
          "type": "string"
        },
        "supplierPID": {
          "description": "Product ID as registered in ERP system, as retrievable from <a href=\"?deepLinking=true#/Product/Get\">/api/Product</a>",
          "maxLength": 14,
          "type": "string"
        },
        "searchKey": {
          "description": "Search key for product",
          "maxLength": 15,
          "type": "string"
        },
        "supplierAltPID": {
          "description": "Product ID at purchase organisation",
          "maxLength": 30,
          "type": "string"
        },
        "internationalPID": {
          "description": "European Article Number (EAN) for product",
          "maxLength": 20,
          "type": "string"
        },
        "manufacturerPID": {
          "description": "Product Id at supplier",
          "maxLength": 30,
          "type": "string"
        },
        "keywords": {
          "description": "Meta keywords for product",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/CultureString"
          }
        },
        "mediaInformation": {
          "description": "Media details for product",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/MediaInformation"
          }
        },
        "priceInformation": {
          "$ref": "#/definitions/PriceInformation",
          "description": "Price details for product"
        },
        "unitId": {
          "format": "int32",
          "description": "ID for sales unit",
          "type": "integer"
        },
        "priceQuantity": {
          "format": "double",
          "description": "Quantity of product for which price is applicable",
          "type": "number"
        },
        "contentUnitPerOrderUnit": {
          "format": "int32",
          "description": "Number of content units in order unit",
          "type": "integer"
        },
        "customsNumber": {
          "format": "int32",
          "description": "Product code as required by customs and as registered at Statistical Office",
          "type": "integer"
        },
        "countryOfOrigin": {
          "format": "int32",
          "description": "Country ID for product's country of origin, as retrievable from <a href=\"?deepLinking=true#/Country/Get\">/api/Country</a>",
          "type": "integer"
        },
        "unspsc": {
          "format": "int64",
          "description": "United Nations Standard Products and Services Code (UNSPSC) for product",
          "type": "integer"
        },
        "deviatePacking": {
          "description": "Indicates if deviation of standard packing quantity is allowed in orders",
          "default": false,
          "type": "boolean"
        },
        "canOrderSingleUnit": {
          "description": "Indicates if deviation of standard packing quantity is allowed in orders in webshop",
          "default": false,
          "type": "boolean"
        },
        "standardPackingQuantity": {
          "format": "double",
          "description": "Quantity of product in standard packaging",
          "type": "number"
        },
        "purchaseUnitId": {
          "format": "int32",
          "description": "Purchase unit Id",
          "type": "integer"
        },
        "purchaseUnitQuantity": {
          "format": "double",
          "description": "Quantity in purchase unit",
          "default": 1,
          "type": "number"
        },
        "purchaseMinimum": {
          "format": "double",
          "description": "Minimum quantity for purchase",
          "type": "number"
        },
        "packageQuantity": {
          "format": "double",
          "description": "Package quantity for product",
          "default": 1,
          "type": "number"
        },
        "salesDescription": {
          "description": "Sales description of product",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "state": {
          "format": "int32",
          "description": "Product state, with 1 = Stock, 2 = No stock, 3 = Do not order, 5 = Do not order / sell, 6 = Outlet, 7 = Do not sell, 8 = Special, 9 = Can be deleted",
          "default": 2,
          "type": "integer"
        },
        "groupId": {
          "format": "int32",
          "description": "Product group ID",
          "type": "integer"
        },
        "subGroupId": {
          "format": "int32",
          "description": "Product sub group ID",
          "type": "integer"
        },
        "groupFull": {
          "description": "Full group identification",
          "type": "string"
        },
        "subGroupFull": {
          "description": "Full subgroup identification",
          "type": "string"
        },
        "supplierId": {
          "format": "int32",
          "description": "Supplier Id",
          "type": "integer"
        }
      }
    },
    "PriceInformation": {
      "description": "Price information for product",
      "type": "object",
      "properties": {
        "salesPrice": {
          "format": "double",
          "description": "Sales price for product",
          "type": "number"
        },
        "purchasePrice": {
          "format": "double",
          "description": "Gross purchase price for product",
          "type": "number"
        },
        "specialPrice": {
          "format": "double",
          "description": "Special / promotional price",
          "type": "number"
        },
        "specialPriceStartDateTimeUtc": {
          "format": "date-time",
          "description": "Starting date when special price is applicable",
          "type": "string"
        },
        "specialPriceEndDateTimeUtc": {
          "format": "date-time",
          "description": "End date after which special price is no longer applicable",
          "type": "string"
        },
        "taxCategoryId": {
          "format": "int32",
          "description": "VAT category Id, as retrievable from <a href=\"?deepLinking=true#/TaxCategories/Get\">/api/TaxCategories</a>",
          "type": "integer"
        }
      }
    },
    "AttributeSet": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Attribute set ID, as retrievable from <a href=\"?deepLinking=true#/Product/ProductAttributeSets\">/api/Product/ProductAttributeSet</a>",
          "type": "integer"
        },
        "description": {
          "description": "Description of attribute set",
          "type": "string"
        },
        "productAttributes": {
          "description": "Product attributes assigned to attribute set",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductAttribute"
          }
        }
      }
    },
    "ProductAttribute": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Product Attribute ID, as retrievable from <a href=\"?deepLinking=true#/Product/ProductAttributes\">/api/Product/ProductAttribute</a>",
          "type": "integer"
        },
        "description": {
          "description": "Product attribute name",
          "type": "string"
        },
        "allowFiltering": {
          "description": "Shop can filter on option",
          "type": "boolean"
        },
        "value": {
          "description": "Attribute value",
          "type": "string"
        },
        "unit": {
          "description": "Attribute unit description",
          "type": "string"
        },
        "options": {
          "description": "Product attribute options",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductAttributeOption"
          }
        },
        "datahash": {
          "description": "Value of datahash",
          "type": "string"
        },
        "displayOrder": {
          "format": "int32",
          "description": "Display order of attribute",
          "type": "integer"
        }
      }
    },
    "ProductAttributeOption": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Option Id",
          "type": "integer"
        },
        "productAttributeId": {
          "format": "int32",
          "description": "Product Attribute ID, as retrievable from",
          "type": "integer"
        },
        "description": {
          "description": "Opion name",
          "type": "string"
        },
        "minValue": {
          "format": "double",
          "description": "Minimum value for option",
          "type": "number"
        },
        "maxValue": {
          "format": "double",
          "description": "Max value for option",
          "type": "number"
        },
        "valueDisplayOrder": {
          "format": "int32",
          "description": "Display order of product attribute option",
          "type": "integer"
        }
      }
    },
    "AttributeProduct": {
      "type": "object",
      "properties": {
        "productId": {
          "description": "Product ID, as retrievable from <a href=\"?deepLinking=true#/Product/Get\">/api/Product</a>",
          "type": "string"
        },
        "attributes": {
          "description": "Attributes for product",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductAttribute"
          }
        },
        "datahash": {
          "description": "Value of datahash",
          "type": "string"
        }
      }
    },
    "ShopHash": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "ID of hashed object",
          "type": "integer"
        },
        "dataHash": {
          "description": "Value of hash",
          "type": "string"
        }
      }
    },
    "V1_2.RelatedProduct": {
      "type": "object",
      "properties": {
        "storeId": {
          "format": "int32",
          "description": "Id of Store, as retrievable from <a href=\"?filter=Webshop\">/api/Webshop</a>",
          "type": "integer"
        },
        "productId": {
          "description": "Id of product, as retrievable from <a href=\"?filter=Product\">/api/Product/Product</a>",
          "type": "string"
        },
        "relatedProducts": {
          "description": "List of related products, as retrievable from <a href=\"?filter=Product\">/api/Product/RelatedProduct</a>",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1_2.ProductRelation"
          }
        }
      }
    },
    "V1_2.ProductRelation": {
      "type": "object",
      "properties": {
        "productId": {
          "description": "Id of product, as retrievable from <a href=\"?filter=Product\">/api/Product/Product</a>",
          "type": "string"
        },
        "sequenceId": {
          "format": "int32",
          "description": "Id where product is to appear in the sequence",
          "type": "integer"
        },
        "ratio": {
          "format": "double",
          "description": "Ratio between base product and related product",
          "type": "number"
        }
      }
    },
    "ProductSynonym": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Synonym Id, as retrievable from <a href=\"?deepLinking=true#/Product/Synonym\">/api/Product/Synonym</a>",
          "type": "integer"
        },
        "synonym": {
          "description": "Synonyms for product description",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ProductGroupDetailed": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Product group ID, as retrievable from <a href=\"?deepLinking=true#/ProductGroup\">/api/ProductGroup</a>",
          "type": "string"
        },
        "description": {
          "description": "Product group name",
          "type": "string"
        },
        "shortDescription": {
          "description": "Short description of product group",
          "type": "string"
        },
        "fullDescription": {
          "description": "Full description of product group",
          "type": "string"
        },
        "metaKeywords": {
          "description": "Meta keywords for product group",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "metaDescription": {
          "description": "Meta description for product group",
          "type": "string"
        },
        "metaTitle": {
          "description": "Meta title for product group",
          "type": "string"
        },
        "products": {
          "description": "List of product IDs that are part of the product group",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "accessories": {
          "description": "List of accessories to product group",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Accessory"
          }
        },
        "media": {
          "description": "List of media (images, documents, etc.) for product group",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/MediaInformation"
          }
        },
        "categories": {
          "description": "List of categories for product group",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/CategoryBasic"
          }
        }
      }
    },
    "Accessory": {
      "type": "object",
      "properties": {
        "productGroupId": {
          "description": "ID of product group for accessory, as retrievable from as retrievable from <a href=\"?deepLinking=true#/ProductGroup/Get\">/api/ProductGroup</a>",
          "type": "string"
        },
        "productId": {
          "description": "Product ID of accessory, as retrievable from as retrievable from <a href=\"?deepLinking=true#/Product/Get\">/api/Product</a>",
          "type": "string"
        },
        "groupAttributeId": {
          "format": "int32",
          "description": "Attribute ID of the product group for accessory, as retrievable from <a href=\"?deepLinking=true#/Product/ProductAttributes\">/api/Product/ProductAttribute</a>",
          "type": "integer"
        },
        "groupAttributeDescription": {
          "description": "Description of the group of attributes",
          "type": "string"
        },
        "groupAttributeValue": {
          "format": "double",
          "description": "Value of group attributes",
          "type": "number"
        },
        "dependencyAttributeId": {
          "format": "int32",
          "description": "Dependent attribute ID for accessory, as retrievable from <a href=\"?deepLinking=true#/Product/ProductAttributes\">/api/Product/ProductAttribute</a>",
          "type": "integer"
        },
        "factorAttributeId": {
          "format": "int32",
          "description": "Factor attribute ID, as retrievable from <a href=\"?deepLinking=true#/Product/ProductAttributes\">/api/Product/ProductAttribute</a>",
          "type": "integer"
        },
        "factor": {
          "format": "double",
          "description": "Factor",
          "type": "number"
        },
        "optional": {
          "description": "Accessory is optional",
          "type": "boolean"
        }
      }
    },
    "CategoryBasic": {
      "type": "object",
      "properties": {
        "storeId": {
          "format": "int32",
          "description": "Store ID, as retrievable from <a href=\"?deepLinking=true#/Webshop/Store\">/api/Webshop/Store</a>",
          "type": "integer"
        },
        "level1": {
          "format": "int32",
          "description": "Level ID for height 1",
          "type": "integer"
        },
        "level2": {
          "format": "int32",
          "description": "Level ID for height 2",
          "type": "integer"
        },
        "level3": {
          "format": "int32",
          "description": "Level ID for height 3",
          "type": "integer"
        },
        "level4": {
          "format": "int32",
          "description": "Level ID for height 4",
          "type": "integer"
        },
        "level5": {
          "format": "int32",
          "description": "Level ID for height 5",
          "type": "integer"
        }
      }
    },
    "Ums.CustomerProductSelection": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "ID of product selection, as retrievable from <a href=\"?deepLinking=true#/ProductSelection/GetByCustomerV1_6\">/api/ProductSelection</a>",
          "type": "integer"
        },
        "name": {
          "description": "Name of product selection",
          "type": "string"
        },
        "default": {
          "description": "Is product selection the selected default?",
          "type": "boolean"
        },
        "sortByCategory": {
          "description": "Product selection to be sorted first by category",
          "type": "boolean"
        },
        "sortByProduct": {
          "description": "Product selection to be sorted first by product",
          "type": "boolean"
        },
        "budgetDetails": {
          "description": "Budget details.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Ums.BudgetDetail"
          }
        }
      }
    },
    "Ums.BudgetDetail": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Budget ID, as retrievable from <a href=\"?deepLinking=true#/Budget/GetBudgetsForCustomer\">/api/Budget</a>",
          "type": "integer"
        },
        "description": {
          "description": "Budget name",
          "type": "string"
        },
        "budgetLimits": {
          "description": "Budget limit amounts per category",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Ums.BudgetLineLimit"
          }
        }
      }
    },
    "Ums.BudgetLineLimit": {
      "type": "object",
      "properties": {
        "categoryId": {
          "format": "int32",
          "description": "Category ID for budget limit",
          "type": "integer"
        },
        "position": {
          "format": "int32",
          "description": "Position of category",
          "type": "integer"
        },
        "parentId": {
          "format": "int32",
          "description": "Id of parent category",
          "type": "integer"
        },
        "limit": {
          "format": "double",
          "description": "Limit amount",
          "type": "number"
        }
      }
    },
    "UmsModels.ProductSelectionCategoryBudgets": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "categories": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/UmsModels.Category"
          }
        }
      }
    },
    "UmsModels.Category": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "canEdit": {
          "type": "boolean"
        },
        "hasLimit": {
          "type": "boolean"
        },
        "limit": {
          "format": "double",
          "type": "number"
        },
        "used": {
          "format": "double",
          "type": "number"
        },
        "budgetType": {
          "description": "Type of budget (0 = Amount (in currency), 1 = Quantity)",
          "enum": [
            "Amount",
            "Quantity"
          ],
          "type": "string"
        },
        "subCategories": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/UmsModels.Category"
          }
        }
      }
    },
    "ProductSelectionSize": {
      "type": "object",
      "properties": {
        "productSelectionId": {
          "format": "int32",
          "type": "integer"
        },
        "productGroups": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductGroup"
          }
        }
      }
    },
    "ProductGroup": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Product group ID",
          "type": "string"
        },
        "description": {
          "description": "Product group name",
          "type": "string"
        },
        "groupedProducts": {
          "description": "Underlying products of group",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductSize"
          }
        }
      }
    },
    "ProductSize": {
      "type": "object",
      "properties": {
        "productId": {
          "description": "Product ID with selected size for user, as retrievable from <a href=\"?deepLinking=true&urls.primaryName=v1.4#/Product/ShopProductInformation\">/api/Product</a>",
          "type": "string"
        },
        "productGroupId": {
          "description": "Product Group (parent) ID for product",
          "type": "string"
        },
        "sizeAttributeId": {
          "format": "int32",
          "description": "Attribute Id of size, as registered in ERP Suite",
          "type": "integer"
        },
        "sizeId": {
          "format": "int32",
          "description": "Size id",
          "type": "integer"
        },
        "sizeDescription": {
          "description": "Size description",
          "type": "string"
        }
      }
    },
    "ProductTailoredSize": {
      "type": "object",
      "properties": {
        "productId": {
          "description": "Product ID with selected size for user, as retrievable from <a href=\"?deepLinking=true&urls.primaryName=v1.4#/Product/ShopProductInformation\">/api/Product</a>",
          "type": "string"
        },
        "productGroupId": {
          "description": "Product Group (parent) ID for product",
          "type": "string"
        },
        "sizeAttributeId": {
          "format": "int32",
          "description": "Attribute Id of size, as registered in ERP Suite",
          "type": "integer"
        },
        "sizeId": {
          "format": "int32",
          "description": "Size id",
          "type": "integer"
        },
        "sizeDescription": {
          "description": "Size description",
          "type": "string"
        },
        "required": {
          "description": "Is size required for webshop user?",
          "type": "boolean"
        }
      }
    },
    "V1_12.ProductSizeRequest": {
      "type": "object",
      "properties": {
        "storeId": {
          "format": "int32",
          "description": "Store ID where order is placed, as retrievable from <a href=\"?deepLinking=true&urls.primaryName=v1.5#/Webshop/Store\">/api/Webshop</a>",
          "type": "integer"
        },
        "customerId": {
          "format": "int32",
          "description": "Customer ID as retrievable from <a href=\"?deepLinking=true#/Customer/GetAllCustomers\">/api/Customer</a>",
          "type": "integer"
        },
        "employeeId": {
          "format": "int32",
          "description": "Employee ID, as retrievable from <a href=\"?deepLinking=true#/Employee/GetCustomerEmployees\">/api/Employee</a>",
          "type": "integer"
        },
        "productGroupId": {
          "description": "Product Group (parent) ID for product",
          "type": "string"
        },
        "sizeId": {
          "format": "int32",
          "description": "Size id, as retrievable from <a href=\"?deepLinking=true#/ProductSelection/ProductSelectionWithSize\">/api/ProductSelection</a>. Null value will reset size for customer.",
          "type": "integer"
        },
        "required": {
          "description": "Is size required for webshop user?",
          "type": "boolean"
        }
      }
    },
    "BasicProject": {
      "type": "object",
      "properties": {
        "customerId": {
          "format": "int32",
          "description": "Customer ID as retrievable from <a href=\"?deepLinking=true#Customer/GetAllCustomers\">/api/Customer</a>",
          "type": "integer"
        },
        "projectId": {
          "description": "Project ID as retrievable from <a href=\"?deepLinking=true#Project/GetAllProjects\">/api/Project</a>",
          "type": "string"
        },
        "name": {
          "description": "Project's name",
          "type": "string"
        },
        "secondName": {
          "description": "Project's second name",
          "type": "string"
        },
        "gln": {
          "description": "Global Location Number of project",
          "type": "string"
        },
        "startDate": {
          "format": "date-time",
          "description": "Start date of project",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "description": "End date of project",
          "type": "string"
        },
        "active": {
          "description": "Project active status",
          "type": "boolean"
        },
        "status": {
          "format": "int32",
          "description": "Project status Id",
          "type": "integer"
        },
        "address": {
          "$ref": "#/definitions/V1_9.Address",
          "description": "Address of project"
        },
        "contactInformation": {
          "$ref": "#/definitions/V1_2.ContactInformation",
          "description": "Contact information for project"
        }
      }
    },
    "ProjectRequest": {
      "required": [
        "name",
        "status"
      ],
      "type": "object",
      "properties": {
        "customerId": {
          "format": "int32",
          "description": "Customer ID, as retrievable from <a href=\"?deepLinking=true#/Customer/GetAllCustomers\">/api/Customer</a>",
          "type": "integer"
        },
        "projectId": {
          "description": "Project ID, as retrievable from <a href=\"?deepLinking=true#/Project/GetAllProjects\">/api/Project</a>",
          "maxLength": 25,
          "type": "string"
        },
        "name": {
          "description": "Project's name",
          "maxLength": 40,
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/V1_9.Address",
          "description": "Address of project"
        },
        "contactInformation": {
          "$ref": "#/definitions/ContactInformationRequest",
          "description": "Contact information for project"
        },
        "status": {
          "format": "int32",
          "description": "Project status Id",
          "maximum": 99,
          "minimum": 0,
          "type": "integer"
        },
        "startDate": {
          "format": "date-time",
          "description": "Start date of project",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "description": "End date of project",
          "type": "string"
        },
        "shippingAddress": {
          "$ref": "#/definitions/V1_9.ShippingAddress",
          "description": "Shipping address for project, as retrievable from <a href=\"?deepLinking=true#/Customer/ShippingAddresses\">/api/Customer/ShippingAddress</a>"
        }
      }
    },
    "ContactInformationRequest": {
      "required": [
        "phone",
        "email"
      ],
      "type": "object",
      "properties": {
        "phone": {
          "description": "Phone number",
          "type": "string"
        },
        "email": {
          "description": "Email address",
          "type": "string"
        }
      }
    },
    "V1_9.Project": {
      "type": "object",
      "properties": {
        "customerId": {
          "format": "int32",
          "description": "Customer ID, as retrievable from <a href=\"?deepLinking=true#/Customer/GetAllCustomers\">/api/Customer</a>",
          "type": "integer"
        },
        "projectId": {
          "description": "Project ID as retrievable from <a href=\"?deepLinking=true#/Project/GetAllProjects\">/api/Project</a>",
          "type": "string"
        },
        "name": {
          "description": "Project's name",
          "type": "string"
        },
        "secondName": {
          "description": "Project's second name",
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/V1_9.Address",
          "description": "Address of project"
        },
        "contactInformation": {
          "$ref": "#/definitions/ContactInformation",
          "description": "Contact information for project"
        },
        "gln": {
          "description": "Global Location Number of project",
          "type": "string"
        },
        "startDate": {
          "format": "date-time",
          "description": "Start date of project",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "description": "End date of project",
          "type": "string"
        },
        "active": {
          "description": "Project active status",
          "type": "boolean"
        },
        "status": {
          "format": "int32",
          "description": "Project status Id",
          "type": "integer"
        },
        "shippingAddresses": {
          "description": "Shipping addresses for project",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1_9.ShippingAddress"
          }
        }
      }
    },
    "ProjectStatus": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Project status ID, as retrievable from <a href=\"?deepLinking=true#/Project/Status\">/api/Project</a>",
          "type": "integer"
        },
        "description": {
          "description": "Description of shipping address status",
          "type": "string"
        }
      }
    },
    "UmsProject": {
      "required": [
        "id"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "Project ID, as retrievable from <a href=\"?deepLinking=true#/Project/Get\"></a>",
          "type": "string"
        },
        "name": {
          "description": "Project name",
          "type": "string"
        },
        "address": {
          "description": "List of shippingaddresses for project",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/UmsModels.ShippingAddress"
          }
        },
        "status": {
          "format": "int32",
          "description": "Project status Id, as retrievable from <a href=\"?deepLinking=true&urls.primaryName=v1.3#/Shipping/ShippingAddressStatus\">/api/Shipping</a>",
          "type": "integer"
        }
      }
    },
    "UmsModels.ShippingAddress": {
      "required": [
        "id"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Shipping Address Id, as retrievable from <a href=\"?deepLinking=true#/Shipping/Get\"></a>",
          "type": "integer"
        },
        "addressLine": {
          "description": "Shipping Address Street, incl. house number and addition",
          "type": "string"
        },
        "zipCode": {
          "description": "Shipping address Zip / Postal Code",
          "type": "string"
        },
        "city": {
          "description": "Shipping address City",
          "type": "string"
        },
        "country": {
          "$ref": "#/definitions/UmsModels.Country",
          "description": "Shipping address Country"
        },
        "isDefault": {
          "description": "Is default shipping address",
          "type": "boolean"
        }
      }
    },
    "PurchaseInvoiceOutstandingAmount": {
      "required": [
        "companyId",
        "invoiceId",
        "externalId"
      ],
      "type": "object",
      "properties": {
        "companyId": {
          "format": "int32",
          "maximum": 99,
          "minimum": 1,
          "type": "integer"
        },
        "invoiceId": {
          "format": "int32",
          "maximum": 9999999,
          "minimum": 1,
          "type": "integer"
        },
        "externalId": {
          "type": "string"
        },
        "outstandingAmount": {
          "$ref": "#/definitions/Amount"
        },
        "finalPaymentDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "PurchaseInvoice": {
      "required": [
        "companyId",
        "bookingDate",
        "invoiceDate",
        "supplierId",
        "supplierInvoiceId",
        "currencyId",
        "invoiceTotalAmount",
        "journalEntryDescription",
        "paymentTerm",
        "externalId",
        "purchaseInvoiceLines"
      ],
      "type": "object",
      "properties": {
        "companyId": {
          "format": "int32",
          "maximum": 99,
          "minimum": 1,
          "type": "integer"
        },
        "invoiceId": {
          "format": "int32",
          "type": "integer"
        },
        "bookingDate": {
          "format": "date-time",
          "type": "string"
        },
        "invoiceDate": {
          "format": "date-time",
          "type": "string"
        },
        "supplierId": {
          "format": "int32",
          "type": "integer"
        },
        "supplierInvoiceId": {
          "type": "string"
        },
        "currencyId": {
          "format": "int32",
          "type": "integer"
        },
        "invoiceTotalAmount": {
          "format": "double",
          "description": "Total invoice amount in foreign currency",
          "type": "number"
        },
        "journalEntryDescription": {
          "type": "string"
        },
        "paymentTerm": {
          "format": "int32",
          "type": "integer"
        },
        "paymentDiscount": {
          "$ref": "#/definitions/PaymentDiscount",
          "description": "Payment discount information (amount in foreign currency)"
        },
        "creditRestrictionSurcharge": {
          "$ref": "#/definitions/CreditRestrictionSurcharge",
          "description": "Credit restriction surcharge information (ammount in foreign currency"
        },
        "vatZero": {
          "$ref": "#/definitions/Vat",
          "description": "Vat zero values (amounts in foreign currency)"
        },
        "vatLow": {
          "$ref": "#/definitions/Vat",
          "description": "Vat low values (amounts in foreign currency)"
        },
        "vatHigh": {
          "$ref": "#/definitions/Vat",
          "description": "Vat high values (amounts in foreign currency)"
        },
        "externalId": {
          "type": "string"
        },
        "procurationBlock": {
          "type": "boolean"
        },
        "invoicePdf": {
          "description": "PDF Invoice as Base64 string",
          "type": "string"
        },
        "purchaseInvoiceLines": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PurchaseInvoiceLine"
          }
        },
        "internalInvoiceLines": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/MatchInternalInvoice"
          }
        }
      }
    },
    "PaymentDiscount": {
      "required": [
        "percentage",
        "term"
      ],
      "type": "object",
      "properties": {
        "percentage": {
          "format": "double",
          "description": "Paymentdiscount percentage",
          "type": "number"
        },
        "term": {
          "format": "int32",
          "description": "Paymentdiscount term in days",
          "type": "integer"
        },
        "amount": {
          "format": "double",
          "description": "Paymentdiscount amount",
          "type": "number"
        }
      }
    },
    "CreditRestrictionSurcharge": {
      "required": [
        "percentage",
        "term"
      ],
      "type": "object",
      "properties": {
        "percentage": {
          "format": "double",
          "description": "Credit restriction surcharge percentage",
          "type": "number"
        },
        "term": {
          "format": "int32",
          "description": "Credit restriction term in days",
          "type": "integer"
        },
        "amount": {
          "format": "double",
          "description": "Credit restriction surcharge amount",
          "type": "number"
        }
      }
    },
    "PurchaseInvoiceLine": {
      "required": [
        "ledgerAccountNumber",
        "journalEntryDescription",
        "lineAmount"
      ],
      "type": "object",
      "properties": {
        "ledgerAccountNumber": {
          "format": "int32",
          "type": "integer"
        },
        "journalEntryDescription": {
          "type": "string"
        },
        "lineAmount": {
          "format": "double",
          "description": "Line amount in foreign currency",
          "type": "number"
        },
        "taxCategoryId": {
          "format": "int32",
          "description": "VAT category Id, as retrievable from <a href=\"?deepLinking=true#/TaxCategories/Get\">/api/TaxCategories</a>",
          "type": "integer"
        },
        "costCentres": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/CostCentreValue"
          }
        }
      }
    },
    "CostCentreValue": {
      "required": [
        "costCentreLevelId",
        "costCentreId"
      ],
      "type": "object",
      "properties": {
        "costCentreLevelId": {
          "format": "int32",
          "type": "integer"
        },
        "costCentreId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "V1_2.Rayon": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Rayon Id, as retrievable from <a href=\"?deepLinking=true#/Rayon/Get\">/api/Customer</a>",
          "type": "integer"
        },
        "description": {
          "description": "Rayon description",
          "type": "string"
        },
        "languageId": {
          "format": "int32",
          "description": "Language Id, as retrievable from <a href=\"?deepLinking=true#/Language/Get\">/api/Language</a>",
          "type": "integer"
        }
      }
    },
    "Representative": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Employee ID for representative, as retrievable from <a href=\"?deepLinking=true&urls.primaryName=v1.2#/Employee/Get\">/api/Employee</a>",
          "type": "integer"
        },
        "name": {
          "description": "Name of representative",
          "type": "string"
        }
      }
    },
    "RepresentativeType": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "ID for representative type",
          "type": "integer"
        },
        "type": {
          "description": "Description of representative type",
          "type": "string"
        }
      }
    },
    "Return": {
      "type": "object",
      "properties": {
        "storeId": {
          "format": "int32",
          "type": "integer"
        },
        "companyId": {
          "format": "int32",
          "type": "integer"
        },
        "branchId": {
          "format": "int32",
          "type": "integer"
        },
        "customerId": {
          "format": "int32",
          "type": "integer"
        },
        "employeeId": {
          "format": "int32",
          "type": "integer"
        },
        "returnId": {
          "format": "int32",
          "type": "integer"
        },
        "pickupRequestNumber": {
          "type": "string"
        },
        "returnState": {
          "enum": [
            "Sale",
            "Purchase",
            "Check",
            "ToReceive",
            "ExtraCheck",
            "Canceled",
            "Processed",
            "Unknown"
          ],
          "type": "string"
        },
        "returnDate": {
          "format": "date-time",
          "type": "string"
        },
        "returnMethod": {
          "type": "string"
        },
        "productCount": {
          "format": "int32",
          "type": "integer"
        },
        "details": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReturnDetail"
          }
        }
      }
    },
    "ReturnDetail": {
      "type": "object",
      "properties": {
        "lineId": {
          "format": "int32",
          "type": "integer"
        },
        "lineSubId": {
          "format": "int32",
          "type": "integer"
        },
        "productId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "dateReceived": {
          "format": "date-time",
          "type": "string"
        },
        "quantityReturned": {
          "format": "double",
          "type": "number"
        },
        "unit": {
          "type": "string"
        },
        "returnReason": {
          "type": "string"
        }
      }
    },
    "ReturnDelivery": {
      "type": "object",
      "properties": {
        "companyId": {
          "format": "int32",
          "type": "integer"
        },
        "branchId": {
          "format": "int32",
          "type": "integer"
        },
        "returnMethodId": {
          "format": "int32",
          "type": "integer"
        },
        "returnDate": {
          "format": "date-time",
          "type": "string"
        },
        "numberOfPackages": {
          "format": "int32",
          "description": "Number of packages returned",
          "type": "integer"
        },
        "readyTime": {
          "description": "readyTime in the format (HHmm) (required for UPS pickup)",
          "type": "string"
        },
        "closeTime": {
          "description": "closeTime in the format (HHmm) (required for UPS pickup)",
          "type": "string"
        },
        "overweightIndicatior": {
          "description": "Overweight indicator: true if one package weights more then 32 Kgs (required for UPS pickup)",
          "type": "boolean"
        },
        "residentialIndicator": {
          "description": "Residential indicator: Indicates if the pickup address is commercial or residential (required for UPS pickup)",
          "type": "boolean"
        },
        "addressId": {
          "format": "int32",
          "description": "Address id as received from <a href=\"?filter=Customer\">/api/Customer/ShippingAddress</a>",
          "type": "integer"
        },
        "address": {
          "$ref": "#/definitions/AddressInformation",
          "description": "Custom address information if not addressId is passed."
        },
        "orders": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReturnDeliveryOrder"
          }
        }
      }
    },
    "AddressInformation": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "secondName": {
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/Address"
        },
        "contactInformation": {
          "$ref": "#/definitions/ContactInformation"
        }
      }
    },
    "ReturnDeliveryOrder": {
      "type": "object",
      "properties": {
        "orderId": {
          "format": "int32",
          "type": "integer"
        },
        "deliveryId": {
          "format": "int32",
          "type": "integer"
        },
        "lines": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReturnDeliveryOrderLine"
          }
        }
      }
    },
    "ReturnDeliveryOrderLine": {
      "type": "object",
      "properties": {
        "lineId": {
          "format": "int32",
          "type": "integer"
        },
        "productId": {
          "type": "string"
        },
        "quantityReturned": {
          "format": "double",
          "type": "number"
        },
        "returnReasonId": {
          "format": "int32",
          "type": "integer"
        },
        "customReturnReason": {
          "type": "string"
        }
      }
    },
    "ReturnMethod": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "erpId": {
          "format": "int32",
          "type": "integer"
        },
        "isDefault": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "deliveryCode": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ReturnedItem": {
      "type": "object",
      "properties": {
        "companyId": {
          "format": "int32",
          "type": "integer"
        },
        "branchId": {
          "format": "int32",
          "type": "integer"
        },
        "orderId": {
          "format": "int32",
          "type": "integer"
        },
        "deliveryId": {
          "format": "int32",
          "type": "integer"
        },
        "deliveryLineId": {
          "format": "int32",
          "type": "integer"
        },
        "returnId": {
          "format": "int32",
          "type": "integer"
        },
        "returnLineId": {
          "format": "int32",
          "type": "integer"
        },
        "returnLineChildId": {
          "format": "int32",
          "type": "integer"
        },
        "productId": {
          "type": "string"
        },
        "quantityReturned": {
          "format": "double",
          "type": "number"
        },
        "companyOfReturnId": {
          "format": "int32",
          "type": "integer"
        },
        "branchOfReturnId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ReturnReason": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "RevenueItem": {
      "description": "Revenue item",
      "type": "object",
      "properties": {
        "companyId": {
          "format": "int32",
          "type": "integer"
        },
        "branchId": {
          "format": "int32",
          "type": "integer"
        },
        "invoiceDate": {
          "format": "date-time",
          "type": "string"
        },
        "customerId": {
          "format": "int32",
          "type": "integer"
        },
        "productId": {
          "type": "string"
        },
        "goodsAmount": {
          "format": "double",
          "type": "number"
        },
        "goodsQuantity": {
          "format": "double",
          "type": "number"
        },
        "purchaseAmount": {
          "format": "double",
          "type": "number"
        },
        "salesmanId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Revenue": {
      "type": "object",
      "properties": {
        "invoiceDate": {
          "format": "date-time",
          "type": "string"
        },
        "revenueAmount": {
          "format": "double",
          "type": "number"
        },
        "purchaseAmount": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "CustomerRevenue": {
      "type": "object",
      "properties": {
        "invoiceDate": {
          "format": "date-time",
          "type": "string"
        },
        "revenueAmount": {
          "format": "double",
          "type": "number"
        },
        "purchaseAmount": {
          "format": "double",
          "type": "number"
        },
        "articleGroupId": {
          "format": "int32",
          "description": "Id of article group, as retrievable from <a href=\"?deepLinking=true#/Product/ArticleGroup\">/api/Product/ArticleGroup</a>",
          "type": "integer"
        },
        "articleSubGroupId": {
          "format": "int32",
          "description": "ID of article sub group, as retrievable from <a href=\"?deepLinking=true#Product/ArticleSubGroup\">/api/Product/ArticleSubGroup</a>",
          "type": "integer"
        },
        "projectId": {
          "description": "Project ID, as retrievable from <a href=\"?deepLinking=true#/Project/GetAllProjects\">/api/Project</a>",
          "type": "string"
        }
      }
    },
    "V1_14.SalesAccount": {
      "type": "object",
      "properties": {
        "accountType": {
          "description": "Account type in ERP: C = Customer, A = ShippingAddress, E=Employee",
          "maxLength": 1,
          "type": "string"
        },
        "customer": {
          "$ref": "#/definitions/V1_14.Customer",
          "description": "Customer account"
        },
        "employee": {
          "$ref": "#/definitions/V1_11.CustomerEmployee",
          "description": "Employee account"
        },
        "shippingAddress": {
          "$ref": "#/definitions/V1_9.ShippingAddress",
          "description": "Shipping address account"
        }
      }
    },
    "V1_2.SalesAccountResult": {
      "type": "object",
      "properties": {
        "customerId": {
          "format": "int32",
          "description": "Returned Customer ID, as retrievable from <a href=\"?deepLinking=true#/Customer/Get\">/api/Customer</a>",
          "type": "integer"
        },
        "employeeId": {
          "format": "int32",
          "description": "Returned Employee ID, as retrievable from <a href=\"?deepLinking=true#/Employee/Get\">/api/Employee</a>",
          "type": "integer"
        },
        "shippingAddressId": {
          "format": "int32",
          "description": "Returned Shipping address ID, as retrievable from <a href=\"?deepLinking=true#/Shipping/Get\">/api/Shipping</a>",
          "type": "integer"
        }
      }
    },
    "V1_2.Sector": {
      "type": "object",
      "properties": {
        "companyId": {
          "format": "int32",
          "description": "Company Id, as retrievable from <a href=\"?deepLinking=true#/Company/Get\">/api/Company</a>",
          "type": "integer"
        },
        "id": {
          "format": "int32",
          "description": "Sector Id, as retrievable from <a href=\"?deepLinking=true#/Sector/Get\">/api/Sector</a>",
          "type": "integer"
        },
        "description": {
          "description": "Name of sector",
          "type": "string"
        }
      }
    },
    "ShippingCostRequest": {
      "type": "object",
      "properties": {
        "companyId": {
          "format": "int32",
          "description": "CompanyId as received from <a href=\"?filter=Company\">/api/Company</a>",
          "type": "integer"
        },
        "branchId": {
          "format": "int32",
          "description": "BranchId as received from <a href=\"?filter=Branch\">/api/Branch</a>",
          "type": "integer"
        },
        "customerId": {
          "format": "int32",
          "description": "CustomerId as received from <a href=\"?filter=Customer\">/api/Customer</a>",
          "type": "integer"
        },
        "shippingMethodId": {
          "format": "int32",
          "description": "ShippingMethodId as received from <a href=\"?filter=Shipping\">/api/Shipping/Methods</a>\r\nOptional: if not specified, customers default shippingmethod will be used.",
          "type": "integer"
        },
        "deliveryDate": {
          "format": "date-time",
          "description": "Specify the requested dilivery date",
          "type": "string"
        },
        "products": {
          "description": "Products and quantities to calculate shipping costs for",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductQuantity"
          }
        }
      }
    },
    "ProductQuantity": {
      "type": "object",
      "properties": {
        "productId": {
          "description": "productId as received from <a href=\"?filter=Product\">/api/Product/Product</a>",
          "type": "string"
        },
        "quantity": {
          "format": "double",
          "description": "Specify quantity for this product.",
          "type": "number"
        }
      }
    },
    "ShippingCostResult": {
      "type": "object",
      "properties": {
        "shippingCosts": {
          "format": "double",
          "description": "Amount of shipping costs to be applied",
          "type": "number"
        },
        "costsDescription": {
          "type": "string"
        },
        "goodsAmount": {
          "format": "double",
          "description": "Total value of the supplied products",
          "type": "number"
        },
        "freeAmount": {
          "format": "double",
          "description": "Amount above which no shipping costs will be applied",
          "type": "number"
        }
      }
    },
    "StockChange": {
      "required": [
        "warehouseId",
        "product",
        "warehouseLocation",
        "changeQuantity",
        "stockChangeTypeId"
      ],
      "type": "object",
      "properties": {
        "warehouseId": {
          "format": "int32",
          "type": "integer"
        },
        "product": {
          "$ref": "#/definitions/ProductIdentification",
          "description": "Identification to find the corresponding product, one or multiple ids can be supplied"
        },
        "warehouseLocation": {
          "type": "string"
        },
        "changeQuantity": {
          "format": "double",
          "description": "Quantity to be changed. (can be positive or negative)",
          "type": "number"
        },
        "stockChangeTypeId": {
          "format": "int32",
          "description": "Indicates the reason for this stock change",
          "type": "integer"
        }
      }
    },
    "ProductIdentification": {
      "description": "Identification to find the corresponding product, one or multiple ids can be supplied",
      "type": "object",
      "properties": {
        "productId": {
          "type": "string"
        },
        "ean": {
          "type": "string"
        },
        "supplierEan": {
          "description": "Optional set supplier ean, can be used in combination with SupplierProductId",
          "type": "string"
        },
        "supplierProductId": {
          "type": "string"
        }
      }
    },
    "StockChangeType": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "V1_14.Supplier": {
      "type": "object",
      "properties": {
        "supplierId": {
          "format": "int32",
          "type": "integer"
        },
        "searchKey": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "secondName": {
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/V1_9.Address"
        },
        "currency": {
          "$ref": "#/definitions/Currency"
        },
        "vatId": {
          "type": "string"
        },
        "paymentCondition": {
          "$ref": "#/definitions/V1_2.PaymentCondition"
        },
        "bic": {
          "type": "string"
        },
        "iban": {
          "type": "string"
        },
        "paymentAfterInternalInvoice": {
          "type": "boolean"
        },
        "taxCategoryId": {
          "format": "int32",
          "description": "VAT category Id, as retrievable from <a href=\"?deepLinking=true#/TaxCategories/Get\">/api/TaxCategories</a>",
          "type": "integer"
        },
        "contactPerson": {
          "type": "string"
        },
        "contactInformation": {
          "$ref": "#/definitions/V1_2.ContactInformation"
        },
        "purchaser": {
          "$ref": "#/definitions/EmployeeBasic"
        },
        "gln": {
          "type": "string"
        },
        "chamberofCommerceId": {
          "type": "string"
        }
      }
    },
    "EmployeeBasic": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "purchaser": {
          "type": "boolean"
        }
      }
    },
    "TaxCategory": {
      "type": "object",
      "properties": {
        "taxCategoryId": {
          "format": "int32",
          "description": "Tax category Id, as retrievable from <a href=\"?deepLinking=true#/TaxCategories/Get\">/api/TaxCategories</a>",
          "type": "integer"
        },
        "description": {
          "description": "Tax category description",
          "type": "string"
        },
        "percentage": {
          "format": "double",
          "description": "Tax category percentage",
          "type": "number"
        }
      }
    },
    "UmsModels.Authorizer": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "username": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "displayOrder": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "BudgetAuthorizationRequest": {
      "type": "object",
      "properties": {
        "storeId": {
          "format": "int32",
          "description": "Get store ID from <a href=\"?deepLinking=true#/Webshop/Store\">/api/Webshop</a>",
          "type": "integer"
        },
        "customerId": {
          "format": "int32",
          "description": "Get customer ID from <a href=\"?deepLinking=true#/Customer/GetAllCustomers\">/api/Customer</a>",
          "type": "integer"
        },
        "employeeId": {
          "format": "int32",
          "description": "Get employee ID from <a href=\"?deepLinking=true#/Employee/GetCustomerEmployeesV111\">/api/Employee</a>",
          "type": "integer"
        },
        "products": {
          "description": "Products including quantity and (optionally) price",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1_15.ProductQuantity"
          }
        }
      }
    },
    "BudgetAuthorizationResult": {
      "type": "object",
      "properties": {
        "budgetId": {
          "format": "int32",
          "description": "Id of budget, as retrievable from <a href=\"?deepLinking=true#/Budget/GetBudgetsForCustomer\">/api/Budget</a>",
          "type": "integer"
        },
        "withinBudgetLimit": {
          "description": "Order is within limits of budget",
          "type": "boolean"
        },
        "authorizationRequired": {
          "description": "Order requires authorization",
          "type": "boolean"
        }
      }
    },
    "UMS.Role": {
      "type": "object",
      "properties": {
        "customerId": {
          "format": "int32",
          "type": "integer"
        },
        "storeId": {
          "format": "int32",
          "type": "integer"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "userMangerRights": {
          "$ref": "#/definitions/UMS.userMangerRights"
        },
        "employeeRights": {
          "$ref": "#/definitions/UMS.employeeRights"
        }
      }
    },
    "UMS.userMangerRights": {
      "type": "object",
      "properties": {
        "email": {
          "$ref": "#/definitions/UMS.ModifyRight"
        },
        "nameAndGender": {
          "$ref": "#/definitions/UMS.ModifyRight"
        },
        "address": {
          "$ref": "#/definitions/UMS.ModifyRight"
        },
        "phone": {
          "$ref": "#/definitions/UMS.ModifyRight"
        },
        "project": {
          "$ref": "#/definitions/UMS.ModifyRight"
        },
        "shippingAddress": {
          "$ref": "#/definitions/UMS.ModifyRight"
        },
        "expiredEmployee": {
          "$ref": "#/definitions/UMS.ModifyRight"
        },
        "budget": {
          "$ref": "#/definitions/UMS.ModifyAddRight"
        },
        "productRange": {
          "$ref": "#/definitions/UMS.ModifyAddRight"
        },
        "authorizer": {
          "$ref": "#/definitions/UMS.ModifyAddRight"
        },
        "employee": {
          "$ref": "#/definitions/UMS.AddRight"
        }
      }
    },
    "UMS.employeeRights": {
      "type": "object",
      "properties": {
        "canOrder": {
          "$ref": "#/definitions/UMS.boolRight"
        },
        "showWishlist": {
          "$ref": "#/definitions/UMS.boolRight"
        },
        "customerWishlist": {
          "$ref": "#/definitions/UMS.boolRight"
        },
        "showWarehouse": {
          "$ref": "#/definitions/UMS.boolRight"
        },
        "customerWarehouse": {
          "$ref": "#/definitions/UMS.boolRight"
        },
        "canDownload": {
          "$ref": "#/definitions/UMS.boolRight"
        },
        "showTender": {
          "$ref": "#/definitions/UMS.boolRight"
        },
        "showOrder": {
          "$ref": "#/definitions/UMS.boolRight"
        },
        "showDelivery": {
          "$ref": "#/definitions/UMS.boolRight"
        },
        "showInvoice": {
          "$ref": "#/definitions/UMS.boolRight"
        },
        "showDiscountProducts": {
          "$ref": "#/definitions/UMS.boolRight"
        },
        "canChangeShippingAddress": {
          "$ref": "#/definitions/UMS.boolRight"
        },
        "canChangePassword": {
          "$ref": "#/definitions/UMS.boolRight"
        },
        "onlyShowOwnData": {
          "$ref": "#/definitions/UMS.boolRight"
        },
        "allowPartialPayments": {
          "$ref": "#/definitions/UMS.boolRight"
        },
        "canRequestTender": {
          "$ref": "#/definitions/UMS.boolRight"
        },
        "priceMode": {
          "$ref": "#/definitions/UMS.stringRight"
        },
        "onlyShowGrossPrice": {
          "$ref": "#/definitions/UMS.boolRight"
        },
        "customerOrdernumberRequired": {
          "$ref": "#/definitions/UMS.boolRight"
        },
        "defaultCustomerOrdernumber": {
          "$ref": "#/definitions/UMS.stringRight"
        },
        "customerReferenceRequired": {
          "$ref": "#/definitions/UMS.boolRight"
        },
        "defaultCustomerReference": {
          "$ref": "#/definitions/UMS.stringRight"
        },
        "showErpCustomerReferences": {
          "$ref": "#/definitions/UMS.boolRight"
        },
        "orderAttachmentRequired": {
          "$ref": "#/definitions/UMS.boolRight"
        },
        "showSearchCategory": {
          "$ref": "#/definitions/UMS.boolRight"
        },
        "useEmployeeAddressAsShippingAddress": {
          "$ref": "#/definitions/UMS.boolRight"
        },
        "manageEmployees": {
          "$ref": "#/definitions/UMS.boolRight"
        }
      }
    },
    "UMS.ModifyRight": {
      "type": "object",
      "properties": {
        "canModify": {
          "type": "boolean"
        }
      }
    },
    "UMS.ModifyAddRight": {
      "type": "object",
      "properties": {
        "canModify": {
          "type": "boolean"
        },
        "canAdd": {
          "type": "boolean"
        }
      }
    },
    "UMS.AddRight": {
      "type": "object",
      "properties": {
        "canAdd": {
          "type": "boolean"
        }
      }
    },
    "UMS.boolRight": {
      "type": "object",
      "properties": {
        "defaultValue": {
          "type": "boolean"
        },
        "locked": {
          "type": "boolean"
        }
      }
    },
    "UMS.stringRight": {
      "type": "object",
      "properties": {
        "defaultValue": {
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        }
      }
    },
    "SalesUnit": {
      "type": "object",
      "properties": {
        "unitId": {
          "format": "int32",
          "description": "Unit Id, as retrievable from",
          "type": "integer"
        },
        "description": {
          "description": "Unit description",
          "type": "string"
        },
        "quantity": {
          "format": "int32",
          "description": "Quantity per Unit",
          "type": "integer"
        },
        "iso": {
          "description": "ISO description for unit",
          "type": "string"
        }
      }
    },
    "V1_15.WebshopOrder": {
      "type": "object",
      "properties": {
        "products": {
          "description": "Products in order",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebshopProduct"
          }
        },
        "specials": {
          "description": "One-off products / items in order",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Special"
          }
        },
        "compositions": {
          "description": "Compositions in order that differ from basic composition",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Composition"
          }
        },
        "textLines": {
          "description": "Additional text lines in order",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "deliveryInformation": {
          "$ref": "#/definitions/V1_15.AddressInformation",
          "description": "Address information for delivery address"
        },
        "billingInformation": {
          "$ref": "#/definitions/V1_15.BillingAddressInformation",
          "description": "Address information for billing address"
        },
        "shippingMethod": {
          "$ref": "#/definitions/PayShipMethod",
          "description": "Shipping method, as retrievable from <a href=\"?deepLinking=true#/Shipping/Methods/Get\">/api/Shipping</a>"
        },
        "paymentMethod": {
          "$ref": "#/definitions/PayShipMethod",
          "description": "Payment method"
        },
        "storeId": {
          "format": "int32",
          "description": "Store ID, as retrievable from <a href=\"?deepLinking=true#/Webshop/Store\">/api/Webshop/Store</a>",
          "type": "integer"
        },
        "companyId": {
          "format": "int32",
          "description": "Company ID, as retrievable from <a href=\"?deepLinking=true#/Company/Get\">/api/Company</a>",
          "type": "integer"
        },
        "branchId": {
          "format": "int32",
          "description": "Branch ID, as retrievable from <a href=\"?deepLinking=true#/Branch/Get\">/api/Branch</a>",
          "type": "integer"
        },
        "customerId": {
          "format": "int32",
          "description": "Customer ID, as retrievable from <a href=\"?deepLinking=true#/Customer/Get\">/api/Customer</a>",
          "type": "integer"
        },
        "employeeId": {
          "format": "int32",
          "description": "ID of employee who placed order, as retrievable from <a href=\"?deepLinking=true#/Employee/GetCustomerEmployeeById\">/api/Employee</a>",
          "type": "integer"
        },
        "deliveryAddressId": {
          "format": "int32",
          "description": "Delivery address ID, as retrievable from <a href=\"?deepLinking=true#/Shipping/Get\">/api/Shipping</a>",
          "type": "integer"
        },
        "login": {
          "description": "Login for user that placed the order",
          "type": "string"
        },
        "customerOrderId": {
          "description": "Order identification as entered by customer",
          "type": "string"
        },
        "webshopOrderId": {
          "description": "Order id as registered in webshop",
          "type": "string"
        },
        "projectId": {
          "description": "Project ID, as retrievable from <a href=\"?deepLinking=true#/Project/Get\">/api/Project</a>",
          "type": "string"
        },
        "deliveryType": {
          "description": "Delivery type",
          "enum": [
            "Pickup",
            "Deliver"
          ],
          "type": "string"
        },
        "deliveryDate": {
          "format": "date-time",
          "description": "Delivery date",
          "type": "string"
        },
        "note": {
          "description": "Additional comment",
          "type": "string"
        },
        "orderedBy": {
          "description": "Reference for order, i.e. referred by",
          "type": "string"
        },
        "contactPersonId": {
          "format": "int32",
          "description": "Contactperson for order. Will be used by ERP to send ERP order confirmation. ID retrievable from <a href=\"?deepLinking=true#/Employee/GetCustomerEmployeeById\">/api/Employee</a>",
          "type": "integer"
        },
        "paid": {
          "description": "Has order been paid",
          "type": "boolean"
        },
        "paymentCondition": {
          "format": "int32",
          "description": "Payment condition",
          "type": "integer"
        },
        "discountAmount": {
          "format": "double",
          "description": "Discount received (amount)",
          "type": "number"
        },
        "vatId": {
          "description": "VAT identification",
          "type": "string"
        },
        "receptionMethod": {
          "description": "Origin of order",
          "type": "string"
        },
        "deliveryInFull": {
          "description": "Deliver order in full",
          "type": "boolean"
        }
      }
    },
    "WebshopProduct": {
      "description": "Product details for webshop ordered product",
      "type": "object",
      "properties": {
        "productId": {
          "description": "Product ID, as retrievable from <a href=\"?deepLinking=true#/Product/Get\">/api/Product</a>",
          "type": "string"
        },
        "quantity": {
          "format": "double",
          "description": "Order quantity of product",
          "type": "number"
        },
        "orderLineId": {
          "format": "int32",
          "description": "Order line",
          "type": "integer"
        },
        "price": {
          "format": "double",
          "description": "Product price",
          "type": "number"
        },
        "length": {
          "format": "double",
          "description": "Product length",
          "type": "number"
        },
        "textLines": {
          "description": "Additional textlines attached to order",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Special": {
      "description": "One-off product / item",
      "type": "object",
      "properties": {
        "description1": {
          "description": "Item description, first line",
          "type": "string"
        },
        "description2": {
          "description": "Item description, second line",
          "type": "string"
        },
        "description3": {
          "description": "Item description, third line",
          "type": "string"
        },
        "description4": {
          "description": "Item description, fourth line",
          "type": "string"
        },
        "description5": {
          "description": "Item description, fifth line",
          "type": "string"
        },
        "quantity": {
          "format": "double",
          "description": "Order quantity",
          "type": "number"
        }
      }
    },
    "V1_15.AddressInformation": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "secondName": {
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/V1_9.Address"
        },
        "contactInformation": {
          "$ref": "#/definitions/V1_15.ContactInformation"
        }
      }
    },
    "V1_15.BillingAddressInformation": {
      "type": "object",
      "properties": {
        "postOfficeBox": {
          "$ref": "#/definitions/PostOfficeBox"
        },
        "name": {
          "type": "string"
        },
        "secondName": {
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/V1_9.Address"
        },
        "contactInformation": {
          "$ref": "#/definitions/V1_15.ContactInformation"
        }
      }
    },
    "PayShipMethod": {
      "description": "Payment or shipment method",
      "type": "object",
      "properties": {
        "method": {
          "format": "int32",
          "description": "Method Id, for shipping as retrievable from <a href=\"?deepLinking=true#/Shipping/Methods/Get\">/api/Shipping</a>",
          "type": "integer"
        },
        "cost": {
          "format": "double",
          "description": "Amount charged",
          "type": "number"
        },
        "description": {
          "description": "Description of payment / shipping method",
          "type": "string"
        }
      }
    },
    "AuthorizationRequest": {
      "required": [
        "webOrderId",
        "storeId",
        "customerId",
        "employeeId"
      ],
      "type": "object",
      "properties": {
        "webOrderId": {
          "description": "Web order ID, as created by webshop",
          "type": "string"
        },
        "storeId": {
          "format": "int32",
          "description": "Store ID, as retrievable from <a href=\"?deepLinking=true&urls.primaryName=v1.5#/Webshop/Store\">/api/Webshop</a>",
          "type": "integer"
        },
        "customerId": {
          "format": "int32",
          "description": "Customer ID, as retrievable from <a href=\"?deepLinking=true#/Customer/GetAllCustomers\">/api/Customer</a>",
          "type": "integer"
        },
        "employeeId": {
          "format": "int32",
          "description": "Employee ID, as retrievable from <a href=\"?deepLinking=true&urls.primaryName=v1.4#/Employee/GetCustomerEmployees\">/api/Employee</a>",
          "type": "integer"
        },
        "authorizingCustomerId": {
          "format": "int32",
          "description": "Customer ID for authorization of order, as retrievable from <a href=\"?deepLinking=true#/Customer/GetAllCustomers\">/api/Customer</a>",
          "type": "integer"
        },
        "authorizingEmployeeId": {
          "format": "int32",
          "description": "Employee ID of employee who will authorize the order, as retrievable from <a href=\"?deepLinking=true&urls.primaryName=v1.4#/Employee/GetCustomerEmployees\">/api/Employee</a>",
          "type": "integer"
        },
        "productIds": {
          "description": "Product IDs in web order, as retrievable from <a href=\"?deepLinking=true#/Product/ShopProductInformation\">/api/Product</a>",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "quantities": {
          "description": "Quantities in web order",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "format": "double",
            "type": "number"
          }
        }
      }
    },
    "AuthorizationResult": {
      "type": "object",
      "properties": {
        "budgetType": {
          "description": "Type of budget (0 = Amount (in currency), 1 = Quantity)",
          "enum": [
            "Amount",
            "Quantity"
          ],
          "type": "string"
        },
        "budgetChange": {
          "format": "double",
          "description": "Change in budget (depending on BudgetType, can be in amount or quantity)",
          "type": "number"
        }
      }
    },
    "Store": {
      "type": "object",
      "properties": {
        "storeId": {
          "format": "int32",
          "description": "Store Id",
          "type": "integer"
        },
        "description": {
          "description": "Store description",
          "type": "string"
        },
        "type": {
          "description": "Store Type (W = Webshop, O = Other)",
          "type": "string"
        },
        "customerOrdering": {
          "format": "int32",
          "description": "Customer Id for orders from store",
          "type": "integer"
        },
        "customerPricing": {
          "format": "int32",
          "description": "Customer for prices in store",
          "type": "integer"
        }
      }
    },
    "ReceptionMethod": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Reception method ID, as retrievable from <a href=\"?deepLinking=true#/Webshop/ReceptionMethod\">/api/Webshop</a>",
          "type": "integer"
        },
        "description": {
          "description": "Description of reception method",
          "type": "string"
        }
      }
    },
    "V1_2.OciCustomField": {
      "type": "object",
      "properties": {
        "productId": {
          "description": "Product ID for which oci fields are applicable, as retrievable from <a href=\"?filter=Product\">/api/Product/Product</a>",
          "type": "string"
        },
        "fieldName": {
          "description": "OCI Field Name",
          "type": "string"
        },
        "result": {
          "description": "Result that is generated for filling OCI custom field",
          "type": "string"
        }
      }
    },
    "Category": {
      "type": "object",
      "properties": {
        "storeId": {
          "format": "int32",
          "description": "Store ID, as retrievable from <a href=\"?deepLinking=true#/Webshop/Store\">/api/Webshop/Store</a>",
          "type": "integer"
        },
        "languageId": {
          "format": "int32",
          "description": "Language ID, as retrievable from <a href=\"?deepLinking=true#/Language/Get\">/api/Language</a>",
          "type": "integer"
        },
        "categoryId": {
          "format": "int32",
          "description": "Category ID, as retrievable from <a href=\"?deepLinking=true#/Webshop/Category/Get\">/api/Webshop/Category</a>",
          "type": "integer"
        },
        "position": {
          "format": "int32",
          "description": "Position of category in category order",
          "type": "integer"
        },
        "parentId": {
          "format": "int32",
          "description": "Id of parent category, as retrievable from <a href=\"?deepLinking=true#/Webshop/Category/Get\">/api/Webshop/Category</a>",
          "type": "integer"
        },
        "description": {
          "description": "Name of category",
          "type": "string"
        },
        "longDescription": {
          "description": "Comprehensive description of category",
          "type": "string"
        },
        "metaKeywords": {
          "description": "Metakeywords for category",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "metaDescription": {
          "description": "Meta description for category",
          "type": "string"
        },
        "showOnHomepage": {
          "description": "Is category shown on homepage?",
          "type": "boolean"
        },
        "children": {
          "description": "List of category's children, if applicable",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "attributeSetId": {
          "format": "int32",
          "description": "Id of attribute set for category",
          "type": "integer"
        },
        "dataHash": {
          "description": "Datahash of category",
          "type": "string"
        },
        "productIds": {
          "description": "Product IDs that are indexed in this level",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "source": {
          "description": "Source of media",
          "type": "string"
        }
      }
    },
    "V1_3.CategoryRequest": {
      "description": "Parameters for requesting categories",
      "type": "object",
      "properties": {
        "storeId": {
          "format": "int32",
          "description": "Store ID where category is showed, as retrievable from <a href=\"?filter=Webshop\">/api/Webshop</a>",
          "type": "integer"
        },
        "languageId": {
          "format": "int32",
          "description": "Language Id, as retrievable from <a href=\"?deepLinking=true#/Language/Get\">/api/Language</a>",
          "type": "integer"
        },
        "hashData": {
          "description": "Hash data for retrieval of categories",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShopHash"
          }
        }
      }
    },
    "CategorySimple": {
      "type": "object",
      "properties": {
        "level1": {
          "format": "int32",
          "description": "Level ID for height 1",
          "type": "integer"
        },
        "level2": {
          "format": "int32",
          "description": "Level ID for height 2",
          "type": "integer"
        },
        "level3": {
          "format": "int32",
          "description": "Level ID for height 3",
          "type": "integer"
        },
        "level4": {
          "format": "int32",
          "description": "Level ID for height 4",
          "type": "integer"
        },
        "level5": {
          "format": "int32",
          "description": "Level ID for height 5",
          "type": "integer"
        },
        "name": {
          "description": "Name of category",
          "type": "string"
        },
        "products": {
          "description": "List of product Ids that are included in this level",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CategoryRole": {
      "type": "object",
      "properties": {
        "roleId": {
          "format": "int32",
          "description": "Get category role ID from <a href=\"?deepLinking=true#/Webshop/CategoryRoles\">/api/Webshop</a>",
          "type": "integer"
        },
        "roleName": {
          "description": "Name of category role",
          "type": "string"
        },
        "categories": {
          "description": "Underlying categories for role",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Level"
          }
        }
      }
    },
    "Specification": {
      "type": "object",
      "properties": {
        "storeId": {
          "format": "int32",
          "description": "Store ID, as retrievable from <a href=\"?deepLinking=true#/Webshop/Store\">/api/Webshop</a>",
          "type": "integer"
        },
        "languageId": {
          "format": "int32",
          "description": "Language ID, as retrievable from <a href=\"?deepLinking=true#/Language/GetAllLanguages\">/api/Language</a>",
          "type": "integer"
        },
        "attributeId": {
          "format": "int32",
          "description": "Attribute ID, as retrievable from <a href=\"?deepLinking=true#/Product/ProductAttributesForShopProducts\">/api/Webshop</a>",
          "type": "integer"
        },
        "allowFiltering": {
          "description": "Filtering is allowed for specfication",
          "type": "boolean"
        }
      }
    },
    "CustomerSpecific": {
      "type": "object",
      "properties": {
        "customerId": {
          "format": "int32",
          "description": "Customer id",
          "type": "integer"
        },
        "defaultCompanyId": {
          "format": "int32",
          "description": "Default company",
          "type": "integer"
        },
        "defaultBranchId": {
          "format": "int32",
          "description": "Default branch",
          "type": "integer"
        },
        "text": {
          "description": "Text",
          "type": "string"
        }
      }
    },
    "V1_15.WebUser": {
      "required": [
        "userSettings",
        "authorizationSettings",
        "employee",
        "email",
        "username"
      ],
      "type": "object",
      "properties": {
        "group": {
          "$ref": "#/definitions/UmsModels.UmsGroup",
          "description": "UMS group where user is part of, as retrievable from <a href=\"?deepLinking=true#/WebUser/GroupsByCustomerId\">/api/Webuser</a>"
        },
        "subGroup": {
          "$ref": "#/definitions/UmsModels.UmsGroup",
          "description": "UMS sub group where user is part of, as retrievable from <a href=\"?deepLinking=true#/WebUser/SubGroups\">/api/Webuser</a>"
        },
        "userSettings": {
          "$ref": "#/definitions/UmsModels.UserSettings",
          "description": "Webshop user settings"
        },
        "budgetHistory": {
          "description": "Webshop user budget history",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/UmsModels.BudgetUsage"
          }
        },
        "authorizationSettings": {
          "$ref": "#/definitions/UmsModels.AuthorizationSettings",
          "description": "Authorization settings"
        },
        "employee": {
          "$ref": "#/definitions/UmsModels.V1_15.Employee",
          "description": "Basic employee data"
        },
        "projects": {
          "description": "Optional list of projects where webshop user's orders can be recorded",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1_9.Project"
          }
        },
        "shippingAddress": {
          "$ref": "#/definitions/V1_9.ShippingAddress",
          "description": "Optional shipping address where webshop user's orders can be send to"
        },
        "productSelections": {
          "description": "List of product selections for webshop user, no product selection = full webshop product range",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/UmsModels.ProductSelection"
          }
        },
        "id": {
          "format": "int32",
          "description": "Employee ID, as retrievable from <a href=\"?deepLinking=true#/Employee/GetCustomerEmployees\">/api/Employee</a>",
          "type": "integer"
        },
        "email": {
          "description": "E-mail address",
          "maxLength": 60,
          "type": "string"
        },
        "ccEmails": {
          "description": "CC emails for webshop user, separated by semicolon",
          "maxLength": 60,
          "type": "string"
        },
        "username": {
          "description": "User name",
          "maxLength": 60,
          "type": "string"
        },
        "currencyId": {
          "format": "int32",
          "description": "Id of currency, as retrievable from <a href=\"?deepLinking=true#/Currency/CurrencyCodes\">/api/Currency</a>",
          "type": "integer"
        },
        "defaultCompanyId": {
          "format": "int32",
          "description": "ID of default company for webuser, as retrievable from <a href=\"?deepLinking=true#/Company/GetAllCompanies\">/api/Company</a>",
          "type": "integer"
        },
        "defaultBranchId": {
          "format": "int32",
          "description": "ID of default branch for webuser, as retrievable from <a href=\"?deepLinking=true#/Branch/GetBranches\">/api/Branch</a>",
          "type": "integer"
        },
        "isActive": {
          "description": "Webuser login is activated",
          "type": "boolean"
        }
      }
    },
    "UmsModels.UmsGroup": {
      "description": "UMS (sub) group where user is part of, as retrievable from <a href=\"?deepLinking=true#/WebUser/GroupsByCustomerId\">/api/Webuser</a>",
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Group identification",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "subGroups": {
          "description": "Optional subgroups if any for the current group",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/UmsModels.UmsGroup"
          }
        }
      }
    },
    "UmsModels.UserSettings": {
      "description": "Webshop user settings",
      "type": "object",
      "properties": {
        "canOrder": {
          "description": "User can place orders.",
          "type": "boolean"
        },
        "showWishlist": {
          "description": "Show wishlist for this user.",
          "type": "boolean"
        },
        "customerWishlist": {
          "description": "User has access to wishlist of parent company.",
          "type": "boolean"
        },
        "showWarehouse": {
          "description": "User can use customer warehouse.",
          "type": "boolean"
        },
        "customerWarehouse": {
          "description": "User has access to parent warehouse.",
          "type": "boolean"
        },
        "canDownload": {
          "description": "User is allowed to download.",
          "type": "boolean"
        },
        "showTender": {
          "description": "User can retrieve tender information.",
          "type": "boolean"
        },
        "showOrder": {
          "description": "User can retrieve order information.",
          "type": "boolean"
        },
        "showDelivery": {
          "description": "User can retrieve delivery information.",
          "type": "boolean"
        },
        "showInvoice": {
          "description": "User can retrieve invoices.",
          "type": "boolean"
        },
        "canChangeShowDiscountProducts": {
          "description": "User is allowed to change the setting for showing products with a special price.",
          "type": "boolean"
        },
        "showDiscountProducts": {
          "description": "Show products with a special price for this user.",
          "type": "boolean"
        },
        "canChangeCanChangeShippingAddress": {
          "description": "User is allowed to change shipping address.",
          "type": "boolean"
        },
        "canChangeShippingAddress": {
          "description": "User is allowed to change shipping address for order.",
          "type": "boolean"
        },
        "canChangePassword": {
          "description": "User is allowed to change its password.",
          "type": "boolean"
        },
        "onlyShowOwnData": {
          "description": "Only show user's own data.",
          "type": "boolean"
        },
        "allowPartialPayments": {
          "description": "User can place orders with partial payment.",
          "type": "boolean"
        },
        "canRequestTender": {
          "description": "User can request tenders.",
          "type": "boolean"
        },
        "priceMode": {
          "description": "Display of prices for this user (\"W\" = show prices, \"N\" = don't show prices, \"B\" = display of prices is limited).",
          "type": "string"
        },
        "onlyShowGrossPrice": {
          "description": "Show only gross prices for this user.",
          "type": "boolean"
        },
        "canChangeCustomerOrdernumberRequired": {
          "description": "User is allowed to change the setting of requirement of customer order number.",
          "type": "boolean"
        },
        "customerOrdernumberRequired": {
          "description": "Customer order number is required for orders for this user.",
          "type": "boolean"
        },
        "defaultCustomerOrdernumber": {
          "description": "User default customer order number for this user.",
          "type": "string"
        },
        "canChangeCustomerReferenceRequired": {
          "description": "User is allowed to change setting of requirement of reference.",
          "type": "boolean"
        },
        "customerReferenceRequired": {
          "type": "boolean"
        },
        "defaultCustomerReference": {
          "description": "Use default customer reference for this user.",
          "type": "string"
        },
        "showErpCustomerReferences": {
          "description": "Show ERP references for this user.",
          "type": "boolean"
        },
        "showSearchCategory": {
          "description": "Show search categories for this user.",
          "type": "boolean"
        },
        "useEmployeeAddressAsShippingAddress": {
          "description": "User's address should be used as shipping address.",
          "type": "boolean"
        },
        "useEmployeeNameInShippingAddress": {
          "description": "User's name should be included in shipping address.",
          "type": "boolean"
        },
        "manageEmployees": {
          "description": "User can manage data of other employees.",
          "type": "boolean"
        },
        "umsRole": {
          "format": "int32",
          "description": "UMS Role ID, as retrievable from <a href=\"?deepLinking=true#/UmsAuthorizer/RolesForCustomer\">/api/UmsAuthorizer</a>.",
          "type": "integer"
        },
        "orderAttachmentRequired": {
          "description": "User is obliged to add an attachment to the order.",
          "type": "boolean"
        },
        "canAddChangeProjects": {
          "description": "User is allowed to add/edit projects.",
          "type": "boolean"
        },
        "manualAddressEntryMandatory": {
          "description": "User is obliged to manually enter address in store.",
          "type": "boolean"
        }
      }
    },
    "UmsModels.AuthorizationSettings": {
      "description": "Authorization settings",
      "type": "object",
      "properties": {
        "authorizableByEveryone": {
          "type": "boolean"
        },
        "canAuthorize": {
          "type": "boolean"
        },
        "daysBeforeAuthorizationReminder": {
          "format": "int32",
          "type": "integer"
        },
        "sendCCToNextAuthorizer": {
          "type": "boolean"
        },
        "authorizers": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/UmsModels.Authorizer"
          }
        }
      }
    },
    "WebUserBasic": {
      "required": [
        "userSettings",
        "authorizationSettings",
        "employee",
        "email",
        "username"
      ],
      "type": "object",
      "properties": {
        "customerId": {
          "format": "int32",
          "description": "Customer ID, as retrievable from <a href=\"?deepLinking=true#/Customer/GetAllCustomers\">/api/Customer</a>",
          "type": "integer"
        },
        "group": {
          "$ref": "#/definitions/UmsModels.UmsGroup",
          "description": "UMS group where user is part of, as retrievable from <a href=\"?deepLinking=true#/WebUser/GroupsByCustomerId\">/api/Webuser</a>"
        },
        "subGroup": {
          "$ref": "#/definitions/UmsModels.UmsGroup",
          "description": "UMS sub group where user is part of, as retrievable from <a href=\"?deepLinking=true#/WebUser/SubGroups\">/api/Webuser</a>"
        },
        "userSettings": {
          "$ref": "#/definitions/UmsModels.UserSettings",
          "description": "Webshop user settings"
        },
        "authorizationSettings": {
          "$ref": "#/definitions/UmsModels.AuthorizationSettings",
          "description": "Authorization settings"
        },
        "employee": {
          "$ref": "#/definitions/UmsModels.V1_15.Employee",
          "description": "Basic employee data"
        },
        "projects": {
          "description": "List of project IDs for webshop user, as retrievable from <a href=\"?deepLinking=true#/Project/GetAllProjects\">/api/Project</a>",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "shippingAddress": {
          "$ref": "#/definitions/ShippingAddressBasic",
          "description": "Shipping address for webshop user"
        },
        "id": {
          "format": "int32",
          "description": "Employee ID, as retrievable from <a href=\"?deepLinking=true#/Employee/GetCustomerEmployees\">/api/Employee</a>",
          "type": "integer"
        },
        "email": {
          "description": "E-mail address",
          "maxLength": 60,
          "type": "string"
        },
        "ccEmails": {
          "description": "CC emails for webshop user, separated by semicolon",
          "maxLength": 60,
          "type": "string"
        },
        "username": {
          "description": "User name",
          "maxLength": 60,
          "type": "string"
        },
        "currencyId": {
          "format": "int32",
          "description": "Id of currency, as retrievable from <a href=\"?deepLinking=true#/Currency/CurrencyCodes\">/api/Currency</a>",
          "type": "integer"
        },
        "defaultCompanyId": {
          "format": "int32",
          "description": "ID of default company for webuser, as retrievable from <a href=\"?deepLinking=true#/Company/GetAllCompanies\">/api/Company</a>",
          "type": "integer"
        },
        "defaultBranchId": {
          "format": "int32",
          "description": "ID of default branch for webuser, as retrievable from <a href=\"?deepLinking=true#/Branch/GetBranches\">/api/Branch</a>",
          "type": "integer"
        },
        "isActive": {
          "description": "Webuser login is activated",
          "type": "boolean"
        }
      }
    },
    "ShippingAddressBasic": {
      "required": [
        "address"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Shipping address ID, as retrievable from <a href=\"?deepLinking=true#/Shipping/Get\">/api/Shipping</a>",
          "type": "integer"
        },
        "address": {
          "$ref": "#/definitions/V1_9.Address",
          "description": "Address lines for shipping address"
        }
      }
    },
    "WmsStatusInformation": {
      "type": "object",
      "properties": {
        "interalTransportCode": {
          "type": "string"
        },
        "logisticOccupancyCode": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "V1_16.WorkOrder": {
      "required": [
        "companyId",
        "branchId"
      ],
      "type": "object",
      "properties": {
        "companyId": {
          "format": "int32",
          "description": "Company ID, as retrievable from <a href=\"?deepLinking=true#/Company/GetAllCompanies\">/api/Company</a>",
          "type": "integer"
        },
        "branchId": {
          "format": "int32",
          "description": "Branch ID, as retrievable from <a href=\"?deepLinking=true#/Branch/GetAllBranches\">/api/Branch</a>",
          "type": "integer"
        },
        "warehouseId": {
          "format": "int32",
          "description": "Warehouse ID",
          "type": "integer"
        },
        "orderId": {
          "format": "int32",
          "description": "Order ID, as retrievable from <a href=\"?deepLinking=true#/WorkOrder/GetAllWorkOrdersV112\">/api/WorkOrder</a>",
          "type": "integer"
        },
        "customerId": {
          "format": "int32",
          "description": "Customer ID, as retrievable from <a href=\"?deepLinking=true#/Customer/GetAllCustomers\">/api/Customer</a>",
          "type": "integer"
        },
        "customerName": {
          "description": "Customer name",
          "type": "string"
        },
        "projectId": {
          "description": "Project Id, as retrievable from <a href=\"?deepLinking=true#/Project/GetAllProjects\">/api/Project</a>.",
          "type": "string"
        },
        "projectName": {
          "description": "Project name",
          "type": "string"
        },
        "date": {
          "format": "date-time",
          "description": "Work order date",
          "type": "string"
        },
        "customerOrderNumber": {
          "description": "Ordernumber as submitted by customer",
          "type": "string"
        },
        "customerReference": {
          "description": "Reference as submitted by customer",
          "type": "string"
        },
        "estimatedCosts": {
          "format": "double",
          "description": "Estimated costs of the workorder",
          "type": "number"
        },
        "estimatedHours": {
          "format": "double",
          "description": "Estimated hours for this workorder",
          "type": "number"
        },
        "netAmount": {
          "$ref": "#/definitions/Amount",
          "description": "Net cash amount of workorder"
        },
        "status": {
          "format": "int32",
          "description": "Status of order, where 10 = Active, 20 = Closed (by invoice) , 25 = Closed (cash payment) , 30 = Cash book processed , 97 = Cancelled, 98 = Processed, 99 = Blocked",
          "type": "integer"
        },
        "description": {
          "description": "Work order description",
          "type": "string"
        },
        "workOrderClass": {
          "$ref": "#/definitions/WorkOrderClass",
          "description": "Classification of work order"
        },
        "type": {
          "description": "Work order type (0=External, 1=Maintenance, 2=Inspection, 3=Internal)",
          "enum": [
            "External",
            "Maintenance",
            "Inspection",
            "Internal"
          ],
          "type": "string"
        },
        "responsibleEmployeeId": {
          "format": "int32",
          "description": "ID of employee who is assigned to this workorder, retrievable from <a href=\"?deepLinking=true#/Employee/GetAllCustomerEmployeesV111\">/api/Employee</a>",
          "type": "integer"
        },
        "responsibleEmployeeName": {
          "description": "Name of employee who is assigned to this workorder",
          "type": "string"
        },
        "shippingMethod": {
          "$ref": "#/definitions/ShippingMethod",
          "description": "Shipping method for this order"
        },
        "shippingAddress": {
          "$ref": "#/definitions/V1_9.ShippingAddress",
          "description": "Shipping address"
        },
        "schedule": {
          "$ref": "#/definitions/Schedule",
          "description": "Scheduled dates (from / untill) for workorder"
        },
        "details": {
          "description": "Workorder details",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1_12.WorkOrderDetail"
          }
        },
        "attachedFiles": {
          "description": "Files attached to work order",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AttachedFile"
          }
        }
      }
    },
    "WorkOrderClass": {
      "description": "Classification of workorder",
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Work order classification Id",
          "type": "integer"
        },
        "type": {
          "description": "Work order type (0=External, 1=Maintenance, 2=Inspection, 3=Internal)",
          "enum": [
            "External",
            "Maintenance",
            "Inspection",
            "Internal"
          ],
          "type": "string"
        },
        "description": {
          "description": "Description of classification",
          "type": "string"
        },
        "percentage": {
          "format": "double",
          "description": "Percentage of discount or surcharge, where a negative number indicates a surcharge",
          "type": "number"
        }
      }
    },
    "Schedule": {
      "type": "object",
      "properties": {
        "startTime": {
          "format": "date-time",
          "description": "Starting time of schedule item",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "End time of schedule item",
          "type": "string"
        }
      }
    },
    "V1_12.WorkOrderDetail": {
      "type": "object",
      "properties": {
        "orderId": {
          "format": "int32",
          "description": "WorkOrder ID, as retrievable from <a href=\"?deepLinking=true#/WorkOrder/GetAllWorkOrders\">/api/WorkOrder</a>",
          "type": "integer"
        },
        "orderLineId": {
          "format": "int32",
          "description": "WorkOrder line ID",
          "type": "integer"
        },
        "description": {
          "description": "Description",
          "type": "string"
        },
        "orderSubLineId": {
          "format": "int32",
          "description": "Workorder subline ID",
          "type": "integer"
        },
        "lineType": {
          "description": "Linetype: 0=Article, 2=Costs, 3=Text, 4=Composition, 5=Component, 6=Hours",
          "enum": [
            "Product",
            "Special",
            "Cost",
            "Text",
            "Composition",
            "Component",
            "Hours"
          ],
          "type": "string"
        },
        "cost": {
          "$ref": "#/definitions/CostDetail",
          "description": "Cost for workorder (if work order is of line type 2)"
        },
        "product": {
          "$ref": "#/definitions/WorkOrderProduct",
          "description": "Product for work order (if work order is of line type 0)"
        },
        "hours": {
          "$ref": "#/definitions/WorkOrderHours",
          "description": "Hours for work order (if work order is of line type 6)"
        }
      }
    },
    "CostDetail": {
      "required": [
        "costId"
      ],
      "type": "object",
      "properties": {
        "costId": {
          "format": "int32",
          "description": "Cost Id, as retrievable from <a href=\"?deepLinking=true#/CostType/GetAllCostTypes\">/api/CostType</a>",
          "type": "integer"
        },
        "amount": {
          "$ref": "#/definitions/Amount"
        }
      }
    },
    "WorkOrderProduct": {
      "type": "object",
      "properties": {
        "productId": {
          "description": "Product ID, as retrievable from as retrievable from <a href=\"?deepLinking=true#/Product/ShopProductInformation\">/api/Product</a>",
          "type": "string"
        },
        "description": {
          "description": "Product description (max length of 45 characters).",
          "maxLength": 45,
          "type": "string"
        },
        "quantityRequired": {
          "format": "double",
          "description": "Required quantity of product",
          "type": "number"
        },
        "quantityMadeAvailable": {
          "format": "double",
          "description": "Quantity that is set aside for workorder",
          "type": "number"
        }
      }
    },
    "WorkOrderHours": {
      "type": "object",
      "properties": {
        "startTime": {
          "format": "date-time",
          "description": "Start time of work order",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "Time when work order is finished",
          "type": "string"
        },
        "employeeId": {
          "format": "int32",
          "description": "Id of employee to which work order hours are assigned, as retrievable from <a href=\"?deepLinking=true#/Employee/GetAllCustomerEmployeesV111\">/api/Employee</a>",
          "type": "integer"
        },
        "employeeName": {
          "description": "Name of employee to which work order hours are assigned",
          "type": "string"
        },
        "job": {
          "$ref": "#/definitions/Job",
          "description": "Job undertaken during work order hours"
        }
      }
    },
    "Job": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Job ID, as retrievable from <a href=\"?deepLinking=true#/WorkOrder/GetJobs \">/api/WorkOrder/Job</a>",
          "type": "integer"
        },
        "description": {
          "description": "Job description",
          "type": "string"
        },
        "hourlyRate": {
          "format": "double",
          "description": "Hourly rate for job",
          "type": "number"
        }
      }
    },
    "WorkOrderRequest": {
      "required": [
        "companyId",
        "branchId",
        "customerId",
        "description"
      ],
      "type": "object",
      "properties": {
        "companyId": {
          "format": "int32",
          "description": "Company ID, as retrievable from <a href=\"?deepLinking=true#/Company/GetAllCompanies\">/api/Company</a>",
          "type": "integer"
        },
        "branchId": {
          "format": "int32",
          "description": "Branch ID, as retrievable from <a href=\"?deepLinking=true#/Branch/GetAllBranches\">/api/Branch</a>",
          "type": "integer"
        },
        "warehouseId": {
          "format": "int32",
          "description": "Warehouse ID",
          "type": "integer"
        },
        "customerId": {
          "format": "int32",
          "description": "Customer ID, as retrievable from <a href=\"?deepLinking=true#/Customer/GetAllCustomers\">/api/Customer</a>",
          "type": "integer"
        },
        "productId": {
          "description": "Product ID, as retrievable from <a href=\"?deepLinking=true#/Product/ShopProductInformation\">/api/Product</a>",
          "type": "string"
        },
        "projectId": {
          "description": "Project Id, as retrievable from <a href=\"?deepLinking=true#/Project/GetAllProjects\">/api/Project</a>.",
          "type": "string"
        },
        "date": {
          "format": "date-time",
          "description": "Work order date",
          "type": "string"
        },
        "description": {
          "description": "Work order description",
          "type": "string"
        },
        "customerOrderNumber": {
          "description": "Ordernumber as submitted by customer",
          "type": "string"
        },
        "customerReference": {
          "description": "Reference as submitted by customer",
          "type": "string"
        },
        "salesPersonId": {
          "format": "int32",
          "description": "ID of employee who is assigned as sales person for this workorder, as retrievable from <a href=\"?deepLinking=true#/Employee/GetAllCustomerEmployeesV111\">/api/Employee</a>",
          "type": "integer"
        },
        "responsibleEmployeeId": {
          "format": "int32",
          "description": "ID of employee who is assigned to this workorder, as retrievable from <a href=\"?deepLinking=true#/Employee/GetAllCustomerEmployeesV111\">/api/Employee</a>",
          "type": "integer"
        },
        "workOrderClassId": {
          "format": "int32",
          "description": "Work order classification Id, as retrievable from <a href=\"?deepLinking=true#/WorkOrder/GetWorkOrderClasses\">/api/WorkOrder</a>. \r\nIf Id = 0, default of customer will be used.",
          "type": "integer"
        },
        "netAmount": {
          "$ref": "#/definitions/Amount",
          "description": "Net cash amount of workorder"
        },
        "estimatedCosts": {
          "$ref": "#/definitions/Amount",
          "description": "Estimated costs of work order"
        },
        "estimatedHours": {
          "format": "double",
          "description": "Estimated hours for this work order",
          "type": "number"
        },
        "shippingMethodId": {
          "format": "int32",
          "description": "Shipping method Id for this order, as retrievable from <a href=\"?deepLinking=true#/Shipping/ShippingMethods\">/api/Shippig</a>",
          "type": "integer"
        },
        "shippingAddress": {
          "$ref": "#/definitions/V1_9.ShippingAddress",
          "description": "Shipping address for work order"
        },
        "schedule": {
          "$ref": "#/definitions/Schedule",
          "description": "Scheduled dates (from / untill) for workorder"
        },
        "details": {
          "description": "Workorder details",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1_12.WorkOrderDetail"
          }
        }
      }
    },
    "WorkOrderDetailRequest": {
      "required": [
        "companyId",
        "branchId",
        "orderId"
      ],
      "type": "object",
      "properties": {
        "companyId": {
          "format": "int32",
          "description": "Company ID, as retrievable from <a href=\"?deepLinking=true#/Company/GetAllCompanies\">/api/Company</a>",
          "type": "integer"
        },
        "branchId": {
          "format": "int32",
          "description": "Branch ID, as retrievable from <a href=\"?deepLinking=true#/Branch/GetAllBranches\">/api/Branch</a>",
          "type": "integer"
        },
        "orderId": {
          "format": "int32",
          "description": "WorkOrder ID, as retrievable from <a href=\"?deepLinking=true#/WorkOrder/GetAllWorkOrders\">/api/WorkOrder</a>",
          "type": "integer"
        },
        "description": {
          "description": "Description (applicable if work order is of line type 3)",
          "type": "string"
        },
        "cost": {
          "$ref": "#/definitions/CostDetail",
          "description": "Cost for workorder (if work order is of line type 2)"
        },
        "lineType": {
          "description": "Linetype: 0=Article, 2=Costs, 3=Text, 6=Hours",
          "enum": [
            "Product",
            "Special",
            "Cost",
            "Text",
            "Composition",
            "Component",
            "Hours"
          ],
          "type": "string"
        },
        "product": {
          "$ref": "#/definitions/WorkOrderProduct",
          "description": "Product for work order (if work order is of line type 0)"
        },
        "hours": {
          "$ref": "#/definitions/WorkOrderHours",
          "description": "Hours for work order (if work order is of line type 6)"
        },
        "warranty": {
          "description": "Covered by warranty",
          "type": "boolean"
        },
        "alwaysTakeTextline": {
          "description": "Always take textline (default = true)",
          "type": "boolean"
        },
        "idealPackagingAllowanceApplied": {
          "description": "Ideal packaging allowance applied (default = false)",
          "type": "boolean"
        }
      }
    },
    "WorkOrderDetailChangeRequest": {
      "required": [
        "companyId",
        "branchId",
        "orderId"
      ],
      "type": "object",
      "properties": {
        "companyId": {
          "format": "int32",
          "description": "Company ID, as retrievable from <a href=\"?deepLinking=true#/Company/GetAllCompanies\">/api/Company</a>",
          "type": "integer"
        },
        "branchId": {
          "format": "int32",
          "description": "Branch ID, as retrievable from <a href=\"?deepLinking=true#/Branch/GetAllBranches\">/api/Branch</a>",
          "type": "integer"
        },
        "orderId": {
          "format": "int32",
          "description": "WorkOrder ID, as retrievable from <a href=\"?deepLinking=true#/WorkOrder/GetAllWorkOrders\">/api/WorkOrder</a>",
          "type": "integer"
        },
        "orderLineId": {
          "format": "int32",
          "description": "WorkOrder line ID",
          "type": "integer"
        },
        "orderSubLineId": {
          "format": "int32",
          "description": "Workorder subline ID",
          "type": "integer"
        },
        "description": {
          "description": "Description (applicable if work order is of line type 3)",
          "type": "string"
        },
        "cost": {
          "$ref": "#/definitions/CostDetail",
          "description": "Cost for workorder (if work order is of line type 2)"
        },
        "lineType": {
          "description": "Linetype: 0=Article, 2=Costs, 3=Text, 4=Composition, 6=Hours",
          "enum": [
            "Product",
            "Special",
            "Cost",
            "Text",
            "Composition",
            "Component",
            "Hours"
          ],
          "type": "string"
        },
        "product": {
          "$ref": "#/definitions/WorkOrderProduct",
          "description": "Product for work order (if work order is of line type 0)"
        },
        "hours": {
          "$ref": "#/definitions/WorkOrderHours",
          "description": "Hours for work order (if work order is of line type 6)"
        },
        "warranty": {
          "description": "Covered by warranty",
          "type": "boolean"
        },
        "alwaysTakeTextline": {
          "description": "Always take textline (default = true)",
          "type": "boolean"
        },
        "idealPackagingAllowanceApplied": {
          "description": "Ideal packaging allowance applied (default = false)",
          "type": "boolean"
        }
      }
    },
    "WorkOrderDescriptionRequest": {
      "required": [
        "companyId",
        "branchId",
        "orderId",
        "description"
      ],
      "type": "object",
      "properties": {
        "companyId": {
          "format": "int32",
          "description": "Company ID, as retrievable from <a href=\"?deepLinking=true#/Company/GetAllCompanies\">/api/Company</a>",
          "type": "integer"
        },
        "branchId": {
          "format": "int32",
          "description": "Branch ID, as retrievable from <a href=\"?deepLinking=true#/Branch/GetAllBranches\">/api/Branch</a>",
          "type": "integer"
        },
        "orderId": {
          "format": "int32",
          "description": "WorkOrder ID, as retrievable from <a href=\"?deepLinking=true#/WorkOrder/GetAllWorkOrders\">/api/WorkOrder</a>",
          "type": "integer"
        },
        "description": {
          "description": "Work order description",
          "maxLength": 45,
          "type": "string"
        }
      }
    },
    "WorkOrderDateRequest": {
      "required": [
        "companyId",
        "branchId",
        "orderId",
        "date"
      ],
      "type": "object",
      "properties": {
        "companyId": {
          "format": "int32",
          "description": "Company ID, as retrievable from <a href=\"?deepLinking=true#/Company/GetAllCompanies\">/api/Company</a>",
          "type": "integer"
        },
        "branchId": {
          "format": "int32",
          "description": "Branch ID, as retrievable from <a href=\"?deepLinking=true#/Branch/GetAllBranches\">/api/Branch</a>",
          "type": "integer"
        },
        "orderId": {
          "format": "int32",
          "description": "WorkOrder ID, as retrievable from <a href=\"?deepLinking=true#/WorkOrder/GetAllWorkOrders\">/api/WorkOrder</a>",
          "type": "integer"
        },
        "date": {
          "format": "date-time",
          "description": "Work order date",
          "type": "string"
        }
      }
    },
    "WorkOrderSchedule": {
      "type": "object",
      "properties": {
        "scheduleId": {
          "format": "int32",
          "description": "Schedule ID, as retrievable from <a href=\"?deepLinking=true#/WorkOrder/GetSchedule\">/api/WorkOrder/Schedule</a>",
          "type": "integer"
        },
        "companyId": {
          "format": "int32",
          "description": "Company ID, as retrievable from <a href=\"?deepLinking=true#/Company/GetAllCompanies\">/api/Company</a>",
          "type": "integer"
        },
        "branchId": {
          "format": "int32",
          "description": "Branch ID, as retrievable from <a href=\"?deepLinking=true#/Branch/GetAllBranches\">/api/Branch</a>",
          "type": "integer"
        },
        "workOrderId": {
          "format": "int32",
          "description": "Order ID, as retrievable from <a href=\"?deepLinking=true#/WorkOrder/GetAllWorkOrdersV112\">/api/WorkOrder</a>",
          "type": "integer"
        },
        "employeeId": {
          "format": "int32",
          "description": "ID of employee assigned to this workorder, retrievable from <a href=\"?deepLinking=true#/Employee/GetAllCustomerEmployeesV111\">/api/Employee</a>",
          "type": "integer"
        },
        "employeeName": {
          "description": "Name of employee assigned to this workorder",
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "description": "Starting time of schedule item",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "End time of schedule item",
          "type": "string"
        },
        "jobId": {
          "format": "int32",
          "description": "Job ID, as retrievable from <a href=\"?deepLinking=true#/WorkOrder/GetJobs \">/api/WorkOrder/Job</a>",
          "type": "integer"
        },
        "jobDescription": {
          "description": "Job description. Please note: this description may differ from the default retrieved via\r\n<a href=\"?deepLinking=true#/WorkOrder/GetJobs \">/api/WorkOrder/Job</a>, since the \r\ndescription can be manually modified in ERP.",
          "type": "string"
        },
        "binding": {
          "description": "Scheduled job is binding and cannot be rescheduled",
          "type": "boolean"
        },
        "firstScheduleId": {
          "format": "int32",
          "description": "ID of first scheduled job",
          "type": "integer"
        }
      }
    },
    "WorkOrderScheduleRequest": {
      "required": [
        "employeeId",
        "jobId",
        "jobDescription"
      ],
      "type": "object",
      "properties": {
        "companyId": {
          "format": "int32",
          "description": "Company ID, as retrievable from <a href=\"?deepLinking=true#/Company/GetAllCompanies\">/api/Company</a>",
          "type": "integer"
        },
        "branchId": {
          "format": "int32",
          "description": "Branch ID, as retrievable from <a href=\"?deepLinking=true#/Branch/GetAllBranches\">/api/Branch</a>",
          "type": "integer"
        },
        "workOrderId": {
          "format": "int32",
          "description": "Order ID, as retrievable from <a href=\"?deepLinking=true#/WorkOrder/GetAllWorkOrdersV112\">/api/WorkOrder</a>",
          "type": "integer"
        },
        "scheduleId": {
          "format": "int32",
          "description": "Schedule ID (only required when updating a schedule item), as retrievable from <a href=\"?deepLinking=true#/WorkOrder/GetSchedule\">/api/WorkOrder/Schedule</a>",
          "type": "integer"
        },
        "employeeId": {
          "format": "int32",
          "description": "ID of employee who is assigned to this workorder, retrievable from <a href=\"?deepLinking=true#/Employee/GetAllCustomerEmployeesV111\">/api/Employee</a>",
          "type": "integer"
        },
        "startTime": {
          "format": "date-time",
          "description": "Starting time of schedule item",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "End time of schedule item",
          "type": "string"
        },
        "jobId": {
          "format": "int32",
          "description": "Job ID, as retrievable from <a href=\"?deepLinking=true#/WorkOrder/GetJobs \">/api/WorkOrder/Job</a>",
          "type": "integer"
        },
        "jobDescription": {
          "description": "Job description. Please note: this description may differ from the default retrieved via\r\n<a href=\"?deepLinking=true#/WorkOrder/GetJobs \">/api/WorkOrder/Job</a>, since the \r\ndescription can be manually modified in ERP.",
          "type": "string"
        },
        "binding": {
          "description": "Scheduled job is binding and cannot be rescheduled",
          "type": "boolean"
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "name": "Authorization",
      "in": "header",
      "type": "apiKey",
      "description": "bearer <token>"
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}